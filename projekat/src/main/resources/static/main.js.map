{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/admin-komponente/admin-komponent.module.ts","webpack:///./src/app/admin-komponente/firme/firme.component.html","webpack:///./src/app/admin-komponente/firme/firme.component.scss","webpack:///./src/app/admin-komponente/firme/firme.component.ts","webpack:///./src/app/admin-komponente/firme/firme.routing.ts","webpack:///./src/app/admin-komponente/firme/izlistaj-firme/izlistaj-firme.component.html","webpack:///./src/app/admin-komponente/firme/izlistaj-firme/izlistaj-firme.component.scss","webpack:///./src/app/admin-komponente/firme/izlistaj-firme/izlistaj-firme.component.ts","webpack:///./src/app/admin-komponente/firme/registruj-firmu/registruj-firmu.component.html","webpack:///./src/app/admin-komponente/firme/registruj-firmu/registruj-firmu.component.scss","webpack:///./src/app/admin-komponente/firme/registruj-firmu/registruj-firmu.component.ts","webpack:///./src/app/admin-komponente/institucije/institucije.component.html","webpack:///./src/app/admin-komponente/institucije/institucije.component.scss","webpack:///./src/app/admin-komponente/institucije/institucije.component.ts","webpack:///./src/app/admin-komponente/institucije/institucije.routing.ts","webpack:///./src/app/admin-komponente/institucije/izlistaj-institucije/izlistaj-institucije.component.html","webpack:///./src/app/admin-komponente/institucije/izlistaj-institucije/izlistaj-institucije.component.scss","webpack:///./src/app/admin-komponente/institucije/izlistaj-institucije/izlistaj-institucije.component.ts","webpack:///./src/app/admin-komponente/institucije/registruj-instituciju/registruj-instituciju.component.html","webpack:///./src/app/admin-komponente/institucije/registruj-instituciju/registruj-instituciju.component.scss","webpack:///./src/app/admin-komponente/institucije/registruj-instituciju/registruj-instituciju.component.ts","webpack:///./src/app/admin-komponente/navbar-admin/navbar-admin.component.html","webpack:///./src/app/admin-komponente/navbar-admin/navbar-admin.component.scss","webpack:///./src/app/admin-komponente/navbar-admin/navbar-admin.component.ts","webpack:///./src/app/admin-komponente/stan/stan.component.html","webpack:///./src/app/admin-komponente/stan/stan.component.scss","webpack:///./src/app/admin-komponente/stan/stan.component.ts","webpack:///./src/app/admin-komponente/stanar/stanar.component.html","webpack:///./src/app/admin-komponente/stanar/stanar.component.scss","webpack:///./src/app/admin-komponente/stanar/stanar.component.ts","webpack:///./src/app/admin-komponente/stanari/izlistaj-stanare/izlistaj-stanare.component.html","webpack:///./src/app/admin-komponente/stanari/izlistaj-stanare/izlistaj-stanare.component.scss","webpack:///./src/app/admin-komponente/stanari/izlistaj-stanare/izlistaj-stanare.component.ts","webpack:///./src/app/admin-komponente/stanari/registruj-stanara/registruj-stanara.component.html","webpack:///./src/app/admin-komponente/stanari/registruj-stanara/registruj-stanara.component.scss","webpack:///./src/app/admin-komponente/stanari/registruj-stanara/registruj-stanara.component.ts","webpack:///./src/app/admin-komponente/stanari/stanari.component.html","webpack:///./src/app/admin-komponente/stanari/stanari.component.scss","webpack:///./src/app/admin-komponente/stanari/stanari.component.ts","webpack:///./src/app/admin-komponente/stanari/stanari.routing.ts","webpack:///./src/app/admin-komponente/zgrade/dodaj-zgradu/dodaj-zgradu.component.html","webpack:///./src/app/admin-komponente/zgrade/dodaj-zgradu/dodaj-zgradu.component.scss","webpack:///./src/app/admin-komponente/zgrade/dodaj-zgradu/dodaj-zgradu.component.ts","webpack:///./src/app/admin-komponente/zgrade/izlistaj-zgrade/izlistaj-zgrade.component.html","webpack:///./src/app/admin-komponente/zgrade/izlistaj-zgrade/izlistaj-zgrade.component.scss","webpack:///./src/app/admin-komponente/zgrade/izlistaj-zgrade/izlistaj-zgrade.component.ts","webpack:///./src/app/admin-komponente/zgrade/zgrade.component.html","webpack:///./src/app/admin-komponente/zgrade/zgrade.component.scss","webpack:///./src/app/admin-komponente/zgrade/zgrade.component.ts","webpack:///./src/app/admin-komponente/zgrade/zgrade.routing.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.ts","webpack:///./src/app/interceptors/auth.interceptor.ts","webpack:///./src/app/kvarovi-odgovornog-lica/kvarovi-odgovornog-lica.component.html","webpack:///./src/app/kvarovi-odgovornog-lica/kvarovi-odgovornog-lica.component.scss","webpack:///./src/app/kvarovi-odgovornog-lica/kvarovi-odgovornog-lica.component.ts","webpack:///./src/app/logovanje/logovanje.component.html","webpack:///./src/app/logovanje/logovanje.component.scss","webpack:///./src/app/logovanje/logovanje.component.ts","webpack:///./src/app/model/VrstaPitanja.ts","webpack:///./src/app/model/zgrada.ts","webpack:///./src/app/navbar/navbar.component.html","webpack:///./src/app/navbar/navbar.component.scss","webpack:///./src/app/navbar/navbar.component.ts","webpack:///./src/app/not-found-page/not-found-page.component.html","webpack:///./src/app/not-found-page/not-found-page.component.scss","webpack:///./src/app/not-found-page/not-found-page.component.ts","webpack:///./src/app/paginacija/pager/pager.component.html","webpack:///./src/app/paginacija/pager/pager.component.scss","webpack:///./src/app/paginacija/pager/pager.component.ts","webpack:///./src/app/paginacija/paginacija.module.ts","webpack:///./src/app/paginacija/paginacija/paginacija.component.html","webpack:///./src/app/paginacija/paginacija/paginacija.component.scss","webpack:///./src/app/paginacija/paginacija/paginacija.component.ts","webpack:///./src/app/pocetna/pocetna.component.html","webpack:///./src/app/pocetna/pocetna.component.scss","webpack:///./src/app/pocetna/pocetna.component.ts","webpack:///./src/app/promena-lozinke/promena-lozinke.component.html","webpack:///./src/app/promena-lozinke/promena-lozinke.component.scss","webpack:///./src/app/promena-lozinke/promena-lozinke.component.ts","webpack:///./src/app/services/administrator/administrator.service.ts","webpack:///./src/app/services/anketa/anketa.service.ts","webpack:///./src/app/services/authentication/authentication.service.ts","webpack:///./src/app/services/kvar/kvar.service.ts","webpack:///./src/app/services/login-guard/login-guard.service.ts","webpack:///./src/app/services/role-guard/role-guard.service.ts","webpack:///./src/app/services/util/util.service.ts","webpack:///./src/app/services/zgrada/zgrada.service.ts","webpack:///./src/app/zgrada/ankete/dodaj-pitanje/dodaj-pitanje.component.html","webpack:///./src/app/zgrada/ankete/dodaj-pitanje/dodaj-pitanje.component.scss","webpack:///./src/app/zgrada/ankete/dodaj-pitanje/dodaj-pitanje.component.ts","webpack:///./src/app/zgrada/ankete/izlistaj-ankete/izlistaj-ankete.component.html","webpack:///./src/app/zgrada/ankete/izlistaj-ankete/izlistaj-ankete.component.scss","webpack:///./src/app/zgrada/ankete/izlistaj-ankete/izlistaj-ankete.component.ts","webpack:///./src/app/zgrada/ankete/pitanje/pitanje.component.html","webpack:///./src/app/zgrada/ankete/pitanje/pitanje.component.scss","webpack:///./src/app/zgrada/ankete/pitanje/pitanje.component.ts","webpack:///./src/app/zgrada/kvarovi/dodaj-kvar/dodaj-kvar.component.html","webpack:///./src/app/zgrada/kvarovi/dodaj-kvar/dodaj-kvar.component.ts","webpack:///./src/app/zgrada/kvarovi/izmena-kvara/izmena-kvara.component.html","webpack:///./src/app/zgrada/kvarovi/izmena-kvara/izmena-kvara.component.ts","webpack:///./src/app/zgrada/kvarovi/komentari/komentari.component.html","webpack:///./src/app/zgrada/kvarovi/komentari/komentari.component.ts","webpack:///./src/app/zgrada/kvarovi/kvar/kvar.component.html","webpack:///./src/app/zgrada/kvarovi/kvar/kvar.component.scss","webpack:///./src/app/zgrada/kvarovi/kvar/kvar.component.ts","webpack:///./src/app/zgrada/kvarovi/kvarovi.component.html","webpack:///./src/app/zgrada/kvarovi/kvarovi.component.ts","webpack:///./src/app/zgrada/kvarovi/moguci-odgovorni/moguci-odgovorni.modal.html","webpack:///./src/app/zgrada/kvarovi/moguci-odgovorni/moguci-odgovorni.modal.ts","webpack:///./src/app/zgrada/kvarovi/zakazi-popravku/zakazi-popravku.component.html","webpack:///./src/app/zgrada/kvarovi/zakazi-popravku/zakazi-popravku.component.ts","webpack:///./src/app/zgrada/navbar-zgrada/navbar-zgrada.component.html","webpack:///./src/app/zgrada/navbar-zgrada/navbar-zgrada.component.ts","webpack:///./src/app/zgrada/obavestenja/dodaj-obavestenje/dodaj-obavestenje.component.html","webpack:///./src/app/zgrada/obavestenja/dodaj-obavestenje/dodaj-obavestenje.component.ts","webpack:///./src/app/zgrada/obavestenja/obavestenja.component.html","webpack:///./src/app/zgrada/obavestenja/obavestenja.component.ts","webpack:///./src/app/zgrada/sastanci/dodaj-sastanak/dodaj-sastanak.component.html","webpack:///./src/app/zgrada/sastanci/dodaj-sastanak/dodaj-sastanak.component.ts","webpack:///./src/app/zgrada/sastanci/izmena-sastanka/izmena-sastanka.component.html","webpack:///./src/app/zgrada/sastanci/izmena-sastanka/izmena-sastanka.component.ts","webpack:///./src/app/zgrada/sastanci/sastanci.component.html","webpack:///./src/app/zgrada/sastanci/sastanci.component.ts","webpack:///./src/app/zgrada/stanovi/stanovi.component.html","webpack:///./src/app/zgrada/stanovi/stanovi.component.ts","webpack:///./src/app/zgrada/tacke/dodaj-ptdr/dodaj-ptdr.component.html","webpack:///./src/app/zgrada/tacke/dodaj-ptdr/dodaj-ptdr.component.ts","webpack:///./src/app/zgrada/tacke/tacke-sastanci/tacke-sastanci.component.html","webpack:///./src/app/zgrada/tacke/tacke-sastanci/tacke-sastanci.component.ts","webpack:///./src/app/zgrada/tacke/tacke.component.html","webpack:///./src/app/zgrada/tacke/tacke.component.ts","webpack:///./src/app/zgrada/zgrada.component.html","webpack:///./src/app/zgrada/zgrada.component.scss","webpack:///./src/app/zgrada/zgrada.component.ts","webpack:///./src/app/zgrada/zgrada.module.ts","webpack:///./src/app/zgrada/zgrada.routing.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ToastrModule } from 'ngx-toastr';\n\nimport { PaginacijaModule } from '../paginacija/paginacija.module';\nimport { NavbarAdminComponent } from './navbar-admin/navbar-admin.component';\nimport { ZgradeComponent } from './zgrade/zgrade.component';\nimport { DodajZgraduComponent } from './zgrade/dodaj-zgradu/dodaj-zgradu.component';\nimport { IzlistajZgradeComponent } from './zgrade/izlistaj-zgrade/izlistaj-zgrade.component';\nimport { StanariComponent } from './stanari/stanari.component';\nimport { RegistrujInstitucijuComponent } from './institucije/registruj-instituciju/registruj-instituciju.component';\nimport { InstitucijeComponent } from './institucije/institucije.component';\nimport { FirmeComponent } from './firme/firme.component';\nimport { RegistrujFirmuComponent } from './firme/registruj-firmu/registruj-firmu.component';\nimport { RegistrujStanaraComponent } from './stanari/registruj-stanara/registruj-stanara.component';\nimport { StanComponent } from './stan/stan.component';\nimport { IzlistajStanareComponent } from './stanari/izlistaj-stanare/izlistaj-stanare.component';\nimport { IzlistajFirmeComponent } from './firme/izlistaj-firme/izlistaj-firme.component';\nimport { IzlistajInstitucijeComponent } from './institucije/izlistaj-institucije/izlistaj-institucije.component';\nimport { StanarComponent } from './stanar/stanar.component';\n\n@NgModule({\n    declarations: [\n        NavbarAdminComponent,\n        ZgradeComponent,\n        DodajZgraduComponent,\n        IzlistajZgradeComponent,\n        RegistrujStanaraComponent,\n        RegistrujFirmuComponent,\n        RegistrujInstitucijuComponent,\n        StanariComponent,\n        InstitucijeComponent,\n        FirmeComponent,\n        StanComponent,\n        IzlistajStanareComponent,\n        IzlistajFirmeComponent,\n        IzlistajInstitucijeComponent,\n        StanarComponent\n        \n    ],\n    exports: [NavbarAdminComponent],\n    imports: [\n        PaginacijaModule,\n        BrowserModule,\n        FormsModule,\n        ReactiveFormsModule,\n        CommonModule,\n        BrowserAnimationsModule, // required animations module\n        ToastrModule.forRoot({\n            timeOut: 5000,\n            positionClass: 'toast-top-center',\n            preventDuplicates: true,\n        }),\n        HttpClientModule,\n        RouterModule\n    ]\n})\nexport class AdminKomponenteModule { }","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"col-md-12\\\">\\n    <div class=\\\"navbar navbar-expand-lg navbar-light bg-light navbar-fixed-top\\\">\\n      <div class=\\\"collapse navbar-collapse\\\">\\n        <ul class=\\\"navbar-nav mr-auto\\\">\\n          <li class=\\\"nav-item\\\" [class.active]=\\\"funkcionalnost === 'registracija'\\\">\\n            <button class=\\\"btn\\\" [class.btn-primary]=\\\"funkcionalnost === 'registracija'\\\" [class.btn-outline-primary]=\\\"funkcionalnost !== 'registracija'\\\"\\n            style=\\\"cursor: pointer;\\\" (click)=\\\"clickedFun('registracija')\\\"><b>Registracija</b></button>\\n          </li>\\n          <li class=\\\"nav-item\\\" [class.active]=\\\"funkcionalnost === 'pregled'\\\">\\n            <button class=\\\"btn\\\" [class.btn-primary]=\\\"funkcionalnost === 'pregled'\\\" [class.btn-outline-primary]=\\\"funkcionalnost !== 'pregled'\\\"\\n            style=\\\"cursor: pointer;\\\" (click)=\\\"clickedFun('pregled')\\\"><b>Pregled</b></button>\\n          </li>\\n        </ul>\\n      </div>\\n    </div>\\n  </div>\\n  <br>\\n  <router-outlet></router-outlet>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluLWtvbXBvbmVudGUvZmlybWUvZmlybWUuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-firme',\n  templateUrl: './firme.component.html',\n  styleUrls: ['./firme.component.scss']\n})\nexport class FirmeComponent implements OnInit {\n    funkcionalnost: string;\n\n    constructor(\n        private router: Router\n    ) { }\n\n    ngOnInit() {\n        let url = this.router.url;\n        let splitovanUrl = String(url).split(\"/\");\n        if (splitovanUrl[splitovanUrl.length - 1] === \"firme\") {\n            this.funkcionalnost = \"registracija\";\n        } else {\n            this.funkcionalnost = splitovanUrl[splitovanUrl.length - 1];\n        }\n    }\n\n    clickedFun(funkcionalnost: string){\n        this.funkcionalnost = funkcionalnost;\n        this.router.navigate([\"/firme/\" + funkcionalnost]);\n    }\n\n}\n","import { Routes } from '@angular/router';\nimport { RegistrujFirmuComponent } from './registruj-firmu/registruj-firmu.component';\nimport { IzlistajFirmeComponent } from './izlistaj-firme/izlistaj-firme.component';\n\nexport const firmeRouting: Routes = [\n    { path: '', component: RegistrujFirmuComponent , pathMatch: 'full'},\n    { path: 'registracija', component: RegistrujFirmuComponent},\n    { path: 'pregled', component: IzlistajFirmeComponent}\n];","module.exports = \"<div class=\\\"row justify-content-md-center\\\" *ngIf=\\\"firme !== undefined\\\">\\n    <div class=\\\"col-md-10\\\">\\n      <div class=\\\"row\\\">\\n        <label class=\\\"col-md-1\\\">Prikazi: </label>\\n        <select class=\\\"form-control col-md-1\\\" id=\\\"prikaz\\\" [(ngModel)]=\\\"pager.velicinaStrane\\\" (change)=\\\"promeniVelicinu()\\\">\\n          <option value=\\\"5\\\">5</option>\\n          <option value=\\\"10\\\">10</option>\\n          <option value=\\\"25\\\">25</option>\\n          <option value=\\\"50\\\">50</option>\\n        </select>\\n        <label class=\\\"col-md-5\\\"> </label>\\n        <input type=\\\"text\\\" class=\\\"form-control col-md-3\\\" id=\\\"filter\\\" [(ngModel)]=\\\"filterPolje\\\" placeholder=\\\"Unesite naziv ili email\\\">\\n        &nbsp;&nbsp;<button class=\\\"btn btn-primary\\\" (click)=\\\"filtriraj()\\\">Pretraga</button>\\n      </div>\\n      <br>\\n      <table class=\\\"table table-hover\\\" *ngIf=\\\"firme.length !== 0\\\">\\n        <thead>\\n          <tr class=\\\"table-primary d-flex\\\">\\n            <th class=\\\"col-md-1\\\">#</th>\\n            <th class=\\\"col-md-11\\\">Naziv (email)</th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr class=\\\"table-secondary d-flex\\\" *ngFor=\\\"let firma of firme; let i = index\\\">\\n            <th class=\\\"col-md-1\\\">{{pager.velicinaStrane * (pager.trenutnaStrana - 1) + i+1}}</th>\\n            <td class=\\\"col-md-11\\\">{{firma.naziv}} <b> ({{firma.email}})</b></td>\\n          </tr>\\n        </tbody>\\n      </table>\\n      <h2 *ngIf=\\\"firme.length === 0\\\">Nijedna firma sa trazenim kriterijumom nije prondajena!</h2>\\n    </div>\\n    <div>\\n      <app-pager [pager]=\\\"pager\\\" (izmenaEvent)=\\\"izlistajFirme($event)\\\"></app-pager>\\n    </div>\\n  </div>\\n  \\n  <div class=\\\"row justify-content-md-center\\\" *ngIf=\\\"firme !== undefined && firme.length === 0 && !pretraga\\\">\\n    <div class=\\\"col-md-10\\\">\\n      <div class=\\\"row\\\">\\n        <h2>Nema registrovanih firmi!</h2>\\n      </div>\\n    </div>\\n  </div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluLWtvbXBvbmVudGUvZmlybWUvaXpsaXN0YWotZmlybWUvaXpsaXN0YWotZmlybWUuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Korisnik } from '../../../model/Korisnik';\nimport { Pager } from '../../../model/pager';\nimport { ActivatedRoute } from '@angular/router';\nimport { AdministratorService } from '../../../services/administrator/administrator.service';\nimport { UtilService } from '../../../services/util/util.service';\n\n@Component({\n    selector: 'app-izlistaj-firme',\n    templateUrl: './izlistaj-firme.component.html',\n    styleUrls: ['./izlistaj-firme.component.scss']\n})\nexport class IzlistajFirmeComponent implements OnInit {\n    firme: Korisnik[];\n    pager: Pager;\n    filter: string;\n    filterPolje: string;\n    pretraga: boolean;\n\n    constructor(\n        private route: ActivatedRoute,\n        private administratorService: AdministratorService,\n        private utilService: UtilService\n    ) { }\n\n    ngOnInit() {\n        this.pager = {\n            trenutnaStrana: 1,\n            velicinaStrane: 5,\n            ukupnoStrana: undefined,\n            prvaStrana: undefined,\n            poslednjaStrana: undefined,\n            strane: []\n        }\n        this.izlistajFirme();\n        this.pretraga = false;\n    }\n\n    izlistajFirme() {\n        this.administratorService.getFirme(this.pager.trenutnaStrana-1, this.pager.velicinaStrane, this.filter).subscribe(\n            res => {\n                this.firme = res.body as Korisnik[];\n                this.pager.ukupnoStrana = Number(res.headers.get('Ukupno-Strana'));\n                this.pager = this.utilService.getPager(this.pager);\n                this.pretraga = true;\n            }\n        )\n    }\n\n    promeniVelicinu() {\n        this.pager.trenutnaStrana = 1;\n        this.izlistajFirme();\n    }\n\n    filtriraj() {\n        this.filter = this.filterPolje;\n        this.pager.trenutnaStrana = 1;\n        this.izlistajFirme();\n    }\n\n}\n","module.exports = \"<div class=\\\"row justify-content-md-center\\\">\\n  <form class=\\\"col-md-6 box\\\" [formGroup]=\\\"form\\\" (ngSubmit)=\\\"registrujFirmu()\\\">\\n    <fieldset>\\n      <div class=\\\"form-group row\\\">\\n        <label for=\\\"email\\\" class=\\\"control-label col-md-3\\\"><b>Email</b></label>\\n        <div class=\\\"col-md-9\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"email\\\" name=\\\"email\\\" placeholder=\\\"Email\\\" [formControl]=\\\"form.controls['email']\\\" \\n          [class.is-invalid]=\\\"!form.controls['email'].valid && (form.controls['email'].touched || form.controls['email'].dirty)\\\">\\n          <div *ngIf=\\\"form.controls['email'].hasError('required') && (form.controls['email'].touched || form.controls['email'].dirty)\\\" \\n          class=\\\"invalid-feedback\\\">Ovo polje ne sme biti prazno!</div>\\n          <div *ngIf=\\\"form.controls['email'].hasError('pattern') && (form.controls['email'].touched || form.controls['email'].dirty)\\\" \\n          class=\\\"invalid-feedback\\\">Neispravna email adresa!</div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group row\\\">\\n        <label for=\\\"lozinka\\\" class=\\\"control-label col-md-3\\\"><b>Lozinka</b></label>\\n        <div class=\\\"col-md-9\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"lozinka\\\" name=\\\"lozinka\\\" placeholder=\\\"Lozinka\\\" [formControl]=\\\"form.controls['lozinka']\\\" \\n          [class.is-invalid]=\\\"!form.controls['lozinka'].valid && (form.controls['lozinka'].touched || form.controls['lozinka'].dirty)\\\">\\n          <div *ngIf=\\\"form.controls['lozinka'].hasError('required') && (form.controls['lozinka'].touched || form.controls['lozinka'].dirty)\\\" \\n          class=\\\"invalid-feedback\\\">Ovo polje ne sme biti prazno!</div>\\n          <div *ngIf=\\\"form.controls['lozinka'].hasError('pattern') && (form.controls['lozinka'].touched || form.controls['lozinka'].dirty)\\\" \\n          class=\\\"invalid-feedback\\\">Neispravna lozinka!</div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group row\\\">\\n        <label for=\\\"naziv\\\" class=\\\"control-label col-md-3\\\"><b>Naziv</b></label>\\n        <div class=\\\"col-md-9\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"naziv\\\" name=\\\"naziv\\\" placeholder=\\\"Naziv\\\" [formControl]=\\\"form.controls['naziv']\\\" \\n          [class.is-invalid]=\\\"!form.controls['naziv'].valid && (form.controls['naziv'].touched || form.controls['naziv'].dirty)\\\">\\n          <div *ngIf=\\\"!form.controls['naziv'].valid && (form.controls['naziv'].touched || form.controls['naziv'].dirty)\\\" \\n          class=\\\"invalid-feedback\\\">Ovo polje ne sme biti prazno!</div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group row\\\">\\n        <label for=\\\"mesto\\\" class=\\\"control-label col-md-3\\\"><b>Mesto</b></label>\\n        <div class=\\\"col-md-9\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"mesto\\\" name=\\\"mesto\\\" placeholder=\\\"Mesto\\\" [formControl]=\\\"form.controls['mesto']\\\"\\n          [class.is-invalid]=\\\"!form.controls['mesto'].valid && (form.controls['mesto'].touched || form.controls['mesto'].dirty)\\\">\\n          <div *ngIf=\\\"!form.controls['mesto'].valid && (form.controls['mesto'].touched || form.controls['mesto'].dirty)\\\" \\n          class=\\\"invalid-feedback\\\">Ovo polje ne sme biti prazno!</div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group row\\\">\\n        <label for=\\\"ulica\\\" class=\\\"control-label col-md-3\\\"><b>Ulica</b></label>\\n        <div class=\\\"col-md-9\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"ulica\\\" name=\\\"ulica\\\" placeholder=\\\"Ulica\\\" [formControl]=\\\"form.controls['ulica']\\\"\\n          [class.is-invalid]=\\\"!form.controls['ulica'].valid && (form.controls['ulica'].touched || form.controls['ulica'].dirty)\\\">\\n          <div *ngIf=\\\"!form.controls['ulica'].valid && (form.controls['ulica'].touched || form.controls['ulica'].dirty)\\\" \\n          class=\\\"invalid-feedback\\\">Ovo polje ne sme biti prazno!</div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group row\\\">\\n        <label for=\\\"broj\\\" class=\\\"control-label col-md-3\\\"><b>Broj</b><br></label>\\n        <div class=\\\"col-md-9\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control col-md-5\\\" id=\\\"broj\\\" name=\\\"broj\\\" placeholder=\\\"Broj\\\" maxlength=\\\"3\\\" \\n          [formControl]=\\\"form.controls['broj']\\\" (keypress)=\\\"onlyNumber($event)\\\" \\n          [class.is-invalid]=\\\"!form.controls['broj'].valid && (form.controls['broj'].touched || form.controls['broj'].dirty)\\\">\\n          <div *ngIf=\\\"form.controls['broj'].hasError('required') && (form.controls['broj'].touched || form.controls['broj'].dirty)\\\" \\n          class=\\\"invalid-feedback\\\">Ovo polje ne sme biti prazno!</div>\\n          <div *ngIf=\\\"form.controls['broj'].hasError('min') && (form.controls['broj'].touched || form.controls['broj'].dirty)\\\" \\n          class=\\\"invalid-feedback\\\">Broj mora biti pozitivan!</div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group row\\\">\\n        <label for=\\\"brojTelefona\\\" class=\\\"control-label col-md-3\\\"><b>Broj telefona</b><br></label>\\n        <div class=\\\"col-md-9\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"brojTelefona\\\" name=\\\"brojTelefona\\\" placeholder=\\\"Broj telefona\\\" \\n          [formControl]=\\\"form.controls['brojTelefona']\\\" (keypress)=\\\"onlyNumber($event)\\\" maxlength=\\\"12\\\"\\n          [class.is-invalid]=\\\"!form.controls['brojTelefona'].valid \\n          && (form.controls['brojTelefona'].touched || form.controls['brojTelefona'].dirty)\\\">\\n          <div *ngIf=\\\"form.controls['brojTelefona'].hasError('required') \\n          && (form.controls['brojTelefona'].touched || form.controls['brojTelefona'].dirty)\\\" \\n          class=\\\"invalid-feedback\\\">Ovo polje ne sme biti prazno!</div>\\n          <div *ngIf=\\\"form.controls['brojTelefona'].hasError('minlength') \\n          && (form.controls['brojTelefona'].touched || form.controls['brojTelefona'].dirty)\\\" \\n          class=\\\"invalid-feedback\\\">Broj mora imati najmanje 9 cifara!</div>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-3\\\"></div>\\n        <div class=\\\"col-lg-9\\\">\\n          <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!form.valid\\\">Registrujte</button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"reset()\\\">Resetujte</button>\\n        </div>\\n      </div>\\n    </fieldset>\\n  </form>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluLWtvbXBvbmVudGUvZmlybWUvcmVnaXN0cnVqLWZpcm11L3JlZ2lzdHJ1ai1maXJtdS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { AdministratorService } from '../../../services/administrator/administrator.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { Firma } from '../../../model/Firma';\n\n@Component({\n    selector: 'app-registruj-firmu',\n    templateUrl: './registruj-firmu.component.html',\n    styleUrls: ['./registruj-firmu.component.scss']\n})\nexport class RegistrujFirmuComponent implements OnInit {\n    form: FormGroup;\n    emailPattern2 = \"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\";\n    emailPattern = \"^[_A-Za-z0-9-\\\\+]+(\\\\.[_A-Za-z0-9-]+)*@[A-Za-z0-9-]+(\\\\.[A-Za-z0-9]+)*(\\\\.[A-Za-z]{2,})$\"\n    lozinkaPattern = \"^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9]).{6,}$\"\n\n    constructor(\n        fb: FormBuilder,\n        private toastrService: ToastrService,\n        private administratorService: AdministratorService\n    ) {\n        this.form = fb.group({\n            'email' : [null, Validators.compose([Validators.required, Validators.pattern(this.emailPattern)])],\n            'lozinka': [null, Validators.compose([Validators.required, Validators.pattern(this.lozinkaPattern)])],\n            'naziv' : [null, Validators.required],\n            'mesto' : [null, Validators.required],\n            'ulica': [null, Validators.required],\n            'broj' : [null, Validators.compose([Validators.required, Validators.min(1)])],\n            'brojTelefona' : [null, Validators.compose([Validators.required, Validators.minLength(9)])]\n        })\n    }\n\n    ngOnInit() {\n    }\n\n    onlyNumber(event) {\n        if (event.charCode > 31 && (event.charCode != 46 &&(event.charCode < 48 || event.charCode > 57))){\n            return event.preventDefault();\n        }\n    }\n\n    registrujFirmu() {\n        let adresa = this.form.value.ulica + ' ' + this.form.value.broj + ', ' + this.form.value.mesto; \n        let firma: Firma = {\n            email: this.form.value.email,\n            lozinka: this.form.value.lozinka,\n            naziv: this.form.value.naziv,\n            adresa: adresa,\n            brojTelefona: this.form.value.brojTelefona\n        }\n\n        this.administratorService.registrujFirmu(firma).subscribe(\n            data => {\n                if (data.id !== null) {\n                    this.toastrService.success(\"Uspesno ste registrovali firmu!\");\n                    this.form.reset();\n                }\n            },\n            error => {\n                this.toastrService.error(error.error);\n            }\n        )\n    }\n\n    reset() {\n        this.form.reset();\n    }\n\n}\n","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"col-md-12\\\">\\n    <div class=\\\"navbar navbar-expand-lg navbar-light bg-light navbar-fixed-top\\\">\\n      <div class=\\\"collapse navbar-collapse\\\">\\n        <ul class=\\\"navbar-nav mr-auto\\\">\\n          <li class=\\\"nav-item\\\" [class.active]=\\\"funkcionalnost === 'registracija'\\\">\\n            <button class=\\\"btn\\\" [class.btn-primary]=\\\"funkcionalnost === 'registracija'\\\" [class.btn-outline-primary]=\\\"funkcionalnost !== 'registracija'\\\"\\n            style=\\\"cursor: pointer;\\\" (click)=\\\"clickedFun('registracija')\\\"><b>Registracija</b></button>\\n          </li>\\n          <li class=\\\"nav-item\\\" [class.active]=\\\"funkcionalnost === 'pregled'\\\">\\n            <button class=\\\"btn\\\" [class.btn-primary]=\\\"funkcionalnost === 'pregled'\\\" [class.btn-outline-primary]=\\\"funkcionalnost !== 'pregled'\\\"\\n            style=\\\"cursor: pointer;\\\" (click)=\\\"clickedFun('pregled')\\\"><b>Pregled</b></button>\\n          </li>\\n        </ul>\\n      </div>\\n    </div>\\n  </div>\\n  <br>\\n  <router-outlet></router-outlet>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluLWtvbXBvbmVudGUvaW5zdGl0dWNpamUvaW5zdGl0dWNpamUuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'app-institucije',\n    templateUrl: './institucije.component.html',\n    styleUrls: ['./institucije.component.scss']\n})\nexport class InstitucijeComponent implements OnInit {\n    funkcionalnost: string;\n\n    constructor(\n        private router: Router\n    ) { }\n\n    ngOnInit() {\n        let url = this.router.url;\n        let splitovanUrl = String(url).split(\"/\");\n        if (splitovanUrl[splitovanUrl.length - 1] === \"institucije\") {\n            this.funkcionalnost = \"registracija\";\n        } else {\n            this.funkcionalnost = splitovanUrl[splitovanUrl.length - 1];\n        }\n    }\n\n    clickedFun(funkcionalnost: string){\n        this.funkcionalnost = funkcionalnost;\n        this.router.navigate([\"/institucije/\" + funkcionalnost]);\n    }\n\n}\n","import { Routes } from '@angular/router';\nimport { RegistrujInstitucijuComponent } from './registruj-instituciju/registruj-instituciju.component';\nimport { IzlistajInstitucijeComponent } from './izlistaj-institucije/izlistaj-institucije.component';\n\nexport const institucijeRouting: Routes = [\n    { path: '', component: RegistrujInstitucijuComponent , pathMatch: 'full'},\n    { path: 'registracija', component: RegistrujInstitucijuComponent},\n    { path: 'pregled', component: IzlistajInstitucijeComponent}\n];","module.exports = \"<div class=\\\"row justify-content-md-center\\\" *ngIf=\\\"institucije !== undefined\\\">\\n    <div class=\\\"col-md-10\\\">\\n      <div class=\\\"row\\\">\\n        <label class=\\\"col-md-1\\\">Prikazi: </label>\\n        <select class=\\\"form-control col-md-1\\\" id=\\\"prikaz\\\" [(ngModel)]=\\\"pager.velicinaStrane\\\" (change)=\\\"promeniVelicinu()\\\">\\n          <option value=\\\"5\\\">5</option>\\n          <option value=\\\"10\\\">10</option>\\n          <option value=\\\"25\\\">25</option>\\n          <option value=\\\"50\\\">50</option>\\n        </select>\\n        <label class=\\\"col-md-5\\\"> </label>\\n        <input type=\\\"text\\\" class=\\\"form-control col-md-3\\\" id=\\\"filter\\\" [(ngModel)]=\\\"filterPolje\\\" placeholder=\\\"Unesite naziv ili email\\\">\\n        &nbsp;&nbsp;<button class=\\\"btn btn-primary\\\" (click)=\\\"filtriraj()\\\">Pretraga</button>\\n      </div>\\n      <br>\\n      <table class=\\\"table table-hover\\\" *ngIf=\\\"institucije.length !== 0\\\">\\n        <thead>\\n          <tr class=\\\"table-primary d-flex\\\">\\n            <th class=\\\"col-md-1\\\">#</th>\\n            <th class=\\\"col-md-11\\\">Naziv (email)</th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr class=\\\"table-secondary d-flex\\\" *ngFor=\\\"let institucija of institucije; let i = index\\\">\\n            <th class=\\\"col-md-1\\\">{{pager.velicinaStrane * (pager.trenutnaStrana - 1) + i+1}}</th>\\n            <td class=\\\"col-md-11\\\">{{institucija.naziv}} <b> ({{institucija.email}})</b></td>\\n          </tr>\\n        </tbody>\\n      </table>\\n      <h2 *ngIf=\\\"institucije.length === 0\\\">Nijedna institucija sa trazenim kriterijumom nije prondajena!</h2>\\n    </div>\\n    <div>\\n      <app-pager [pager]=\\\"pager\\\" (izmenaEvent)=\\\"izlistajInstitucije($event)\\\"></app-pager>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"row justify-content-md-center\\\" *ngIf=\\\"institucije !== undefined \\n  && institucije.length === 0 && !pretraga\\\">\\n    <div class=\\\"col-md-10\\\">\\n      <div class=\\\"row\\\">\\n        <h2>Nema registrovanih institucija!</h2>\\n      </div>\\n    </div>\\n  </div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluLWtvbXBvbmVudGUvaW5zdGl0dWNpamUvaXpsaXN0YWotaW5zdGl0dWNpamUvaXpsaXN0YWotaW5zdGl0dWNpamUuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Korisnik } from '../../../model/Korisnik';\nimport { Pager } from '../../../model/pager';\nimport { ActivatedRoute } from '@angular/router';\nimport { AdministratorService } from '../../../services/administrator/administrator.service';\nimport { UtilService } from '../../../services/util/util.service';\n\n@Component({\n    selector: 'app-izlistaj-institucije',\n    templateUrl: './izlistaj-institucije.component.html',\n    styleUrls: ['./izlistaj-institucije.component.scss']\n})\nexport class IzlistajInstitucijeComponent implements OnInit {\n    institucije: Korisnik[];\n    pager: Pager;\n    filter: string;\n    filterPolje: string;\n    pretraga: boolean;\n\n    constructor(\n        private route: ActivatedRoute,\n        private administratorService: AdministratorService,\n        private utilService: UtilService\n    ) { }\n\n    ngOnInit() {\n        this.pager = {\n            trenutnaStrana: 1,\n            velicinaStrane: 5,\n            ukupnoStrana: undefined,\n            prvaStrana: undefined,\n            poslednjaStrana: undefined,\n            strane: []\n        }\n        this.izlistajInstitucije();\n        this.pretraga = false;\n    }\n\n    izlistajInstitucije() {\n        this.administratorService.getInstitucije(this.pager.trenutnaStrana-1, this.pager.velicinaStrane, this.filter).subscribe(\n            res => {\n                this.institucije = res.body as Korisnik[];\n                this.pager.ukupnoStrana = Number(res.headers.get('Ukupno-Strana'));\n                this.pager = this.utilService.getPager(this.pager);\n                this.pretraga = true;\n            }\n        )\n    }\n\n    promeniVelicinu() {\n        this.pager.trenutnaStrana = 1;\n        this.izlistajInstitucije();\n    }\n\n    filtriraj() {\n        this.filter = this.filterPolje;\n        this.pager.trenutnaStrana = 1;\n        this.izlistajInstitucije();\n    }\n\n}\n","module.exports = \"<div class=\\\"row justify-content-md-center\\\">\\n  <form class=\\\"col-md-6 box\\\" [formGroup]=\\\"form\\\" (ngSubmit)=\\\"registrujInstituciju()\\\">\\n    <fieldset>\\n      <div class=\\\"form-group row\\\">\\n        <label for=\\\"email\\\" class=\\\"control-label col-md-3\\\"><b>Email</b></label>\\n        <div class=\\\"col-md-9\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"email\\\" name=\\\"email\\\" placeholder=\\\"Email\\\" [formControl]=\\\"form.controls['email']\\\" \\n          [class.is-invalid]=\\\"!form.controls['email'].valid && (form.controls['email'].touched || form.controls['email'].dirty)\\\">\\n          <div *ngIf=\\\"form.controls['email'].hasError('required') && (form.controls['email'].touched || form.controls['email'].dirty)\\\" \\n          class=\\\"invalid-feedback\\\">Ovo polje ne sme biti prazno!</div>\\n          <div *ngIf=\\\"form.controls['email'].hasError('pattern') && (form.controls['email'].touched || form.controls['email'].dirty)\\\" \\n          class=\\\"invalid-feedback\\\">Neispravna email adresa!</div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group row\\\">\\n        <label for=\\\"lozinka\\\" class=\\\"control-label col-md-3\\\"><b>Lozinka</b></label>\\n        <div class=\\\"col-md-9\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"lozinka\\\" name=\\\"lozinka\\\" placeholder=\\\"Lozinka\\\" [formControl]=\\\"form.controls['lozinka']\\\" \\n          [class.is-invalid]=\\\"!form.controls['lozinka'].valid && (form.controls['lozinka'].touched || form.controls['lozinka'].dirty)\\\">\\n          <div *ngIf=\\\"form.controls['lozinka'].hasError('required') && (form.controls['lozinka'].touched || form.controls['lozinka'].dirty)\\\" \\n          class=\\\"invalid-feedback\\\">Ovo polje ne sme biti prazno!</div>\\n          <div *ngIf=\\\"form.controls['lozinka'].hasError('pattern') && (form.controls['lozinka'].touched || form.controls['lozinka'].dirty)\\\" \\n          class=\\\"invalid-feedback\\\">Neispravna lozinka!</div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group row\\\">\\n        <label for=\\\"naziv\\\" class=\\\"control-label col-md-3\\\"><b>Naziv</b></label>\\n        <div class=\\\"col-md-9\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"naziv\\\" name=\\\"naziv\\\" placeholder=\\\"Naziv\\\" [formControl]=\\\"form.controls['naziv']\\\" \\n          [class.is-invalid]=\\\"!form.controls['naziv'].valid && (form.controls['naziv'].touched || form.controls['naziv'].dirty)\\\">\\n          <div *ngIf=\\\"!form.controls['naziv'].valid && (form.controls['naziv'].touched || form.controls['naziv'].dirty)\\\" \\n          class=\\\"invalid-feedback\\\">Ovo polje ne sme biti prazno!</div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group row\\\">\\n        <label for=\\\"mesto\\\" class=\\\"control-label col-md-3\\\"><b>Mesto</b></label>\\n        <div class=\\\"col-md-9\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"mesto\\\" name=\\\"mesto\\\" placeholder=\\\"Mesto\\\" [formControl]=\\\"form.controls['mesto']\\\"\\n          [class.is-invalid]=\\\"!form.controls['mesto'].valid && (form.controls['mesto'].touched || form.controls['mesto'].dirty)\\\">\\n          <div *ngIf=\\\"!form.controls['mesto'].valid && (form.controls['mesto'].touched || form.controls['mesto'].dirty)\\\" \\n          class=\\\"invalid-feedback\\\">Ovo polje ne sme biti prazno!</div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group row\\\">\\n        <label for=\\\"ulica\\\" class=\\\"control-label col-md-3\\\"><b>Ulica</b></label>\\n        <div class=\\\"col-md-9\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"ulica\\\" name=\\\"ulica\\\" placeholder=\\\"Ulica\\\" [formControl]=\\\"form.controls['ulica']\\\"\\n          [class.is-invalid]=\\\"!form.controls['ulica'].valid && (form.controls['ulica'].touched || form.controls['ulica'].dirty)\\\">\\n          <div *ngIf=\\\"!form.controls['ulica'].valid && (form.controls['ulica'].touched || form.controls['ulica'].dirty)\\\" \\n          class=\\\"invalid-feedback\\\">Ovo polje ne sme biti prazno!</div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group row\\\">\\n        <label for=\\\"broj\\\" class=\\\"control-label col-md-3\\\"><b>Broj</b><br></label>\\n        <div class=\\\"col-md-9\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control col-md-5\\\" id=\\\"broj\\\" name=\\\"broj\\\" placeholder=\\\"Broj\\\" maxlength=\\\"3\\\" \\n          [formControl]=\\\"form.controls['broj']\\\" (keypress)=\\\"onlyNumber($event)\\\" \\n          [class.is-invalid]=\\\"!form.controls['broj'].valid && (form.controls['broj'].touched || form.controls['broj'].dirty)\\\">\\n          <div *ngIf=\\\"form.controls['broj'].hasError('required') && (form.controls['broj'].touched || form.controls['broj'].dirty)\\\" \\n          class=\\\"invalid-feedback\\\">Ovo polje ne sme biti prazno!</div>\\n          <div *ngIf=\\\"form.controls['broj'].hasError('min') && (form.controls['broj'].touched || form.controls['broj'].dirty)\\\" \\n          class=\\\"invalid-feedback\\\">Broj mora biti pozitivan!</div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group row\\\">\\n        <label for=\\\"brojTelefona\\\" class=\\\"control-label col-md-3\\\"><b>Broj telefona</b><br></label>\\n        <div class=\\\"col-md-9\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"brojTelefona\\\" name=\\\"brojTelefona\\\" placeholder=\\\"Broj telefona\\\" \\n          [formControl]=\\\"form.controls['brojTelefona']\\\" (keypress)=\\\"onlyNumber($event)\\\" maxlength=\\\"12\\\"\\n          [class.is-invalid]=\\\"!form.controls['brojTelefona'].valid \\n          && (form.controls['brojTelefona'].touched || form.controls['brojTelefona'].dirty)\\\">\\n          <div *ngIf=\\\"form.controls['brojTelefona'].hasError('required') \\n          && (form.controls['brojTelefona'].touched || form.controls['brojTelefona'].dirty)\\\" \\n          class=\\\"invalid-feedback\\\">Ovo polje ne sme biti prazno!</div>\\n          <div *ngIf=\\\"form.controls['brojTelefona'].hasError('minlength') \\n          && (form.controls['brojTelefona'].touched || form.controls['brojTelefona'].dirty)\\\" \\n          class=\\\"invalid-feedback\\\">Broj mora imati najmanje 9 cifara!</div>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-3\\\"></div>\\n        <div class=\\\"col-lg-9\\\">\\n          <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!form.valid\\\">Registrujte</button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"reset()\\\">Resetujte</button>\\n        </div>\\n      </div>\\n    </fieldset>\\n  </form>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluLWtvbXBvbmVudGUvaW5zdGl0dWNpamUvcmVnaXN0cnVqLWluc3RpdHVjaWp1L3JlZ2lzdHJ1ai1pbnN0aXR1Y2lqdS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Institucija } from '../../../model/Institucija';\nimport { UtilService } from '../../../services/util/util.service';\nimport { AdministratorService } from '../../../services/administrator/administrator.service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n    selector: 'app-registruj-instituciju',\n    templateUrl: './registruj-instituciju.component.html',\n    styleUrls: ['./registruj-instituciju.component.scss']\n})\nexport class RegistrujInstitucijuComponent implements OnInit {\n    form: FormGroup;\n    emailPattern = \"^[_A-Za-z0-9-\\\\+]+(\\\\.[_A-Za-z0-9-]+)*@[A-Za-z0-9-]+(\\\\.[A-Za-z0-9]+)*(\\\\.[A-Za-z]{2,})$\"\n    lozinkaPattern = \"^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9]).{6,}$\"\n\n    constructor(\n        fb: FormBuilder,\n        private toastrService: ToastrService,\n        private administratorService: AdministratorService\n    ) {\n        this.form = fb.group({\n            'email' : [null, Validators.compose([Validators.required, Validators.pattern(this.emailPattern)])],\n            'lozinka': [null, Validators.compose([Validators.required, Validators.pattern(this.lozinkaPattern)])],\n            'naziv' : [null, Validators.required],\n            'mesto' : [null, Validators.required],\n            'ulica': [null, Validators.required],\n            'broj' : [null, Validators.compose([Validators.required, Validators.min(1)])],\n            'brojTelefona' : [null, Validators.compose([Validators.required, Validators.minLength(9)])]\n        })\n     }\n\n    ngOnInit() {\n    }\n\n    onlyNumber(event) {\n        if (event.charCode > 31 && (event.charCode != 46 &&(event.charCode < 48 || event.charCode > 57))){\n            return event.preventDefault();\n        }\n    }\n\n    registrujInstituciju() {\n        let lokacija = this.form.value.ulica + ' ' + this.form.value.broj + ', ' + this.form.value.mesto; \n        let institucija: Institucija = {\n            email: this.form.value.email,\n            lozinka: this.form.value.lozinka,\n            naziv: this.form.value.naziv,\n            lokacija: lokacija,\n            brojTelefona: this.form.value.brojTelefona\n        }\n\n        this.administratorService.registrujInstituciju(institucija).subscribe(\n            data => {\n                if (data.id !== null) {\n                    this.toastrService.success(\"Uspesno ste registrovali instituciju!\");\n                    this.form.reset();\n                }\n            },\n            error => {\n                this.toastrService.error(error.error);\n            }\n        )\n    }\n\n    reset() {\n        this.form.reset();\n    }\n}\n","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-dark bg-primary\\\">\\n  <div class=\\\"collapse navbar-collapse\\\">\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/pocetna']\\\">Pocetna</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/zgrade']\\\">Zgrade</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/stanari']\\\">Stanari</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/institucije']\\\">Institucije</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/firme']\\\">Firme</a>\\n      </li>\\n    </ul>\\n    <ul class=\\\"nav navbar-nav navbar-right btn-outline-primary\\\">\\n      <li>\\n        <label class=\\\"nav-link active\\\">{{email}}&nbsp;&nbsp;&nbsp;</label>\\n      </li>\\n      <li>\\n        <button class=\\\"btn btn-secondary\\\" (click)=\\\"odjavljivanje()\\\">Izlogujte se</button>\\n      </li>\\n    </ul>\\n  </div>\\n</nav>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluLWtvbXBvbmVudGUvbmF2YmFyLWFkbWluL25hdmJhci1hZG1pbi5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from '../../services/authentication/authentication.service';\nimport { UtilService } from '../../services/util/util.service';\n\n@Component({\n  selector: 'app-navbar-admin',\n  templateUrl: './navbar-admin.component.html',\n  styleUrls: ['./navbar-admin.component.scss']\n})\nexport class NavbarAdminComponent implements OnInit {\n    email: string;\n\n    constructor(\n        private router: Router,\n        private authenticateService: AuthenticationService,\n        private utilService: UtilService\n    ) { }\n\n    ngOnInit() {\n        this.email = this.utilService.email();\n    }\n\n    odjavljivanje() {\n        localStorage.removeItem('korisnik');\n    \n        this.authenticateService.izlogujSe()\n        .subscribe(\n            result => {\n                if (result) {\n                    localStorage.removeItem('korisnik');\n    \n                    this.router.navigate(['/logovanje']);\n                }\n            },\n            error => {\n                localStorage.removeItem('korisnik');\n    \n                this.router.navigate(['/logovanje']);\n                console.log(error);\n                /* KASNIJE DODATI OBRADJIVANJE GRESKU */ \n            }\n        )\n      }\n}\n","module.exports = \"<div class=\\\"row justify-content-md-center\\\">\\n  <div class=\\\"col-md-8\\\">\\n    <h2>Stan</h2>\\n    <h5 *ngIf=\\\"zgrada\\\"><b>Adresa zgrade: </b>{{zgrada.ulica}} {{zgrada.broj}}, {{zgrada.lokacija}}</h5>\\n    <div class=\\\"row\\\" *ngIf=\\\"stan && stan.vlasnik\\\">\\n      <h5 class=\\\"col-md-10\\\">\\n        <b>Vlasnik: </b><a routerLink=\\\"/stanar/{{stan.vlasnik.id}}\\\">{{stan.vlasnik.naziv}} </a> ({{stan.vlasnik.email}})\\n      </h5>\\n      <div class=\\\"btn-group col-md-2\\\">\\n        <button class=\\\"btn btn-danger\\\" id=\\\"ukloniVlasnika\\\" (click)=\\\"ukloniVlasnika()\\\">Ukloni</button>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\" *ngIf=\\\"stan && !stan.vlasnik\\\">\\n      <h5 class=\\\"col-md-12\\\"><b>Vlasnik: </b>Nema vlasnika</h5>\\n    </div>\\n    <br>\\n    <h4>Stanari: <div *ngIf=\\\"stanari && stanari.length === 0\\\">Nema useljenih stanara!</div></h4>\\n    <table class=\\\"table table-hover\\\" id=\\\"stanari\\\" *ngIf=\\\"stanari && stanari.length !== 0\\\">\\n      <thead>\\n        <tr class=\\\"table-primary d-flex\\\">\\n          <th class=\\\"col-md-1\\\">#</th>\\n          <th class=\\\"col-md-5\\\">Stanar</th>\\n          <th class=\\\"col-md-6\\\"></th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr class=\\\"table-secondary d-flex\\\" *ngFor=\\\"let stanar of stanari; let i = index\\\">\\n          <th class=\\\"col-md-1\\\">{{i+1}}</th>\\n          <td class=\\\"col-md-5\\\">\\n            <a routerLink=\\\"/stanar/{{stanar.id}}\\\">{{stanar.naziv}} </a><b> ({{stanar.email}})</b></td>\\n          <td class=\\\"col-md-6\\\">\\n            <div class=\\\"btn-group\\\">\\n              <button class=\\\"btn btn-primary\\\" (click)=\\\"postaviPredsednika(stanar.id)\\\" [disabled]=\\\"zgrada && zgrada.predsednikSkupstine\\\">\\n              Postavi za predsednika</button>&nbsp;\\n            </div>\\n            <div class=\\\"btn-group\\\">\\n              <button class=\\\"btn btn-primary\\\" (click)=\\\"postaviVlasnika(stanar.id)\\\">Postavi za vlasnika</button>&nbsp;\\n            </div>\\n            <div class=\\\"btn-group\\\">\\n              <button class=\\\"btn btn-danger\\\" (click)=\\\"ukloniStanara(stanar.id)\\\">Ukloni</button>\\n            </div>\\n          </td>\\n        </tr>\\n      </tbody>\\n    </table>\\n  </div>\\n  <div class=\\\"col-md-8\\\">\\n    <h3>&nbsp;</h3>\\n    <h4>Korsinici:</h4>\\n    <div class=\\\"row\\\">\\n      <label class=\\\"col-md-1\\\">Prikazi: </label>\\n      <select class=\\\"form-control col-md-1\\\" id=\\\"prikaz\\\" [(ngModel)]=\\\"pager.velicinaStrane\\\" (change)=\\\"promeniVelicinu()\\\">\\n        <option value=\\\"5\\\">5</option>\\n        <option value=\\\"10\\\">10</option>\\n        <option value=\\\"25\\\">25</option>\\n        <option value=\\\"50\\\">50</option>\\n      </select>\\n      <label class=\\\"col-md-5\\\"> </label>\\n      <input type=\\\"text\\\" class=\\\"form-control col-md-3\\\" id=\\\"filter\\\" [(ngModel)]=\\\"filterPolje\\\" placeholder=\\\"Unesite ime, prezime ili email\\\">\\n      &nbsp;&nbsp;<button class=\\\"btn btn-primary\\\" (click)=\\\"filtriraj()\\\">Filtriraj</button>\\n    </div>\\n    <br>\\n    <table class=\\\"table table-hover\\\" id=\\\"korisnici\\\">\\n      <thead>\\n        <tr class=\\\"table-primary d-flex\\\">\\n          <th class=\\\"col-md-1\\\">#</th>\\n          <th class=\\\"col-md-6\\\">Stanar</th>\\n          <th class=\\\"col-md-5\\\"></th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr class=\\\"table-secondary d-flex\\\" *ngFor=\\\"let stanar of korisnici; let i = index\\\">\\n          <th class=\\\"col-md-1\\\">{{i+1}}</th>\\n          <td class=\\\"col-md-6\\\">\\n            <p><a routerLink=\\\"/stanar/{{stanar.id}}\\\">{{stanar.naziv}} </a><b> ({{stanar.email}})</b></p>\\n          </td>\\n          <td class=\\\"col-md-5\\\">\\n            <div class=\\\"btn-group\\\">\\n              <button class=\\\"btn btn-primary\\\" (click)=\\\"postaviVlasnika(stanar.id)\\\">Postavi za vlasnika</button>&nbsp;\\n            </div>\\n            <div class=\\\"btn-group\\\">\\n              <button class=\\\"btn btn-primary\\\" [disabled]=\\\"stanar.useljen\\\" (click)=\\\"dodajStanara(stanar.id)\\\">Dodaj u stanare</button>\\n            </div>\\n          </td>\\n        </tr>\\n      </tbody>\\n    </table>\\n  </div>\\n</div>\\n<div class=\\\"row justify-content-md-center\\\">\\n  <div class=\\\"col-md-4\\\">\\n    <app-pager [pager]=\\\"pager\\\" (izmenaEvent)=\\\"getKorisnici($event)\\\"></app-pager>\\n  </div>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluLWtvbXBvbmVudGUvc3Rhbi9zdGFuLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport 'rxjs/add/operator/map';\nimport { Stan } from '../../model/Stan';\nimport { Zgrada } from '../../model/zgrada';\nimport { Korisnik } from '../../model/Korisnik';\nimport { Pager } from '../../model/pager';\nimport { ZgradaService } from '../../services/zgrada/zgrada.service';\nimport { AdministratorService } from '../../services/administrator/administrator.service';\nimport { UtilService } from '../../services/util/util.service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n    selector: 'app-stan',\n    templateUrl: './stan.component.html',\n    styleUrls: ['./stan.component.scss']\n})\nexport class StanComponent implements OnInit {\n    id: number;\n    stan: Stan;\n    zgrada: Zgrada;\n    stanari: Korisnik[];\n    korisnici: Korisnik[];\n    pager: Pager;\n    filter: string;\n    filterPolje: string;\n\n    constructor(\n        private route: ActivatedRoute,\n        private zgradaService: ZgradaService,\n        private toastrService: ToastrService,\n        private administratorService: AdministratorService,\n        private utilService: UtilService\n    ) { }\n\n    ngOnInit() {\n        this.pager = {\n            trenutnaStrana: 1,\n            velicinaStrane: 5,\n            ukupnoStrana: undefined,\n            prvaStrana: undefined,\n            poslednjaStrana: undefined,\n            strane: []\n        }\n        this.route.params.subscribe(\n            params => {\n                this.id = Number(params['id']);\n                this.getStan();\n            }\n        )\n    }\n\n    getStan() {\n        this.zgradaService.getStan(this.id).subscribe(\n            data => {\n                this.stan = data;\n                this.getZgrada();\n                this.getStanari();\n            }\n        )\n    }\n\n    getZgrada() {\n        this.zgradaService.getZgrada(this.stan.zgradaId).subscribe(\n            data => this.zgrada = data\n        )\n    }\n\n    getStanari() {\n        this.zgradaService.getStanareStana(this.stan.id).subscribe(\n            data => {\n                this.stanari = data;\n                this.getKorisnici();\n            }\n        )\n    }\n\n    getKorisnici() {\n        this.administratorService.getStanari(this.pager.trenutnaStrana-1, this.pager.velicinaStrane, this.filter).subscribe(\n            res => {\n                this.korisnici = res.body as Korisnik[];\n                this.pager.ukupnoStrana = Number(res.headers.get('Ukupno-Strana'));\n                this.pager = this.utilService.getPager(this.pager);\n                for (let i in this.korisnici) {\n                    this.korisnici[i].useljen = false;\n                    for (let j in this.stanari) {\n                        if (this.korisnici[i].email === this.stanari[j].email) {\n                            this.korisnici[i].useljen = true;\n                            break;\n                        }\n                    }\n                }\n            }\n        )\n    }\n\n    promeniVelicinu() {\n        this.pager.trenutnaStrana = 1;\n        this.getKorisnici();\n    }\n\n    filtriraj() {\n        this.filter = this.filterPolje;\n        this.pager.trenutnaStrana = 1;\n        this.getKorisnici();\n    }\n\n    postaviVlasnika(stanarId: number) {\n        this.administratorService.postaviVlasnika(stanarId, this.stan.id).subscribe(\n            data => {\n                this.getStan();\n                this.toastrService.success(\"Uspesno ste postavili vlasnika!\");\n            },\n            error => {\n                this.toastrService.error(error.error);\n            }\n        )\n    }\n\n    ukloniVlasnika() {\n        this.administratorService.ukloniVlasnika(this.stan.id).subscribe(\n            data => {\n                this.getStan();\n                this.toastrService.success(\"Uspesno ste uklonili vlasnika!\");\n            },\n            error => {\n                this.toastrService.error(error.error);\n            }\n        )\n    }\n\n    dodajStanara(stanarId: number) {\n        this.administratorService.dodajStanara(stanarId, this.stan.id).subscribe(\n            data => {\n                this.getStanari();\n                this.toastrService.success(\"Uspesno ste dodali stanara!\");\n            },\n            error => {\n                this.toastrService.error(error.error);\n            }\n        )\n    }\n\n    ukloniStanara(stanarId: number) {\n        this.administratorService.ukloniStanara(stanarId, this.stan.id).subscribe(\n            data => {\n                this.getStanari();\n                this.getZgrada();\n                this.toastrService.success(\"Uspesno ste uklonili stanara!\");\n            },\n            error => {\n                this.toastrService.error(error.error);\n            }\n        )\n    }\n\n    postaviPredsednika(stanarId: number) {\n        this.administratorService.postaviPredsednika(stanarId).subscribe(\n            data => {\n                this.zgrada = data;\n                this.toastrService.success(\"Uspesno ste postavili predsednika zgrade!\");\n            }, \n            error => {\n                this.toastrService.error(error.error);\n            }\n        )\n    }\n\n}\n","module.exports = \"<div class=\\\"row justify-content-md-center\\\">\\n  <div class=\\\"col-md-8\\\" *ngIf=\\\"stanar\\\">\\n    <h2>Stanar</h2>\\n    <h5><b>Ime i prezime: </b>{{stanar.naziv}}</h5>\\n    <h5><b>Stan u kom stanuje: </b><span *ngIf=\\\"stanovi && stanovi.stanuje.length === 0\\\">Stanar nije useljen ni u jedan stan!</span></h5>\\n    <table class=\\\"table table-hover\\\" id=\\\"stan\\\" *ngIf=\\\"stanovi && stanovi.stanuje.length !== 0\\\">\\n      <thead>\\n        <tr class=\\\"table-primary d-flex\\\">\\n          <th class=\\\"col-md-1\\\"></th>\\n          <th class=\\\"col-md-9\\\">Zgrada</th>\\n          <th class=\\\"col-md-2\\\">Stan broj</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr class=\\\"table-secondary d-flex\\\" *ngFor=\\\"let stan of stanovi.stanuje\\\">\\n          <th class=\\\"col-md-1\\\"></th>\\n          <td class=\\\"col-md-9\\\" *ngIf=\\\"stan.zgrada\\\">\\n            <a routerLink=\\\"/zgrada/{{stan.zgradaId}}\\\">{{stan.zgrada.ulica}} {{stan.zgrada.broj}}, {{stan.zgrada.lokacija}} </a></td>\\n          <td class=\\\"col-md-2\\\">\\n            <a routerLink=\\\"/stan/{{stan.id}}\\\">{{stan.broj}}</a>\\n          </td>\\n        </tr>\\n      </tbody>\\n    </table>\\n    <h4>&nbsp;</h4>\\n    <h5><b>Stanovi u kojima je vlasnik: </b><span *ngIf=\\\"stanovi && stanovi.vlasnik.length === 0\\\">Stanar nije vlasnik nijedanog stana!</span></h5>\\n    <table class=\\\"table table-hover\\\" id=\\\"vlasnikStanova\\\" *ngIf=\\\"stanovi && stanovi.vlasnik.length !== 0\\\">\\n      <thead>\\n        <tr class=\\\"table-primary d-flex\\\">\\n          <th class=\\\"col-md-1\\\">#</th>\\n          <th class=\\\"col-md-9\\\">Zgrada</th>\\n          <th class=\\\"col-md-2\\\">Stan broj</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr class=\\\"table-secondary d-flex\\\" *ngFor=\\\"let stan of stanovi.vlasnik; let i = index\\\">\\n          <th class=\\\"col-md-1\\\">{{i+1}}</th>\\n          <td class=\\\"col-md-9\\\" *ngIf=\\\"stan.zgrada\\\">\\n            <a routerLink=\\\"/zgrada/{{stan.zgradaId}}\\\">{{stan.zgrada.ulica}} {{stan.zgrada.broj}}, {{stan.zgrada.lokacija}} </a></td>\\n          <td class=\\\"col-md-2\\\">\\n            <a routerLink=\\\"/stan/{{stan.id}}\\\">{{stan.broj}}</a>\\n          </td>\\n        </tr>\\n      </tbody>\\n    </table>\\n  </div>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluLWtvbXBvbmVudGUvc3RhbmFyL3N0YW5hci5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { AdministratorService } from '../../services/administrator/administrator.service';\nimport { Korisnik } from '../../model/Korisnik';\nimport { ZgradaService } from '../../services/zgrada/zgrada.service';\nimport { Stan } from '../../model/Stan';\n\n@Component({\n    selector: 'app-stanar',\n    templateUrl: './stanar.component.html',\n    styleUrls: ['./stanar.component.scss']\n})\nexport class StanarComponent implements OnInit {\n    id: number;\n    stanar: Korisnik;\n    stanovi: Stan[];\n\n    constructor(\n        private route: ActivatedRoute,\n        private administratorService: AdministratorService,\n        private zgradaService: ZgradaService\n    ) { }\n\n    ngOnInit() {\n        this.route.params.subscribe(\n            params => {\n                this.id = Number(params['id']);\n                this.getStanar();\n            }\n        )\n    }\n\n    getStanar() {\n        this.administratorService.getStanar(this.id).subscribe(\n            data => {\n                this.stanar = data;\n                this.getZgradeStanara();\n            }\n        )\n    }\n\n    getZgradeStanara() {\n        this.administratorService.getStanoviStanara(this.stanar.id).subscribe(\n            data => {\n                this.stanovi = data\n                if (this.stanovi['stanuje'].length !== 0) {\n                    this.getZgrada(this.stanovi['stanuje'][0])\n                }\n                for (let stan of this.stanovi['vlasnik']) {\n                    this.getZgrada(stan);\n                }\n            }\n        )\n    }\n\n    getZgrada(stan: Stan) {\n        this.zgradaService.getZgrada(stan.zgradaId).subscribe(\n            data => stan.zgrada = data\n        )\n    }\n\n}\n","module.exports = \"<div class=\\\"row justify-content-md-center\\\" *ngIf=\\\"stanari !== undefined\\\">\\n  <div class=\\\"col-md-10\\\">\\n    <div class=\\\"row\\\">\\n      <label class=\\\"col-md-1\\\">Prikazi: </label>\\n      <select class=\\\"form-control col-md-1\\\" id=\\\"prikaz\\\" [(ngModel)]=\\\"pager.velicinaStrane\\\" (change)=\\\"promeniVelicinu()\\\">\\n        <option value=\\\"5\\\">5</option>\\n        <option value=\\\"10\\\">10</option>\\n        <option value=\\\"25\\\">25</option>\\n        <option value=\\\"50\\\">50</option>\\n      </select>\\n      <label class=\\\"col-md-5\\\"> </label>\\n      <input type=\\\"text\\\" class=\\\"form-control col-md-3\\\" id=\\\"filter\\\" [(ngModel)]=\\\"filterPolje\\\" placeholder=\\\"Unesite ime, prezime ili email\\\">\\n      &nbsp;&nbsp;<button class=\\\"btn btn-primary\\\" (click)=\\\"filtriraj()\\\">Pretraga</button>\\n    </div>\\n    <br>\\n    <table class=\\\"table table-hover\\\" *ngIf=\\\"stanari.length !== 0\\\">\\n      <thead>\\n        <tr class=\\\"table-primary d-flex\\\">\\n          <th class=\\\"col-md-1\\\">#</th>\\n          <th class=\\\"col-md-11\\\">Ime i prezime (email)</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr class=\\\"table-secondary d-flex\\\" *ngFor=\\\"let stanar of stanari; let i = index\\\">\\n          <th class=\\\"col-md-1\\\">{{pager.velicinaStrane * (pager.trenutnaStrana - 1) + i+1}}</th>\\n          <td class=\\\"col-md-11\\\">\\n              <a routerLink=\\\"/stanar/{{stanar.id}}\\\">{{stanar.naziv}} </a><b> ({{stanar.email}})</b>\\n          </td>\\n        </tr>\\n      </tbody>\\n    </table>\\n    <h2 *ngIf=\\\"stanari.length === 0\\\">Nijedan stanar sa trazenim kriterijumom nije prondajen!</h2>\\n  </div>\\n  <div>\\n    <app-pager [pager]=\\\"pager\\\" (izmenaEvent)=\\\"izlistajStanare($event)\\\"></app-pager>\\n  </div>\\n</div>\\n\\n<div class=\\\"row justify-content-md-center\\\" *ngIf=\\\"stanari !== undefined && stanari.length === 0 && !pretraga\\\">\\n  <div class=\\\"col-md-10\\\">\\n    <div class=\\\"row\\\">\\n      <h2>Nema registrovanih stanara!</h2>\\n    </div>\\n  </div>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluLWtvbXBvbmVudGUvc3RhbmFyaS9pemxpc3Rhai1zdGFuYXJlL2l6bGlzdGFqLXN0YW5hcmUuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Korisnik } from '../../../model/Korisnik';\nimport { Pager } from '../../../model/pager';\nimport { ActivatedRoute } from '@angular/router';\nimport { AdministratorService } from '../../../services/administrator/administrator.service';\nimport { UtilService } from '../../../services/util/util.service';\n\n@Component({\n    selector: 'app-izlistaj-stanare',\n    templateUrl: './izlistaj-stanare.component.html',\n    styleUrls: ['./izlistaj-stanare.component.scss']\n})\nexport class IzlistajStanareComponent implements OnInit {\n    stanari: Korisnik[];\n    pager: Pager;\n    filter: string;\n    filterPolje: string;\n    pretraga: boolean;\n\n    constructor(\n        private route: ActivatedRoute,\n        private administratorService: AdministratorService,\n        private utilService: UtilService\n    ) { }\n\n    ngOnInit() {\n        this.pager = {\n            trenutnaStrana: 1,\n            velicinaStrane: 5,\n            ukupnoStrana: undefined,\n            prvaStrana: undefined,\n            poslednjaStrana: undefined,\n            strane: []\n        }\n        this.izlistajStanare();\n        this.pretraga = false;\n    }\n\n    izlistajStanare() {\n        this.administratorService.getStanari(this.pager.trenutnaStrana-1, this.pager.velicinaStrane, this.filter).subscribe(\n            res => {\n                this.stanari = res.body as Korisnik[];\n                this.pager.ukupnoStrana = Number(res.headers.get('Ukupno-Strana'));\n                this.pager = this.utilService.getPager(this.pager);\n                this.pretraga = true;\n            }\n        )\n    }\n\n    promeniVelicinu() {\n        this.pager.trenutnaStrana = 1;\n        this.izlistajStanare();\n    }\n\n    filtriraj() {\n        this.filter = this.filterPolje;\n        this.pager.trenutnaStrana = 1;\n        this.izlistajStanare();\n    }\n}\n","module.exports = \"<div class=\\\"row justify-content-md-center\\\">\\n  <form class=\\\"col-md-6 box\\\" [formGroup]=\\\"form\\\" (ngSubmit)=\\\"registrujStanara()\\\">\\n    <fieldset>\\n      <div class=\\\"form-group row\\\">\\n        <label for=\\\"email\\\" class=\\\"control-label col-md-3\\\"><b>Email</b></label>\\n        <div class=\\\"col-md-9\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"email\\\" name=\\\"email\\\" placeholder=\\\"Email\\\" [formControl]=\\\"form.controls['email']\\\" \\n          [class.is-invalid]=\\\"!form.controls['email'].valid && (form.controls['email'].touched || form.controls['email'].dirty)\\\">\\n          <div *ngIf=\\\"form.controls['email'].hasError('required') && (form.controls['email'].touched || form.controls['email'].dirty)\\\" \\n          class=\\\"invalid-feedback\\\">Ovo polje ne sme biti prazno!</div>\\n          <div *ngIf=\\\"form.controls['email'].hasError('pattern') && (form.controls['email'].touched || form.controls['email'].dirty)\\\" \\n          class=\\\"invalid-feedback\\\">Neispravna email adresa!</div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group row\\\">\\n        <label for=\\\"lozinka\\\" class=\\\"control-label col-md-3\\\"><b>Lozinka</b></label>\\n        <div class=\\\"col-md-9\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"lozinka\\\" name=\\\"lozinka\\\" placeholder=\\\"Lozinka\\\" [formControl]=\\\"form.controls['lozinka']\\\" \\n          [class.is-invalid]=\\\"!form.controls['lozinka'].valid && (form.controls['lozinka'].touched || form.controls['lozinka'].dirty)\\\">\\n          <div *ngIf=\\\"form.controls['lozinka'].hasError('required') && (form.controls['lozinka'].touched || form.controls['lozinka'].dirty)\\\" \\n          class=\\\"invalid-feedback\\\">Ovo polje ne sme biti prazno!</div>\\n          <div *ngIf=\\\"form.controls['lozinka'].hasError('pattern') && (form.controls['lozinka'].touched || form.controls['lozinka'].dirty)\\\" \\n          class=\\\"invalid-feedback\\\">Neispravna lozinka!</div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group row\\\">\\n        <label for=\\\"ime\\\" class=\\\"control-label col-md-3\\\"><b>Ime</b></label>\\n        <div class=\\\"col-md-9\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"ime\\\" name=\\\"ime\\\" placeholder=\\\"Ime\\\" [formControl]=\\\"form.controls['ime']\\\"\\n          [class.is-invalid]=\\\"!form.controls['ime'].valid && (form.controls['ime'].touched || form.controls['ime'].dirty)\\\">\\n          <div *ngIf=\\\"!form.controls['ime'].valid && (form.controls['ime'].touched || form.controls['ime'].dirty)\\\" \\n          class=\\\"invalid-feedback\\\">Ovo polje ne sme biti prazno!</div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group row\\\">\\n        <label for=\\\"prezime\\\" class=\\\"control-label col-md-3\\\"><b>Prezime</b></label>\\n        <div class=\\\"col-md-9\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"prezime\\\" name=\\\"prezime\\\" placeholder=\\\"Prezime\\\" [formControl]=\\\"form.controls['prezime']\\\"\\n          [class.is-invalid]=\\\"!form.controls['prezime'].valid && (form.controls['prezime'].touched || form.controls['prezime'].dirty)\\\">\\n          <div *ngIf=\\\"!form.controls['prezime'].valid && (form.controls['prezime'].touched || form.controls['prezime'].dirty)\\\" \\n          class=\\\"invalid-feedback\\\">Ovo polje ne sme biti prazno!</div>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-3\\\"></div>\\n        <div class=\\\"col-lg-9\\\">\\n          <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!form.valid\\\">Registrujte</button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"reset()\\\">Resetujte</button>\\n        </div>\\n      </div>\\n    </fieldset>\\n  </form>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluLWtvbXBvbmVudGUvc3RhbmFyaS9yZWdpc3RydWotc3RhbmFyYS9yZWdpc3RydWotc3RhbmFyYS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { AdministratorService } from '../../../services/administrator/administrator.service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n    selector: 'app-registruj-stanara',\n    templateUrl: './registruj-stanara.component.html',\n    styleUrls: ['./registruj-stanara.component.scss']\n})\nexport class RegistrujStanaraComponent implements OnInit {\n    form: FormGroup;\n    emailPattern2 = \"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\";\n    emailPattern = \"^[_A-Za-z0-9-\\\\+]+(\\\\.[_A-Za-z0-9-]+)*@[A-Za-z0-9-]+(\\\\.[A-Za-z0-9]+)*(\\\\.[A-Za-z]{2,})$\"\n    lozinkaPattern = \"^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9]).{6,}$\"\n\n    constructor(\n        fb: FormBuilder,\n        private toastrService: ToastrService,\n        private administratorService: AdministratorService\n    ) {\n        this.form = fb.group({\n            'email' : [null, Validators.compose([Validators.required, Validators.pattern(this.emailPattern)])],\n            'lozinka': [null, Validators.compose([Validators.required, Validators.pattern(this.lozinkaPattern)])],\n            'ime' : [null, Validators.required],\n            'prezime' : [null, Validators.required],\n        })\n     }\n\n    ngOnInit() {\n    }\n\n    onlyNumber(event) {\n        if (event.charCode > 31 && (event.charCode != 46 &&(event.charCode < 48 || event.charCode > 57))){\n            return event.preventDefault();\n        }\n    }\n\n    registrujStanara() {\n        this.administratorService.registrujStanara(this.form.value).subscribe(\n            data => {\n                if (data.id !== null) {\n                    this.toastrService.success(\"Uspesno ste registrovali stanara!\");\n                    this.form.reset();\n                }\n            },\n            error => {\n                this.toastrService.error(error.error);\n            }\n        )\n    }\n\n    reset() {\n        this.form.reset();\n    }\n\n}\n","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"col-md-12\\\">\\n    <div class=\\\"navbar navbar-expand-lg navbar-light bg-light navbar-fixed-top\\\">\\n      <div class=\\\"collapse navbar-collapse\\\">\\n        <ul class=\\\"navbar-nav mr-auto\\\">\\n          <li class=\\\"nav-item\\\" [class.active]=\\\"funkcionalnost === 'registracija'\\\">\\n            <button class=\\\"btn\\\" [class.btn-primary]=\\\"funkcionalnost === 'registracija'\\\" [class.btn-outline-primary]=\\\"funkcionalnost !== 'registracija'\\\" \\n            style=\\\"cursor: pointer;\\\" (click)=\\\"clickedFun('registracija')\\\"><b>Registracija</b></button>\\n          </li>\\n          <li class=\\\"nav-item\\\" [class.active]=\\\"funkcionalnost === 'pregled'\\\">\\n            <button class=\\\"btn\\\" [class.btn-primary]=\\\"funkcionalnost === 'pregled'\\\" [class.btn-outline-primary]=\\\"funkcionalnost !== 'pregled'\\\" \\n            style=\\\"cursor: pointer;\\\" (click)=\\\"clickedFun('pregled')\\\"><b>Pregled</b></button>\\n          </li>\\n        </ul>\\n      </div>\\n    </div>\\n  </div>\\n  <br>\\n  <router-outlet></router-outlet>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluLWtvbXBvbmVudGUvc3RhbmFyaS9zdGFuYXJpLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-stanari',\n  templateUrl: './stanari.component.html',\n  styleUrls: ['./stanari.component.scss']\n})\nexport class StanariComponent implements OnInit {\n    funkcionalnost: string;\n\n    constructor(\n        private router: Router\n    ) { }\n\n    ngOnInit() {\n        let url = this.router.url;\n        let splitovanUrl = String(url).split(\"/\");\n        if (splitovanUrl[splitovanUrl.length - 1] === \"stanari\") {\n            this.funkcionalnost = \"registracija\";\n        } else {\n            this.funkcionalnost = splitovanUrl[splitovanUrl.length - 1];\n        }\n    }\n\n    clickedFun(funkcionalnost: string){\n        this.funkcionalnost = funkcionalnost;\n        this.router.navigate([\"/stanari/\" + funkcionalnost]);\n    }\n\n}\n","import { Routes } from '@angular/router';\nimport { RegistrujStanaraComponent } from './registruj-stanara/registruj-stanara.component';\nimport { IzlistajStanareComponent } from './izlistaj-stanare/izlistaj-stanare.component';\n\nexport const stanariRouting: Routes = [\n    { path: '', component: RegistrujStanaraComponent , pathMatch: 'full'},\n    { path: 'registracija', component: RegistrujStanaraComponent},\n    { path: 'pregled', component: IzlistajStanareComponent}\n];","module.exports = \"<div class=\\\"row justify-content-md-center\\\">\\n  <form class=\\\"col-md-6 box\\\" [formGroup]=\\\"form\\\" (ngSubmit)=\\\"dodajZgradu()\\\">\\n    <fieldset>\\n      <div class=\\\"form-group row\\\">\\n        <label for=\\\"mesto\\\" class=\\\"control-label col-md-3\\\"><b>Mesto</b></label>\\n        <div class=\\\"col-md-9\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"mesto\\\" name=\\\"mesto\\\" placeholder=\\\"Mesto\\\" [formControl]=\\\"form.controls['lokacija']\\\"\\n          [class.is-invalid]=\\\"!form.controls['lokacija'].valid && (form.controls['lokacija'].touched || form.controls['lokacija'].dirty)\\\">\\n          <div *ngIf=\\\"!form.controls['lokacija'].valid && (form.controls['lokacija'].touched || form.controls['lokacija'].dirty)\\\" \\n          class=\\\"invalid-feedback\\\">Ovo polje ne sme biti prazno!</div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group row\\\">\\n        <label for=\\\"ulica\\\" class=\\\"control-label col-md-3\\\"><b>Ulica</b></label>\\n        <div class=\\\"col-md-9\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"ulica\\\" name=\\\"ulica\\\" placeholder=\\\"Ulica\\\" [formControl]=\\\"form.controls['ulica']\\\"\\n          [class.is-invalid]=\\\"!form.controls['ulica'].valid && (form.controls['ulica'].touched || form.controls['ulica'].dirty)\\\">\\n          <div *ngIf=\\\"!form.controls['ulica'].valid && (form.controls['ulica'].touched || form.controls['ulica'].dirty)\\\" \\n          class=\\\"invalid-feedback\\\">Ovo polje ne sme biti prazno!</div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group row\\\">\\n        <label for=\\\"broj\\\" class=\\\"control-label col-md-3\\\"><b>Broj</b><br></label>\\n        <div class=\\\"col-md-9\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control col-md-5\\\" id=\\\"broj\\\" name=\\\"broj\\\" placeholder=\\\"Broj\\\" maxlength=\\\"3\\\" \\n          [formControl]=\\\"form.controls['broj']\\\" (keypress)=\\\"onlyNumber($event)\\\" \\n          [class.is-invalid]=\\\"!form.controls['broj'].valid && (form.controls['broj'].touched || form.controls['broj'].dirty)\\\">\\n          <div *ngIf=\\\"form.controls['broj'].hasError('required') && (form.controls['broj'].touched || form.controls['broj'].dirty)\\\" \\n          class=\\\"invalid-feedback\\\">Ovo polje ne sme biti prazno!</div>\\n          <div *ngIf=\\\"form.controls['broj'].hasError('min') && (form.controls['broj'].touched || form.controls['broj'].dirty)\\\" \\n          class=\\\"invalid-feedback\\\">Broj mora biti pozitivan!</div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group row\\\">\\n        <label for=\\\"brojStanova\\\" class=\\\"control-label col-md-3\\\"><b>Broj stanova</b></label>\\n        <div class=\\\"col-md-9\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control col-md-5\\\" id=\\\"brojStanova\\\" name=\\\"brojStanova\\\" placeholder=\\\"Broj stanova\\\" maxlength=\\\"3\\\" \\n          [formControl]=\\\"form.controls['brojStanova']\\\" (keypress)=\\\"onlyNumber($event)\\\"\\n          [class.is-invalid]=\\\"!form.controls['brojStanova'].valid && (form.controls['brojStanova'].touched || form.controls['brojStanova'].dirty)\\\">\\n          <div *ngIf=\\\"form.controls['brojStanova'].hasError('required') && (form.controls['brojStanova'].touched || form.controls['brojStanova'].dirty)\\\" \\n          class=\\\"invalid-feedback\\\">Ovo polje ne sme biti prazno!</div>\\n          <div *ngIf=\\\"form.controls['brojStanova'].hasError('min') && (form.controls['brojStanova'].touched || form.controls['brojStanova'].dirty)\\\" \\n          class=\\\"invalid-feedback\\\">Broj mora biti pozitivan!</div>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-3\\\"></div>\\n        <div class=\\\"col-lg-9\\\">\\n          <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!form.valid\\\">Dodajte</button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"reset()\\\">Resetujte</button>\\n        </div>\\n      </div>\\n    </fieldset>\\n  </form>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluLWtvbXBvbmVudGUvemdyYWRlL2RvZGFqLXpncmFkdS9kb2Rhai16Z3JhZHUuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { AdministratorService } from '../../../services/administrator/administrator.service';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n    selector: 'app-dodaj-zgradu',\n    templateUrl: './dodaj-zgradu.component.html',\n    styleUrls: ['./dodaj-zgradu.component.scss']\n})\nexport class DodajZgraduComponent implements OnInit {\n    form: FormGroup;\n\n    constructor(\n        fb: FormBuilder,\n        private administratorService: AdministratorService,\n        private toastrService: ToastrService\n    ) {\n        this.form = fb.group({\n            'lokacija' : [null, Validators.required],\n            'ulica': [null, Validators.required],\n            'broj' : [null, Validators.compose([Validators.required, Validators.min(1)])],\n            'brojStanova' : [null, Validators.compose([Validators.required, Validators.min(1)])]\n        })\n    }\n\n    ngOnInit() {\n    }\n\n    onlyNumber(event) {\n        if (event.charCode > 31 && (event.charCode != 46 &&(event.charCode < 48 || event.charCode > 57))){\n            return event.preventDefault();\n        }\n    }\n\n    dodajZgradu() {\n        this.administratorService.dodajZgradu(this.form.value).subscribe(\n            data => {\n                if (data.id !== null) {\n                    this.toastrService.success(\"Uspesno ste dodali zgradu!\");\n                    this.form.reset();\n                }\n            },\n            error => {\n                this.toastrService.error(error.error);\n            }\n        )\n    }\n\n    reset() {\n        this.form.reset();\n    }\n}\n","module.exports = \"<div class=\\\"row justify-content-md-center\\\" *ngIf=\\\"zgrade !== undefined\\\">\\n  <div class=\\\"col-md-10\\\">\\n    <div class=\\\"row\\\">\\n      <label class=\\\"col-md-1\\\">Prikazi: </label>\\n      <select class=\\\"form-control col-md-1\\\" id=\\\"prikaz\\\" [(ngModel)]=\\\"pager.velicinaStrane\\\" (change)=\\\"promeniVelicinu()\\\">\\n        <option value=\\\"5\\\">5</option>\\n        <option value=\\\"10\\\">10</option>\\n        <option value=\\\"25\\\">25</option>\\n        <option value=\\\"50\\\">50</option>\\n      </select>\\n      <label class=\\\"col-md-3\\\"> </label>\\n      <input type=\\\"text\\\" class=\\\"form-control col-md-3\\\" id=\\\"ulicaBroj\\\" [(ngModel)]=\\\"ulicaBrojPolje\\\" placeholder=\\\"Unesite ulicu i/ili broj\\\">\\n      &nbsp;&nbsp;<input type=\\\"text\\\" class=\\\"form-control col-md-2\\\" id=\\\"mesto\\\" [(ngModel)]=\\\"mestoPolje\\\" placeholder=\\\"Unesite grad\\\">\\n      &nbsp;&nbsp;<button class=\\\"btn btn-primary\\\" (click)=\\\"filtriraj()\\\">Pretraga</button>\\n    </div>\\n    <br>\\n    <table class=\\\"table table-hover\\\" *ngIf=\\\"zgrade.length !== 0\\\">\\n      <thead>\\n        <tr class=\\\"table-primary d-flex\\\">\\n          <th class=\\\"col-md-1\\\"></th>\\n          <th class=\\\"col-md-6\\\">Adresa</th>\\n          <th class=\\\"col-md-3\\\">Predsednik zgrade</th>\\n          <th class=\\\"col-md-2\\\">Broj stanova</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr class=\\\"table-secondary d-flex\\\" *ngFor=\\\"let zgrada of zgrade; let i = index\\\">\\n          <th class=\\\"col-md-1\\\">{{pager.velicinaStrane * (pager.trenutnaStrana - 1) + i+1}}</th>\\n          <td class=\\\"col-md-6\\\"><a routerLink=\\\"/zgrada/{{zgrada.id}}\\\">{{zgrada.ulica}} {{zgrada.broj}}, {{zgrada.lokacija}}</a></td>\\n          <td class=\\\"col-md-3\\\" *ngIf=\\\"zgrada.predsednikSkupstine\\\"><a routerLink=\\\"/stanar/{{zgrada.predsednikSkupstine.id}}\\\">{{zgrada.predsednikSkupstine.naziv}}</a></td>\\n          <td class=\\\"col-md-3\\\" *ngIf=\\\"!zgrada.predsednikSkupstine\\\">Nema predsednika</td>\\n          <th class=\\\"col-md-2\\\">{{zgrada.brojStanova}}</th>\\n        </tr>\\n      </tbody>\\n    </table>\\n    <h2 *ngIf=\\\"zgrade.length === 0\\\">Nijedna zgrada sa trazenim kriterijumima nije prondajena!</h2>\\n  </div>\\n  <div>\\n    <app-pager [pager]=\\\"pager\\\" (izmenaEvent)=\\\"izlistajZgrade($event)\\\"></app-pager>\\n  </div>\\n</div>\\n\\n<div class=\\\"row justify-content-md-center\\\" *ngIf=\\\"zgrade !== undefined && zgrade.length === 0 && !pretraga\\\">\\n  <div class=\\\"col-md-10\\\">\\n    <div class=\\\"row\\\">\\n      <h2>Nema zgrada!</h2>\\n    </div>\\n  </div>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluLWtvbXBvbmVudGUvemdyYWRlL2l6bGlzdGFqLXpncmFkZS9pemxpc3Rhai16Z3JhZGUuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Response } from '@angular/http';\nimport { AdministratorService } from '../../../services/administrator/administrator.service';\nimport { UtilService } from '../../../services/util/util.service';\nimport { Zgrada } from '../../../model/zgrada';\nimport { Pager } from '../../../model/pager';\n\n\n@Component({\n    selector: 'app-izlistaj-zgrade',\n    templateUrl: './izlistaj-zgrade.component.html',\n    styleUrls: ['./izlistaj-zgrade.component.scss']\n})\nexport class IzlistajZgradeComponent implements OnInit {\n    zgrade: Zgrada[];\n    pager: Pager;\n    ulicaBroj: string;\n    ulicaBrojPolje: string;\n    mesto: string;\n    mestoPolje: string;\n    pretraga: boolean;\n\n    constructor(\n        private administratorService: AdministratorService,\n        private utilService: UtilService\n    ) { }\n\n    ngOnInit() {\n        this.pager = {\n            trenutnaStrana: 1,\n            velicinaStrane: 5,\n            ukupnoStrana: undefined,\n            prvaStrana: undefined,\n            poslednjaStrana: undefined,\n            strane: []\n        }\n        this.izlistajZgrade();\n        this.pretraga = false;\n    }\n\n    izlistajZgrade() {\n        this.administratorService.getZgrade(this.pager.trenutnaStrana-1, this.pager.velicinaStrane, this.ulicaBroj, this.mesto).subscribe(\n            res => {\n                this.zgrade = res.body as Zgrada[];\n                this.pager.ukupnoStrana = Number(res.headers.get('Ukupno-Strana'));\n                this.pager = this.utilService.getPager(this.pager);\n                this.pretraga = true; \n            }\n        )\n    }\n\n    promeniVelicinu(){\n        this.pager.trenutnaStrana = 1;\n        this.izlistajZgrade();\n    }\n\n    filtriraj() {\n        this.ulicaBroj = this.ulicaBrojPolje;\n        this.mesto = this.mestoPolje;\n        this.pager.trenutnaStrana = 1;\n        this.izlistajZgrade();\n    }\n\n}\n","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"col-md-12\\\">\\n    <div class=\\\"navbar navbar-expand-lg navbar-light bg-light navbar-fixed-top\\\">\\n      <div class=\\\"collapse navbar-collapse\\\">\\n        <ul class=\\\"navbar-nav mr-auto\\\">\\n          <li class=\\\"nav-item\\\" [class.active]=\\\"funkcionalnost === 'dodavanje'\\\">\\n            <button class=\\\"btn\\\" [class.btn-primary]=\\\"funkcionalnost === 'dodavanje'\\\" [class.btn-outline-primary]=\\\"funkcionalnost !== 'dodavanje'\\\" \\n            style=\\\"cursor: pointer;\\\" (click)=\\\"clickedFun('dodavanje')\\\"><b>Dodavanje</b></button>\\n          </li>\\n          <li class=\\\"nav-item\\\" [class.active]=\\\"funkcionalnost === 'pregled'\\\">\\n            <button class=\\\"btn\\\" [class.btn-primary]=\\\"funkcionalnost === 'pregled'\\\" [class.btn-outline-primary]=\\\"funkcionalnost !== 'pregled'\\\" \\n            style=\\\"cursor: pointer;\\\" (click)=\\\"clickedFun('pregled')\\\"><b>Pregled</b></button>\\n          </li>\\n        </ul>\\n      </div>\\n    </div>\\n  </div>\\n  <br>\\n  <router-outlet></router-outlet>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluLWtvbXBvbmVudGUvemdyYWRlL3pncmFkZS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'app-zgrade',\n    templateUrl: './zgrade.component.html',\n    styleUrls: ['./zgrade.component.scss']\n})\nexport class ZgradeComponent implements OnInit {\n    funkcionalnost: string;\n\n    constructor(\n        private router: Router\n    ) { }\n\n    ngOnInit() {\n        // postvaljamo aktivnu karticu u zavisnosti od putanje\n        let url = this.router.url;\n        let splitovanUrl = String(url).split(\"/\");\n        if (splitovanUrl[splitovanUrl.length - 1] === \"zgrade\") {\n            this.funkcionalnost = \"dodavanje\";\n        } else {\n            this.funkcionalnost = splitovanUrl[splitovanUrl.length - 1];\n        }\n    }\n\n    clickedFun(funkcionalnost: string){\n        this.funkcionalnost = funkcionalnost;\n        this.router.navigate([\"/zgrade/\" + funkcionalnost]);\n    }\n\n}\n","import { Routes } from '@angular/router';\nimport { DodajZgraduComponent } from './dodaj-zgradu/dodaj-zgradu.component';\nimport { IzlistajZgradeComponent } from './izlistaj-zgrade/izlistaj-zgrade.component';\n\nexport const zgradeRouting: Routes = [\n    { path: '', component: DodajZgraduComponent , pathMatch: 'full'},\n    { path: 'dodavanje', component: DodajZgraduComponent},\n    { path: 'pregled', component: IzlistajZgradeComponent}\n];","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<router-outlet (activate)=\\\"checkRole()\\\">\\n    <app-navbar\\n        *ngIf=\\\"uloga === 'STANAR' || uloga === 'PREDSEDNIK_SKUPSTINE' ||uloga === 'INSTITUCIJA' || uloga === 'FIRMA'\\\">\\n    </app-navbar>\\n    <app-navbar-admin *ngIf=\\\"uloga === 'ADMIN'\\\"></app-navbar-admin>\\n    <br>\\n</router-outlet>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { JwtHelper} from 'angular2-jwt';\nimport { AuthenticationService } from './services/authentication/authentication.service';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n    uloga: string;\n\n    constructor(private router: Router, private authenticateService: AuthenticationService) { }\n\n    ngOnInit() {\n    }\n\n    checkRole() {\n        // mozda ovde podesiti start up page\n\n        const item = localStorage.getItem('korisnik');\n\n        if(!item) {\n            this.router.navigate(['logovanje']);\n            this.uloga = '';\n            return;\n        }\n\n        let jwt: JwtHelper = new JwtHelper();\n\n        this.uloga = jwt.decodeToken(item).role[0].authority;\n        console.log(this.uloga);\n    }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ToastrModule } from 'ngx-toastr';\nimport { appRouting } from './app.routing';\n\nimport { AdminKomponenteModule } from './admin-komponente/admin-komponent.module';\nimport { PaginacijaModule } from './paginacija/paginacija.module';\nimport { ZgradaModule } from './zgrada/zgrada.module';\nimport { AppComponent } from './app.component';\nimport { AuthInterceptor } from './interceptors/auth.interceptor';\nimport { LogovanjeComponent } from './logovanje/logovanje.component';\nimport { AuthenticationService } from './services/authentication/authentication.service';\nimport { PromenaLozinkeComponent } from './promena-lozinke/promena-lozinke.component';\nimport { PocetnaComponent } from './pocetna/pocetna.component';\nimport { RoleGuardService } from './services/role-guard/role-guard.service';\nimport { LoginGuardService } from './services/login-guard/login-guard.service';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { ZgradaService } from './services/zgrada/zgrada.service';\nimport { KvarService } from './services/kvar/kvar.service';\nimport { UtilService } from './services/util/util.service';\nimport { AnketaService } from './services/anketa/anketa.service';\nimport { AdministratorService } from './services/administrator/administrator.service';\nimport { NotFoundPageComponent } from './not-found-page/not-found-page.component';\nimport { KvaroviOdgovornogLicaComponent } from './kvarovi-odgovornog-lica/kvarovi-odgovornog-lica.component';\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        LogovanjeComponent,\n        PromenaLozinkeComponent,\n        NavbarComponent,\n        PocetnaComponent,\n        NotFoundPageComponent,\n        KvaroviOdgovornogLicaComponent\n        \n    ],\n    imports: [\n        AdminKomponenteModule,\n        PaginacijaModule,\n        ZgradaModule,\n        BrowserModule,\n        FormsModule,\n        ReactiveFormsModule,\n        CommonModule,\n        BrowserAnimationsModule, // required animations module\n        ToastrModule.forRoot({\n            timeOut: 5000,\n            positionClass: 'toast-top-center',\n            preventDuplicates: true,\n        }),\n        HttpClientModule,\n        RouterModule.forRoot(\n            appRouting,\n            { enableTracing: true } // <-- debugging purposes only\n        )\n    ],\n    providers: [AnketaService, RoleGuardService, LoginGuardService, AuthenticationService,\n         AdministratorService, ZgradaService, KvarService, UtilService,\n        {provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true}],\n\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Routes } from '@angular/router';\nimport { PocetnaComponent } from './pocetna/pocetna.component';\nimport { ZgradaComponent } from './zgrada/zgrada.component';\nimport { LogovanjeComponent } from './logovanje/logovanje.component';\nimport { PromenaLozinkeComponent } from './promena-lozinke/promena-lozinke.component';\nimport { RoleGuardService } from './services/role-guard/role-guard.service';\nimport { LoginGuardService } from './services/login-guard/login-guard.service';\nimport { zgradaRouting } from './zgrada/zgrada.routing';\nimport { ZgradeComponent } from './admin-komponente/zgrade/zgrade.component';\nimport { zgradeRouting } from './admin-komponente/zgrade/zgrade.routing';\nimport { StanariComponent } from './admin-komponente/stanari/stanari.component';\nimport { stanariRouting } from './admin-komponente/stanari/stanari.routing';\nimport { InstitucijeComponent } from './admin-komponente/institucije/institucije.component';\nimport { institucijeRouting } from './admin-komponente/institucije/institucije.routing';\nimport { FirmeComponent } from './admin-komponente/firme/firme.component';\nimport { firmeRouting } from './admin-komponente/firme/firme.routing';\nimport { IzmenaSastankaComponent} from './zgrada/sastanci/izmena-sastanka/izmena-sastanka.component';\nimport { StanComponent } from './admin-komponente/stan/stan.component';\nimport { StanarComponent } from './admin-komponente/stanar/stanar.component';\nimport { NotFoundPageComponent } from './not-found-page/not-found-page.component';\nimport { KvaroviOdgovornogLicaComponent } from './kvarovi-odgovornog-lica/kvarovi-odgovornog-lica.component';\n\n\nexport const appRouting: Routes = [\n// mozda neophodna izmena\n    { path: '',\n        redirectTo: '/logovanje',\n        pathMatch: 'full'\n    },\n    { path: 'kvarovi/odgovoran',\n        component : KvaroviOdgovornogLicaComponent,\n        canActivate: [RoleGuardService],\n        data : {ocekivaneUloge : 'STANAR|PREDSEDNIK_SKUPSTINE|FIRMA|INSTITUCIJA'}\n    },\n    { path: 'pocetna',\n        component : PocetnaComponent,\n        canActivate: [RoleGuardService],\n        data : {ocekivaneUloge : 'STANAR|PREDSEDNIK_SKUPSTINE|ADMIN|FIRMA|INSTITUCIJA'}\n    },\n    { path: 'logovanje',\n        component: LogovanjeComponent,\n        canActivate: [LoginGuardService]\n    },\n    { path: 'promenaLozinke',\n        component: PromenaLozinkeComponent,\n        canActivate: [RoleGuardService],\n        data : {ocekivaneUloge : 'STANAR|PREDSEDNIK_SKUPSTINE|FIRMA|INSTITUCIJA'}\n    },\n    { path: 'zgrade',\n        component: ZgradeComponent,\n        canActivate: [RoleGuardService],\n        data: {ocekivaneUloge : 'ADMIN'},\n        children: zgradeRouting\n    },\n    { path: 'zgrada/:id',\n        component: ZgradaComponent,\n        children: zgradaRouting\n    },\n    { path: 'stanari',\n        component: StanariComponent,\n        canActivate: [RoleGuardService],\n        data: {ocekivaneUloge : 'ADMIN'},\n        children: stanariRouting\n    },\n    { path: 'institucije',\n        component: InstitucijeComponent,\n        canActivate: [RoleGuardService],\n        data: {ocekivaneUloge : 'ADMIN'},\n        children: institucijeRouting\n    },\n    { path: 'firme',\n        component: FirmeComponent,\n        canActivate: [RoleGuardService],\n        data: {ocekivaneUloge : 'ADMIN'},\n        children: firmeRouting\n    },\n    { path: 'stan/:id',\n        component: StanComponent,\n        canActivate: [RoleGuardService],\n        data: {ocekivaneUloge : 'ADMIN'}\n    },\n    { path: 'stanar/:id',\n        component: StanarComponent,\n        canActivate: [RoleGuardService],\n        data: {ocekivaneUloge : 'ADMIN'}\n    },\n    { path: '**', \n        component: NotFoundPageComponent \n    }\n];\n","import { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpEvent, HttpHandler, HttpRequest } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n    intercept(req: HttpRequest<any>,\n              next: HttpHandler): Observable<HttpEvent<any>> {\n\n        const item = localStorage.getItem(\"korisnik\");\n        const decodedItem = JSON.parse(item);\n\n        if (item) {\n            const cloned = req.clone({\n                headers: req.headers.set(\"X-Auth-Token\", decodedItem.token)\n            });\n\n            return next.handle(cloned);\n        }\n        else {\n            return next.handle(req);\n        }\n    }\n}\n","module.exports = \"<div class=\\\"col-md-10 container\\\">\\n<app-paginacija (izmenaEvent)=\\\"izlistaj($event)\\\"></app-paginacija>\\n\\n<div class=\\\"row\\\">\\n    <div class=\\\"checkbox\\\">\\n        <label style=\\\"padding: 10px; margin-left: 20px;\\\">\\n            <input type=\\\"checkbox\\\" [(ngModel)]=\\\"gotovo\\\" (change)=\\\"checked()\\\"> Prikazi zavrsene kvarove\\n        </label>\\n    </div>\\n</div>\\n<div *ngFor=\\\"let kvar of kvarovi\\\">\\n    <div class=\\\"row blob\\\" id=\\\"kvar_{{kvar.id}}\\\">\\n        <table>\\n        <tr>\\n            <td>\\n                <b class=\\\"naziv\\\">{{kvar.stanar.naziv}} </b> \\n                <span class=\\\"lower-impact-text\\\"> je postavio/la kvar u <i>{{kvar.datumPostavljanja | date: \\\"HH:mm dd.MM.yyyy\\\"}}</i></span>\\n            </td> \\n        </tr>\\n        <tr>\\n            <td>\\n                <span class=\\\"super-high-impact-text\\\" *ngIf=\\\"kvar.gotovo\\\">KVAR JE ZAVSREN</span>\\n            </td>\\n        </tr>\\n        <tr>\\n            <td>\\n                <span class=\\\"low-impact-text\\\">{{kvar.opis}}</span>\\n            </td>\\n        </tr>\\n        <tr>\\n            <td>\\n                \\n                <a class=\\\"pogledaj_{{kvar.id}}\\\" [routerLink]=\\\"['/zgrada/'+ kvar.zgradaId +'/kvar', kvar.id]\\\"><span class=\\\"operacije lower-impact-text\\\">pogledaj</span> </a>\\n            </td>\\n        </tr>\\n        </table>\\n    </div>\\n</div>\\n</div>\"","module.exports = \"div.blob {\\n  border-radius: 10px;\\n  background-color: #effeff;\\n  padding: 10px;\\n  margin-top: 20px; }\\n\\n.low-impact-text {\\n  color: #545454; }\\n\\n.lower-impact-text {\\n  color: #808080; }\\n\\n.operacije {\\n  margin-left: 10px;\\n  cursor: pointer; }\\n\\n.operacije:hover {\\n  text-decoration: underline; }\\n\\n.naziv {\\n  font-size: 18px;\\n  color: #212529; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAva3Zhcm92aS1vZGdvdm9ybm9nLWxpY2EvQzpcXFVzZXJzXFxMZW5vdm9cXERlc2t0b3BcXEt1cnNldmlcXEtUUy1OV1QtYW5ndWxhci1tYXN0ZXIgLSBDb3B5L3NyY1xcYXBwXFxrdmFyb3ZpLW9kZ292b3Jub2ctbGljYVxca3Zhcm92aS1vZGdvdm9ybm9nLWxpY2EuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxtQkFBbUI7RUFDbkIseUJBQXlCO0VBQ3pCLGFBQWE7RUFDYixnQkFBZ0IsRUFBQTs7QUFHcEI7RUFDSSxjQUFjLEVBQUE7O0FBR2xCO0VBQ0ksY0FBYyxFQUFBOztBQUdsQjtFQUNJLGlCQUFpQjtFQUNqQixlQUFlLEVBQUE7O0FBRW5CO0VBQ0ksMEJBQTBCLEVBQUE7O0FBRTlCO0VBQ0ksZUFBZTtFQUNmLGNBQWMsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2t2YXJvdmktb2Rnb3Zvcm5vZy1saWNhL2t2YXJvdmktb2Rnb3Zvcm5vZy1saWNhLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiZGl2LmJsb2Ige1xuICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2VmZmVmZjtcbiAgICBwYWRkaW5nOiAxMHB4O1xuICAgIG1hcmdpbi10b3A6IDIwcHg7XG59XG5cbi5sb3ctaW1wYWN0LXRleHQge1xuICAgIGNvbG9yOiAjNTQ1NDU0O1xufVxuXG4ubG93ZXItaW1wYWN0LXRleHQge1xuICAgIGNvbG9yOiAjODA4MDgwO1xufVxuXG4ub3BlcmFjaWple1xuICAgIG1hcmdpbi1sZWZ0OiAxMHB4O1xuICAgIGN1cnNvcjogcG9pbnRlcjsgXG59XG4ub3BlcmFjaWplOmhvdmVyIHtcbiAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbn1cbi5uYXppdntcbiAgICBmb250LXNpemU6IDE4cHg7XG4gICAgY29sb3I6ICMyMTI1Mjk7XG59Il19 */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { UtilService } from '../services/util/util.service';\nimport { KvarService } from '../services/kvar/kvar.service';\nimport { Pager } from '../model/pager';\nimport { Kvar } from '../model/Kvar';\n\n@Component({\n  selector: 'app-kvarovi-odgovornog-lica',\n  templateUrl: './kvarovi-odgovornog-lica.component.html',\n  styleUrls: ['./kvarovi-odgovornog-lica.component.scss']\n})\nexport class KvaroviOdgovornogLicaComponent  {\n\n  constructor(private route: ActivatedRoute, private utilService: UtilService, \n    private kvarService : KvarService) { }\n\n  kvarovi: Kvar[];\n\n  gotovo : boolean = false;\n\n  izlistaj(pager: Pager){\n    this.kvarService.getKvaroviOdgovornog(pager.trenutnaStrana-1, \n      pager.velicinaStrane, this.gotovo)\n    .subscribe(\n      (res) => {\n        this.kvarovi = res.body as Kvar[];\n        \n        this.utilService.updateUkupnoStrana.emit(Number(res.headers.get('X-ukupno-strana')));\n      }\n    )\n  }\n\n  checked(){\n    this.utilService.refreshPagination.emit(0);\n  }\n}","module.exports = \"<div class=\\\"container\\\">\\n  <form class=\\\"loginForm box\\\" name=\\\"loginForm\\\" (ngSubmit)=\\\"logovanje()\\\" novalidate>\\n    <fieldset>\\n      <legend>Logovanje</legend>\\n      <div class=\\\"alert alert-dismissible alert-danger\\\" *ngIf=\\\"greska\\\">\\n        <strong>{{greska}}</strong>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"email\\\" class=\\\"control-label\\\">Email</label>\\n        <input type=\\\"text\\\" class=\\\"form-control input-lg\\\" id=\\\"email\\\" name=\\\"email\\\" placeholder=\\\"Email\\\" [(ngModel)]=\\\"email\\\" required>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"lozinka\\\" class=\\\"control-label\\\">Lozinka</label>\\n        <input type=\\\"password\\\" class=\\\"form-control input-lg\\\" id=\\\"lozinka\\\" name=\\\"lozinka\\\" placeholder=\\\"Lozinka\\\" [(ngModel)]=\\\"lozinka\\\" required>\\n      </div>\\n      <div class=\\\"form-group center\\\">\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Ulogujte se</button>&nbsp;&nbsp;\\n        <br><br>\\n      </div>\\n    </fieldset>\\n  </form>\\n</div>\"","module.exports = \".loginForm {\\n  width: 350px;\\n  position: absolute;\\n  left: 50%;\\n  top: 50%;\\n  -webkit-transform: translate(-50%, -50%);\\n  transform: translate(-50%, -50%); }\\n\\n@media (max-width: 350px) {\\n  .myForm {\\n    min-width: 90%; } }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9nb3ZhbmplL0M6XFxVc2Vyc1xcTGVub3ZvXFxEZXNrdG9wXFxLdXJzZXZpXFxLVFMtTldULWFuZ3VsYXItbWFzdGVyIC0gQ29weS9zcmNcXGFwcFxcbG9nb3ZhbmplXFxsb2dvdmFuamUuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxZQUFZO0VBQ1osa0JBQWtCO0VBQ2xCLFNBQVM7RUFDVCxRQUFRO0VBQ1Isd0NBQXdDO0VBQ3hDLGdDQUFnQyxFQUFBOztBQUVwQztFQUNJO0lBQ0UsY0FBYyxFQUFBLEVBQ2YiLCJmaWxlIjoic3JjL2FwcC9sb2dvdmFuamUvbG9nb3ZhbmplLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmxvZ2luRm9ybSB7XG4gICAgd2lkdGg6IDM1MHB4O1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBsZWZ0OiA1MCU7XG4gICAgdG9wOiA1MCU7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiAzNTBweCkge1xuICAgIC5teUZvcm0ge1xuICAgICAgbWluLXdpZHRoOiA5MCU7XG4gICAgfVxufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from '../services/authentication/authentication.service';\nimport { JwtHelper } from 'angular2-jwt';\n\n@Component({\n    selector: 'app-logovanje',\n    templateUrl: './logovanje.component.html',\n    styleUrls: ['./logovanje.component.scss']\n})\nexport class LogovanjeComponent implements OnInit {\n    email: string;\n    lozinka: string;\n    greska: string = undefined;\n\n    constructor(\n        private router: Router,\n        private authenticateService: AuthenticationService\n    ) { }\n\n    ngOnInit() {\n    }\n\n    logovanje() {\n        this.greska = undefined;\n        this.authenticateService.logovanje(this.email, this.lozinka)\n        .subscribe(\n            result => {\n               localStorage.setItem('korisnik', JSON.stringify(result));\n               \n               this.router.navigate(['pocetna']);\n            },\n            error => {\n                // moguce grekse\n                // Stanaru nije dodeljen stan!\n                // Pogresan email ili lozinka!\n                this.greska = error.error;\n            }\n        )\n    }\n\n}\n","export enum VrstaPitanja {\n    OBICNO_PITANJE,\n    STANAR_PITANJE,\n    FIRMA_PITANJE\n}","export class Zgrada {\n    id?: number;\n    lokacija: string;\n    ulica: string;\n    broj: number;\n    brojStanova: number;\n    predsednikSkupstine?: any;\n}","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-dark bg-primary\\\">\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarColor02\\\">\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n      <li class=\\\"nav-item\\\"> \\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/pocetna']\\\">Pocetna</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/kvarovi/odgovoran']\\\">Dodeljeni kvarovi</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/promenaLozinke']\\\">Promena lozinke</a>\\n      </li>\\n    </ul>\\n    <ul class=\\\"nav navbar-nav navbar-right\\\">\\n      <li>\\n        <label class=\\\"nav-link active\\\">{{email}}&nbsp;&nbsp;&nbsp;</label>\\n      </li>\\n      <li>\\n        <button class=\\\"btn btn-secondary\\\" (click)=\\\"odjavljivanje()\\\">Izlogujte se</button>\\n      </li>\\n    </ul>\\n  </div>\\n</nav>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL25hdmJhci9uYXZiYXIuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { AuthenticationService } from '../services/authentication/authentication.service';\nimport { UtilService } from '../services/util/util.service';\n\n@Component({\n    selector: 'app-navbar',\n    templateUrl: './navbar.component.html',\n    styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent implements OnInit {\n    email: string;\n\n    constructor(\n        private router: Router, \n        private authenticateService: AuthenticationService,\n        private utilService: UtilService\n    ) { }\n\n    ngOnInit() {\n        this.email = this.utilService.email();\n    }\n\n    odjavljivanje() {\n        localStorage.removeItem('korisnik');\n    \n        this.authenticateService.izlogujSe()\n        .subscribe(\n            result => {\n                if (result) {\n                    localStorage.removeItem('korisnik');\n    \n                    this.router.navigate(['/logovanje']);\n                }\n            },\n            error => {\n                localStorage.removeItem('korisnik');\n    \n                this.router.navigate(['/logovanje']);\n                console.log(error);\n                /* KASNIJE DODATI OBRADJIVANJE GRESKU */ \n            }\n        )\n    }\n}\n","module.exports = \"<h1>404 Stranica nije pronadjena</h1>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL25vdC1mb3VuZC1wYWdlL25vdC1mb3VuZC1wYWdlLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found-page',\n  templateUrl: './not-found-page.component.html',\n  styleUrls: ['./not-found-page.component.scss']\n})\nexport class NotFoundPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<ul class=\\\"pagination\\\" >\\n  <li class=\\\"page-item\\\">\\n    <button class=\\\"btn btn-outline-primary\\\" [disabled]=\\\"pager.trenutnaStrana === 1\\\" \\n    (click)=\\\"promeniStranu(1)\\\">&lt;&lt;</button>\\n  </li>\\n  &nbsp;\\n  <li class=\\\"page-item\\\">\\n    <button class=\\\"btn btn-outline-primary\\\" [disabled]=\\\"pager.trenutnaStrana === 1\\\" \\n    (click)=\\\"promeniStranu(pager.trenutnaStrana - 1)\\\">&lt;</button>\\n  </li> \\n  &nbsp;\\n  <li class=\\\"page-item\\\" *ngFor=\\\"let strana of pager.strane\\\">\\n    <button class=\\\"btn\\\" [class.btn-primary]=\\\"strana === pager.trenutnaStrana\\\" [class.btn-outline-primary]=\\\"strana !== pager.trenutnaStrana\\\"\\n    (click)=\\\"promeniStranu(strana)\\\">{{strana}}</button>\\n  </li>\\n  &nbsp;\\n  <li class=\\\"page-item\\\">\\n    <button class=\\\"btn btn-outline-primary\\\" [disabled]=\\\"pager.trenutnaStrana === pager.ukupnoStrana\\\" \\n    (click)=\\\"promeniStranu(pager.trenutnaStrana + 1)\\\" >&gt;</button>\\n  </li>\\n  &nbsp;\\n  <li class=\\\"page-item\\\">\\n    <button class=\\\"btn btn-outline-primary\\\" [disabled]=\\\"pager.trenutnaStrana === pager.ukupnoStrana\\\" \\n    (click)=\\\"promeniStranu(pager.ukupnoStrana)\\\">&gt;&gt;</button>\\n  </li> \\n</ul>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2luYWNpamEvcGFnZXIvcGFnZXIuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Input, Output, EventEmitter } from '@angular/core';\nimport { Pager } from '../../model/pager';\n\n@Component({\n    selector: 'app-pager',\n    templateUrl: './pager.component.html',\n    styleUrls: ['./pager.component.scss']\n})\nexport class PagerComponent implements OnInit {\n    @Input()\n    pager: Pager;\n\n    @Output()\n\tizmenaEvent = new EventEmitter<Pager>();\n\n    constructor() { }\n\n    ngOnInit() {\n    }\n\n    promeniStranu(strana: number) {\n        this.pager.trenutnaStrana = strana;\n        this.izmenaEvent.emit(this.pager);\n    }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { ToastrModule } from 'ngx-toastr';\n\n\nimport { PaginacijaComponent } from './paginacija/paginacija.component';\nimport { PagerComponent } from './pager/pager.component';\n\n\n@NgModule({\n    declarations: [\n        PaginacijaComponent,\n        PagerComponent\n    ],\n    exports: [\n        PaginacijaComponent,\n        PagerComponent\n    ],\n    imports: [\n        FormsModule,\n        ReactiveFormsModule,\n        CommonModule\n    ],\n\n})\nexport class PaginacijaModule { }","module.exports = \"<div class=\\\"row paginacija\\\">\\n    <label class=\\\"col-md-1\\\">Prikazi: </label>\\n    <select class=\\\"form-control col-md-1\\\" id=\\\"prikaz\\\" [(ngModel)]=\\\"pager.velicinaStrane\\\" (change)=\\\"promeniVelicinu()\\\">\\n      <option value=\\\"1\\\">1</option>\\n      <option value=\\\"2\\\">2</option>\\n      <option value=\\\"10\\\">10</option>\\n      <option value=\\\"25\\\">25</option>\\n      <option value=\\\"50\\\">50</option>\\n    </select>\\n\\n    <div style=\\\"margin-left: 10%\\\" >\\n        <ul class=\\\"pagination\\\">\\n          <li class=\\\"page-item\\\">\\n            <button class=\\\"btn btn-outline-primary\\\" [disabled]=\\\"pager.trenutnaStrana === 1\\\" \\n            (click)=\\\"promeniStranu(1)\\\">&lt;&lt;</button>\\n          </li>\\n          &nbsp;\\n          <li class=\\\"page-item\\\">\\n            <button class=\\\"btn btn-outline-primary\\\" [disabled]=\\\"pager.trenutnaStrana === 1\\\" \\n            (click)=\\\"promeniStranu(pager.trenutnaStrana - 1)\\\">&lt;</button>\\n          </li> \\n          &nbsp;\\n          <li class=\\\"page-item\\\" *ngFor=\\\"let strana of pager.strane\\\">\\n            <button class=\\\"btn\\\" [class.btn-primary]=\\\"strana === pager.trenutnaStrana\\\" [class.btn-outline-primary]=\\\"strana !== pager.trenutnaStrana\\\"\\n            (click)=\\\"promeniStranu(strana)\\\">{{strana}}</button>\\n          </li>\\n          &nbsp;\\n          <li class=\\\"page-item\\\">\\n            <button class=\\\"btn btn-outline-primary\\\" [disabled]=\\\"pager.trenutnaStrana === pager.ukupnoStrana\\\" \\n            (click)=\\\"promeniStranu(pager.trenutnaStrana + 1)\\\" >&gt;</button>\\n          </li>\\n          &nbsp;\\n          <li class=\\\"page-item\\\">\\n            <button class=\\\"btn btn-outline-primary\\\" [disabled]=\\\"pager.trenutnaStrana === pager.ukupnoStrana\\\" \\n            (click)=\\\"promeniStranu(pager.ukupnoStrana)\\\">&gt;&gt;</button>\\n          </li> \\n        </ul>\\n      </div>\\n</div>\"","module.exports = \"div.paginacija {\\n  padding: 10px;\\n  margin-top: 15px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnaW5hY2lqYS9wYWdpbmFjaWphL0M6XFxVc2Vyc1xcTGVub3ZvXFxEZXNrdG9wXFxLdXJzZXZpXFxLVFMtTldULWFuZ3VsYXItbWFzdGVyIC0gQ29weS9zcmNcXGFwcFxccGFnaW5hY2lqYVxccGFnaW5hY2lqYVxccGFnaW5hY2lqYS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGFBQWE7RUFDYixnQkFBZ0IsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3BhZ2luYWNpamEvcGFnaW5hY2lqYS9wYWdpbmFjaWphLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiZGl2LnBhZ2luYWNpamEge1xuICAgIHBhZGRpbmc6IDEwcHg7XG4gICAgbWFyZ2luLXRvcDogMTVweDtcbn0iXX0= */\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\nimport { Zgrada } from '../../model/zgrada';\nimport { Pager } from '../../model/pager';\nimport { UtilService } from '../../services/util/util.service';\n\n\n@Component({\n    selector: 'app-paginacija',\n    templateUrl: './paginacija.component.html',\n    styleUrls: ['./paginacija.component.scss']\n})\nexport class PaginacijaComponent implements OnInit {\n    pager: Pager;\n\n    @Output()\n\tizmenaEvent = new EventEmitter<Pager>();\n    \n    constructor(\n        private utilService: UtilService\n    ) { }\n\n    ngOnInit() {\n        this.pager = {\n            trenutnaStrana: 1,\n            velicinaStrane: 10,\n            ukupnoStrana: 10,\n            prvaStrana: undefined,\n            poslednjaStrana: undefined,\n            strane: []\n        }\n        this.izmenaEvent.emit(this.pager);\n\n        this.utilService.updateUkupnoStrana\n        .subscribe(\n         (num :number) =>{\n            this.pager.ukupnoStrana = num ;\n            console.log(this.utilService.getPager(this.pager));\n            this.pager = this.utilService.getPager(this.pager);\n            }\n        )\n\n        this.utilService.refreshPagination\n        .subscribe(\n         (num) =>{\n            this.izmenaEvent.emit(this.pager);\n            }\n        )\n    }\n\n    promeniVelicinu(){\n        this.pager.trenutnaStrana = 1;\n        this.izmenaEvent.emit(this.pager);\n    }\n\n    promeniStranu(strana: number) {\n        this.pager.trenutnaStrana = strana;\n        this.izmenaEvent.emit(this.pager);\n    }\n}","module.exports = \"<div class=\\\"row justify-content-md-center\\\" *ngIf=\\\"uloga === 'ADMIN'\\\">\\n  <label class=\\\"col-md-12\\\">&nbsp;</label>\\n  <label class=\\\"col-md-12\\\">&nbsp;</label>\\n  <label class=\\\"col-md-12\\\">&nbsp;</label>\\n  <h4><ul id=\\\"opcije\\\">\\n    <li><a [routerLink]=\\\"['/zgrade']\\\">Zgrade</a></li>\\n    <li><a [routerLink]=\\\"['/stanari']\\\">Stanari</a></li>\\n    <li><a [routerLink]=\\\"['/institucije']\\\">Institucije</a></li>\\n    <li><a [routerLink]=\\\"['/firme']\\\">Firme</a></li>\\n  </ul></h4>\\n</div>\\n\\n<div class=\\\"row justify-content-md-center\\\" *ngIf=\\\"uloga === 'STANAR' || uloga === 'PREDSEDNIK_SKUPSTINE'\\\">\\n    <table class=\\\"table table-dark\\\" id=\\\"zgradaStanuje\\\">\\n      <caption>Zgrada u kojoj zivite</caption>\\n        <thead>\\n          <tr>\\n            <th scope=\\\"col\\\">Lokacija</th>\\n            <th scope=\\\"col\\\">Ulica</th>\\n            <th scope=\\\"col\\\">Broj</th>\\n            <th></th>\\n          </tr>\\n        </thead>\\n        <tbody *ngIf=\\\"data !== undefined\\\">\\n            <tr *ngFor=\\\"let zgrada of data.Stanuje\\\">\\n                <td>{{zgrada.lokacija}}</td>\\n                <td>{{zgrada.ulica}}</td>\\n                <td>{{zgrada.broj}}</td>\\n                <td><a [routerLink]=\\\"['/zgrada', zgrada.id]\\\" >Stranica</a></td>\\n              </tr>\\n        </tbody>\\n    </table>\\n</div>\\n\\n<div class=\\\"row justify-content-md-center\\\" *ngIf=\\\"uloga === 'STANAR' || uloga === 'PREDSEDNIK_SKUPSTINE'\\\">\\n  <table class=\\\"table table-dark\\\" id=\\\"zgradaVlasnik\\\">\\n    <caption>Zgrade u kojima ste vlasnik stana</caption>\\n      <thead>\\n        <tr>\\n          <th scope=\\\"col\\\">Lokacija</th>\\n          <th scope=\\\"col\\\">Ulica</th>\\n          <th scope=\\\"col\\\">Broj</th>\\n          <th></th>\\n        </tr>\\n      </thead>\\n      <tbody *ngIf=\\\"data !== undefined\\\">\\n          <tr *ngFor=\\\"let zgrada of data.Vlasnik\\\">\\n              <td>{{zgrada.lokacija}}</td>\\n              <td>{{zgrada.ulica}}</td>\\n              <td>{{zgrada.broj}}</td>\\n              <td><a [routerLink]=\\\"['/zgrada', zgrada.id]\\\">Stranica</a></td>\\n            </tr>\\n      </tbody>\\n    </table>\\n</div>\"","module.exports = \".table {\\n  width: 500px;\\n  margin-top: 50px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcG9jZXRuYS9DOlxcVXNlcnNcXExlbm92b1xcRGVza3RvcFxcS3Vyc2V2aVxcS1RTLU5XVC1hbmd1bGFyLW1hc3RlciAtIENvcHkvc3JjXFxhcHBcXHBvY2V0bmFcXHBvY2V0bmEuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0E7RUFDSSxZQUFZO0VBQ1osZ0JBQWdCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9wb2NldG5hL3BvY2V0bmEuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcbi50YWJsZSB7XG4gICAgd2lkdGg6IDUwMHB4O1xuICAgIG1hcmdpbi10b3A6IDUwcHg7XG59Il19 */\"","import { Component, OnInit } from '@angular/core';\nimport { JwtHelper } from 'angular2-jwt';\nimport { ZgradaService } from '../services/zgrada/zgrada.service';\nimport { UtilService } from '../services/util/util.service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n    selector: 'app-pocetna',\n    templateUrl: './pocetna.component.html',\n    styleUrls: ['./pocetna.component.scss']\n})\nexport class PocetnaComponent implements OnInit {\n    uloga: string;\n    data;\n\n    constructor(\n        private zgradaService: ZgradaService, private toastrService: ToastrService,\n        private utilService: UtilService\n    ) { }\n\n    ngOnInit() {\n        const item = localStorage.getItem('korisnik');\n        this.uloga = this.utilService.uloga();\n        if (this.uloga === \"STANAR\" || this.uloga === \"PREDSEDNIK_SKUPSTINE\"){\n            let email: string = this.utilService.email();\n            this.zgradaService.zgrade(email).subscribe(\n                result => {\n                    this.data = result;\n                },\n                error => {\n                    this.toastrService.error(error.error);\n                }\n            );\n        }\n    }\n\n}\n","module.exports = \"<!-- Komponenta za navigation bar -->\\n\\n<div class=\\\"container\\\">\\n  <form class=\\\"promenaLozinke box\\\" [formGroup]=\\\"form\\\" name=\\\"promenaLozinkeForm\\\" (ngSubmit)=\\\"promenaLozinke()\\\">\\n    <fieldset>\\n      <legend>Promena lozinke</legend>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"staraLozinka\\\" class=\\\"control-label\\\">Stara lozinka:</label>\\n        <input type=\\\"password\\\" class=\\\"form-control input-lg\\\" id=\\\"staraLozinka\\\" name=\\\"staraLozinka\\\" placeholder=\\\"Stara lozinka\\\" \\n        formControlName=\\\"staraLozinka\\\" \\n        [class.is-invalid]=\\\"!form.get('staraLozinka').valid && (form.get('staraLozinka').touched || form.get('staraLozinka').dirty)\\\">\\n        <div *ngIf=\\\"!form.get('staraLozinka').valid && (form.get('staraLozinka').touched || form.get('staraLozinka').dirty)\\\"\\n        class=\\\"invalid-feedback\\\">Ovo polje je obavezno!</div>\\n      </div>\\n      <div formGroupName=\\\"noveLozinke\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"novaLozinka\\\" class=\\\"control-label\\\">Nova lozinka:</label>\\n          <input type=\\\"password\\\" class=\\\"form-control input-lg\\\" id=\\\"novaLozinka\\\" name=\\\"novaLozinka\\\" placeholder=\\\"Nova lozinka\\\" \\n          formControlName=\\\"lozinka\\\" [class.is-invalid]=\\\"!form.get('noveLozinke').get('lozinka').valid &&\\n           (form.get('noveLozinke').get('lozinka').touched || form.get('noveLozinke').get('lozinka').dirty)\\\">\\n          <div *ngIf=\\\"form.get('noveLozinke').get('lozinka').hasError('required') &&\\n          (form.get('noveLozinke').get('lozinka').touched || form.get('noveLozinke').get('lozinka').dirty)\\\"\\n          class=\\\"invalid-feedback\\\">Ovo polje je obavezno!</div>\\n          <div *ngIf=\\\"form.get('noveLozinke').get('lozinka').hasError('pattern') &&\\n          (form.get('noveLozinke').get('lozinka').touched || form.get('noveLozinke').get('lozinka').dirty)\\\"\\n          class=\\\"invalid-feedback\\\">Neispravna lozinka! Pogledajte napomenu.</div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"potvrdaNoveLozinke\\\" class=\\\"control-label\\\">Potvrda nove lozinke:</label>\\n          <input type=\\\"password\\\" class=\\\"form-control input-lg\\\" id=\\\"potvrdaNoveLozinke\\\" name=\\\"potvrdaNoveLozinke\\\" \\n          placeholder=\\\"Potvrda nove lozinke\\\" formControlName=\\\"potvrdaLozinke\\\"\\n          [class.is-invalid]=\\\"form.get('noveLozinke').dirty && form.get('noveLozinke').hasError('invalid')\\\">\\n          <div *ngIf=\\\"form.get('noveLozinke').dirty && form.get('noveLozinke').hasError('invalid')\\\" \\n          class=\\\"invalid-feedback\\\">Lozinke se ne poklapaju!</div>\\n        </div>\\n      </div>\\n      <div class=\\\"small\\\">*Lozinka mora imati najmanje 6 karaktera i po jedno veliko slovo, malo slovo i cifru</div>\\n      <br>\\n      <div class=\\\"form-group center\\\">\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!form.valid\\\">Promenite lozinku</button>\\n      </div>\\n    </fieldset>\\n  </form>\\n</div>\\n\\n\"","module.exports = \".promenaLozinke {\\n  width: 350px;\\n  position: absolute;\\n  left: 50%;\\n  top: 50%;\\n  -webkit-transform: translate(-50%, -50%);\\n  transform: translate(-50%, -50%); }\\n\\n@media (max-width: 350px) {\\n  .promenaLozinke {\\n    min-width: 90%; } }\\n\\n.box {\\n  border-radius: 10px;\\n  background-color: #ecf0f1;\\n  padding: 30px; }\\n\\n.center {\\n  text-align: center; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcHJvbWVuYS1sb3ppbmtlL0M6XFxVc2Vyc1xcTGVub3ZvXFxEZXNrdG9wXFxLdXJzZXZpXFxLVFMtTldULWFuZ3VsYXItbWFzdGVyIC0gQ29weS9zcmNcXGFwcFxccHJvbWVuYS1sb3ppbmtlXFxwcm9tZW5hLWxvemlua2UuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBSUE7RUFDSSxZQUFZO0VBQ1osa0JBQWtCO0VBQ2xCLFNBQVM7RUFDVCxRQUFRO0VBQ1Isd0NBQXdDO0VBQ3hDLGdDQUFnQyxFQUFBOztBQUdwQztFQUNJO0lBQ0UsY0FBYyxFQUFBLEVBQ2Y7O0FBR0w7RUFDSSxtQkFBbUI7RUFDbkIseUJBckJjO0VBc0JkLGFBQWEsRUFBQTs7QUFHakI7RUFDSSxrQkFDSixFQUFBIiwiZmlsZSI6InNyYy9hcHAvcHJvbWVuYS1sb3ppbmtlL3Byb21lbmEtbG96aW5rZS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIiRncmF5LTIwMDogI2VjZjBmMSAhZGVmYXVsdDtcblxuJGxpZ2h0OiAkZ3JheS0yMDAgIWRlZmF1bHQ7XG5cbi5wcm9tZW5hTG96aW5rZSB7XG4gICAgd2lkdGg6IDM1MHB4O1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBsZWZ0OiA1MCU7XG4gICAgdG9wOiA1MCU7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDM1MHB4KSB7XG4gICAgLnByb21lbmFMb3ppbmtlIHtcbiAgICAgIG1pbi13aWR0aDogOTAlO1xuICAgIH1cbn1cblxuLmJveCB7XG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkbGlnaHQ7XG4gICAgcGFkZGluZzogMzBweDtcbn1cblxuLmNlbnRlciB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyXG59Il19 */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from '../services/authentication/authentication.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { FormGroup, FormBuilder, Validators, AbstractControl } from '@angular/forms';\n\n@Component({\n\tselector: 'app-promena-lozinke',\n\ttemplateUrl: './promena-lozinke.component.html',\n\tstyleUrls: ['./promena-lozinke.component.scss']\n})\nexport class PromenaLozinkeComponent implements OnInit {\n\tform: FormGroup;\n\tlozinkaPattern = \"^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9]).{6,}$\";\n\n\tconstructor(\n\t\tfb: FormBuilder,\n\t\tprivate router: Router, \n\t\tprivate toastrService: ToastrService,\n  \t\tprivate authenticateService: AuthenticationService\n    ) { \n\t\tthis.form = fb.group({\n\t\t\t'staraLozinka' : ['', Validators.required],\n\t\t\t'noveLozinke' : fb.group({\n\t\t\t\t'lozinka': ['', Validators.compose([Validators.required, Validators.pattern(this.lozinkaPattern)])],\n                'potvrdaLozinke' : ['', Validators.required]\n\t\t\t}, {validator: this.poklapanjeLozinki})\n        });\n\t}\n\n\tngOnInit() {\n  \t}\n\n\tpoklapanjeLozinki(c : AbstractControl): { invalid: boolean} {\n\t\tif (c.get('lozinka').value !== c.get('potvrdaLozinke').value) {\n\t\t\treturn {invalid : true}\n\t\t}\n\t}\n\n\tpromenaLozinke() {\n\t\tthis.authenticateService.promenaLozinke(this.form.value.staraLozinka, this.form.value.noveLozinke.lozinka, \n\t\t\tthis.form.value.noveLozinke.potvrdaLozinke).subscribe(\n            result => {\n\t\t\t\tlocalStorage.removeItem('korisnik');\n\t\t\t\tthis.toastrService.success(\"Lozinka uspesno izmenjena!\");\n\t\t\t\tthis.router.navigate(['/logovanje']);\n            },\n            error => {\n\t\t\t\tthis.toastrService.error(error.error);\n            }\n        )\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\nimport { Zgrada } from '../../model/zgrada';\nimport { Institucija } from '../../model/Institucija';\nimport { Korisnik } from '../../model/Korisnik';\nimport { Stanar } from '../../model/Stanar';\nimport { Stan } from '../../model/Stan';\nimport { Firma } from '../../model/Firma';\n\n@Injectable()\nexport class AdministratorService {\n    private headers = new HttpHeaders({'Content-Type': 'application/json'});\n\n    constructor(private http: HttpClient) { }\n\n    dodajZgradu(zgrada: Zgrada):Observable<Zgrada> {\n        return this.http.post<Zgrada>(\"/api/admin/zgrada/dodaj\", zgrada);\n    }\n\n    getZgrade(page, size, ulicaBroj, mesto) {\n        if (!ulicaBroj && !mesto) {\n            const params:HttpParams = new HttpParams().set(\"page\", page).append(\"size\", size);\n            return this.http.get(\"/api/admin/zgrade\", {params, observe: \"response\"});\n        } else if (!ulicaBroj) {\n            const params:HttpParams = new HttpParams().set(\"page\", page).append(\"size\", size).append(\"mesto\", mesto);\n            return this.http.get(\"/api/admin/zgrade\", {params, observe: \"response\"});\n        } else if (!mesto) {\n            const params:HttpParams = new HttpParams().set(\"page\", page).append(\"size\", size).append(\"ulicaBroj\", ulicaBroj);\n            return this.http.get(\"/api/admin/zgrade\", {params, observe: \"response\"});\n        } else {\n            const params:HttpParams = new HttpParams().set(\"page\", page).append(\"size\", size).append(\"ulicaBroj\", ulicaBroj).append(\"mesto\", mesto);\n            return this.http.get(\"/api/admin/zgrade\", {params, observe: \"response\"});\n        }\n    }\n\n    izlistajStanove(zgradaId: number, page: number, size: number) {\n        const params:HttpParams = new HttpParams().set(\"page\", page.toString()).append(\"size\", size.toString());\n        return this.http.get(\"/api/admin/zgrada/\" + zgradaId + \"/stanovi\", {params, observe: \"response\"});\n    }\n\n    registrujStanara(stanar: Stanar): Observable<Korisnik> {\n        return this.http.post<Korisnik>(\"api/admin/stanar/dodaj\", stanar);\n    }\n\n    getStanar(stanarId): Observable<Korisnik> {\n        return this.http.get<Korisnik>(\"/api/admin/stanar/\" + stanarId);\n    }\n\n    getStanari(page, size, filter) {\n        if (filter !== undefined) {\n            const params:HttpParams = new HttpParams().set(\"page\", page.toString()).append(\"size\", size.toString())\n                .append(\"filter\", filter);\n            return this.http.get(\"/api/admin/stanari\", {params, observe: \"response\"});\n        } else {\n            const params:HttpParams = new HttpParams().set(\"page\", page.toString()).append(\"size\", size.toString());\n            return this.http.get(\"/api/admin/stanari\", {params, observe: \"response\"});\n        }\n    }\n\n    getStanoviStanara(stanarId: number): Observable<Stan[]> {\n        return this.http.get<Stan[]>(\"/api/admin/stanar/\" + stanarId + \"/stanovi\");\n    }\n\n    registrujInstituciju(institucija: Institucija): Observable<Korisnik> {\n        return this.http.post<Korisnik>(\"/api/admin/institucija/dodaj\", institucija);\n    }\n\n    getInstitucije(page, size, filter) {\n        if (filter !== undefined) {\n            const params:HttpParams = new HttpParams().set(\"page\", page.toString()).append(\"size\", size.toString())\n                .append(\"filter\", filter);\n            return this.http.get(\"/api/admin/institucije\", {params, observe: \"response\"});\n        } else {\n            const params:HttpParams = new HttpParams().set(\"page\", page.toString()).append(\"size\", size.toString());\n            return this.http.get(\"/api/admin/institucije\", {params, observe: \"response\"});\n        }\n    }\n\n    registrujFirmu(firma: Firma): Observable<Korisnik> {\n        return this.http.post<Korisnik>(\"/api/admin/firma/dodaj\", firma);\n    }\n\n    getFirme(page, size, filter) {\n        if (filter !== undefined) {\n            const params:HttpParams = new HttpParams().set(\"page\", page.toString()).append(\"size\", size.toString())\n                .append(\"filter\", filter);\n            return this.http.get(\"/api/admin/firme\", {params, observe: \"response\"});\n        } else {\n            const params:HttpParams = new HttpParams().set(\"page\", page.toString()).append(\"size\", size.toString());\n            return this.http.get(\"/api/admin/firme\", {params, observe: \"response\"});\n        }\n    }\n\n    postaviVlasnika(stanarId: number, stanId: number): Observable<Stan> {\n        return this.http.request<Stan>(\"put\", \"api/admin/stan/\" + stanId + \"/postaviVlasnika/\" + stanarId);\n    }\n\n    ukloniVlasnika(stanId: number): Observable<Stan> {\n        return this.http.request<Stan>(\"put\", \"/api/admin/stan/\" + stanId + \"/ukloniVlasnika\");\n    }\n\n    dodajStanara(stanarId: number, stanId: number): Observable<Korisnik> {\n        return this.http.request<Korisnik>(\"put\", \"api/admin/stan/\" + stanId + \"/dodeli/\" + stanarId);\n    }\n\n    ukloniStanara(stanarId: number, stanId: number): Observable<Korisnik> {\n        return this.http.request<Korisnik>(\"put\", \"api/admin/stan/\" + stanId + \"/ukloni/\" + stanarId);\n    }\n\n    postaviPredsednika(stanarId: number): Observable<Zgrada> {\n        return this.http.request<Zgrada>(\"put\", \"/api/admin/stanar/\" + stanarId + \"/postaviZaPredsednika\");\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient,  HttpHeaders } from '@angular/common/http';\nimport { ObicnaOpcija } from '../../model/ObicnaOpcija';\nimport { VrstaPitanja } from '../../model/VrstaPitanja';\nimport { Observable } from 'rxjs/Observable';\nimport { Pitanje } from '../../model/Pitanje';\nimport { Opcija } from '../../model/Opcija';\nimport { Stan } from '../../model/Stan';\nimport { race } from 'q';\n\n@Injectable()\nexport class AnketaService {\n\tprivate headers = new HttpHeaders({'Content-Type': 'application/json'});\n\n  \tconstructor(private http: HttpClient) { \n\t\t\n\t}\n\n\tdodajPitanje(ptdrId: number, opcije: ObicnaOpcija[], tekst: string, vrstaPitanja: VrstaPitanja):Observable<Pitanje> {\n\t\treturn this.http.post<Pitanje>(\"api/ptdr/\"+ ptdrId +\"/anketa/dodajPitanje\", {\"tekst\": tekst, \"vrstaPitanja\": vrstaPitanja, \"opcije\": opcije} , {headers: this.headers, responseType: 'json'});\n\t}\n\n\tizmeniPitanje(ptdrId: number, pitanjeId: number, tekst):Observable<Pitanje> {\n\t\treturn this.http.put<Pitanje>(\"api/ptdr/\"+ ptdrId +\"/anketa/\" + pitanjeId, {\"tekst\": tekst}, {headers: this.headers, responseType: 'json'});\n\t}\n\n\tizbrisiPitanje(ptdrId: number, pitanjeId: number) {\n\t\treturn this.http.delete(\"api/ptdr/\"+ ptdrId +\"/anketa/\" + pitanjeId, {headers: this.headers, responseType: 'text'});\n\t}\n\n\tdodajOpciju(pitanjeId: number, opcija):Observable<Opcija> {\n\t\treturn this.http.post<Opcija>(\"api/anketa/\"+ pitanjeId +\"/opcija/dodaj\", opcija, {headers: this.headers, responseType: 'json'});\n\t}\n\n\tizmeniOpciju(pitanjeId: number, opcijaId: number, opcija):Observable<Opcija> {\n\t\treturn this.http.put<Opcija>(\"api/anketa/\"+ pitanjeId +\"/opcija/\" + opcijaId, opcija, {headers: this.headers, responseType: 'json'});\n\t}\n\n\tizbrisiOpciju(pitanjeId: number, opcijaId: number) {\n\t\treturn this.http.delete(\"api/anketa/\"+ pitanjeId +\"/opcija/\" + opcijaId, {headers: this.headers, responseType: 'text'});\n\t}\n\n\tstanoviKojiSuGlasali(pitanjeId: number):Observable<Stan[]> {\n\t\treturn this.http.get<Stan[]>(\"api/\" + pitanjeId + \"/stanoviKojiSuGlasaliIzZgrade\", {headers: this.headers, responseType: 'json'});\n\t}\n\n\tstanoviKojiNisuGlasali(pitanjeId: number):Observable<Stan[]> {\n\t\treturn this.http.get<Stan[]>(\"api/\" + pitanjeId + \"/stanoviKojiNisuGlasaliIzZgrade\", {headers: this.headers, responseType: 'json'});\n\t}\n\n\tglasaj(pitanjeId: number, glas):Observable<Stan> {\n\t\treturn this.http.post<Stan>(\"api/anketa/\" + pitanjeId + \"/glasaj\", glas, {headers: this.headers, responseType: 'json'});\n\t}\n\n\tukloniGlas(pitanjeId: number, glas) {\n\t\treturn this.http.put(\"api/anketa/\" + pitanjeId + \"/ukloniGlas\", glas, {headers: this.headers, responseType: 'text'});\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient,  HttpHeaders } from '@angular/common/http';\nimport { JwtHelper } from 'angular2-jwt';\n\n@Injectable()\nexport class AuthenticationService {\n    private headers = new HttpHeaders({'Content-Type': 'application/json'});\n\n    constructor(private http: HttpClient) { }\n\n    logovanje(email: string, lozinka: string) {\n        return this.http.post(\"api/ulogujSe\", {\"email\": email, \"lozinka\": lozinka}, {headers: this.headers, responseType: 'json'});\n    }\n\n    promenaLozinke(staraLozinka: string, novaLozinka: string, potvrdaNoveLozinke: string) {\n        return this.http.put(\"api/promenaLozinke\", {\"staraLozinka\": staraLozinka, \"novaLozinka\": novaLozinka, \"potvrdaNoveLozinke\": potvrdaNoveLozinke}, {headers: this.headers, responseType: 'text'});\n    }\n\n    izlogujSe() {\n        return this.http.get(\"api/izlogujSe\", {headers: this.headers, responseType: 'text'});\n    }\n\n    isAuthenticated(): boolean {\n        const token = localStorage.getItem('korisnik');\n        // Check whether the token is expired and return\n        // true or false\n\n        let jwt:JwtHelper = new JwtHelper();\n\n        if (!token) {\n            return false;\n        }\n\n        return !jwt.isTokenExpired(token);\n    }\n\n    isLoggedIn() : boolean {\n        const token = localStorage.getItem('korisnik');\n\n        if (!token) {\n            return false;\n        }\n        return true;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient,  HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Korisnik } from '../../model/Korisnik';\nimport { Observable } from 'rxjs/Observable';\nimport { Zgrada } from '../../model/zgrada';\nimport { Stan } from '../../model/Stan';\nimport 'rxjs/add/operator/map';\nimport { Response } from '@angular/http';\n\n@Injectable()\nexport class KvarService {\n\tprivate headers = new HttpHeaders({'Content-Type': 'application/json'});\n\n\tprivate params: HttpParams = new HttpParams().set('page', '0').append(\"size\", Number.MAX_VALUE.toString());\n\n    constructor(private http: HttpClient) { }\n\n\tgetKvar(id) {\n\t\tconsole.log(id);\n\t\treturn this.http.get('/api/kvar/' + id,\t{headers: this.headers, observe: \"response\"});\n\t}\n\n\tgetKvarovi(id, page, size, gotovo) {\n        return this.http.get('/api/zgrada/' + id + '/kvarovi?page=' \n        + page + '&size=' + size+ '&gotovo=' + gotovo,\n\t\t    {headers: this.headers, observe: \"response\"});\n\t}\n    \n    getKvaroviOdgovornog(page, size, gotovo) {\n        return this.http.get('/api/kvarovi/odgovoran?page=' \n        + page + '&size=' + size + '&gotovo=' + gotovo,\n\t\t    {headers: this.headers, observe: \"response\"});\n\t}\n\n\tdodajKvar(kvar) {\n        return this.http.post('/api/kvar/dodaj', kvar, {headers: this.headers, observe: 'response'});\n  \t}\n\n  \tizmenaKvara(kvar) {\n        return this.http.put('/api/kvar/' + kvar.id + '/izmeni', kvar, {headers: this.headers, observe: 'response'});\n  \t}\n\n\tdodajSliku(kvarId, slika) {\n\t\tlet formData = new FormData();\n\t\tformData.append(\"files\", slika);\n\t\t\n        return this.http.post('/api/kvar/'+kvarId+'/slika/dodaj', formData, {observe: 'response'});\n\t}\n\t\n\tgetSliku(slikaId) {\n        return this.http.get('/api/slika/'+slikaId, {observe: 'response'});\n    }\n\n\tdeleteSliku(kvarId, slikaId) {\n\t\treturn this.http.delete('/api/kvar/' +kvarId + '/slika/' + slikaId, {headers: this.headers, responseType: 'text'});\n\t}\n\n\tproslediKvar(kvarId, korisnikId) {\n\t\treturn this.http.put('/api/kvar/' + kvarId + '/prosledi/' + korisnikId,\n\t\t\t{headers: this.headers, observe: 'response'});\n    }\n\n\tzavrsiKvar(kvarId){\n\t\treturn this.http.put('/api/kvar/' + kvarId + '/zavrsi',\n\t\t\t{headers: this.headers, observe: 'response'});\n\t}\n\n    zakaziPopravku(kvarId: number,datum) {\n\t\treturn this.http.put('/api/kvar/' + kvarId + '/zakaziVreme', {'vremePopravke' : datum}, \n\t\t{headers: this.headers, responseType: 'json'});\n\t}\n\n\tdeleteKvar(id) {\n        return this.http.delete('/api/kvar/' + id, {headers: this.headers, responseType: 'text'});\n    }\n    \n    getMoguciOdgovorni(id, page, size, search) {\n\t\treturn this.http.get('/api/zgrada/' + id +'/moguciOdgovorni?page=' + page + '&size=' + size +'&search=' + search,\n\t\t\t{headers: this.headers, observe: \"response\"});\n\t}\n\n\tgetKomentari(id, page, size) {\n\t\treturn this.http.get('/api/kvar/' + id + '/komentari?page=' + page + '&size=' + size,\n\t\t    {headers: this.headers, observe: \"response\"});\n\t}\n\t\n\tdodajKomentar(kvarId, tekst: string){\n\t\treturn this.http.post('/api/kvar/' + kvarId +'/komentar/dodaj', {'tekst': tekst},\n\t\t\t{headers: this.headers, responseType: 'json'});\n\t}\n\n\tizmenaKomentara(kvarId, komId, tekst){\n\t\treturn this.http.put('/api/kvar/' + kvarId + '/komentar/' + komId,{'tekst':tekst},\n\t\t{headers: this.headers, responseType: 'json'});\n\t}\n\n\tdeleteKomentar(kvarId, komId) {\n\t\treturn this.http.delete('/api/kvar/' + kvarId + '/komentar/' + komId, {headers: this.headers, responseType: 'text'});\n\t}\n}","import { Injectable } from '@angular/core';\nimport { \n    Router,\n    CanActivate,\n    ActivatedRouteSnapshot\n} from '@angular/router';\nimport { AuthenticationService } from '../authentication/authentication.service';\nimport { JwtHelper } from 'angular2-jwt'\n\n@Injectable()\nexport class LoginGuardService implements CanActivate {\n    \n    constructor(public auth: AuthenticationService, public router: Router) {}\n    \n    canActivate(): boolean {\n        if (this.auth.isLoggedIn()) {\n            this.router.navigate(['/pocetna']);\n            return false;\n        }\n        return true;\n    }\n}","import { Injectable } from '@angular/core';\nimport { \n    Router,\n    CanActivate,\n    ActivatedRouteSnapshot\n} from '@angular/router';\nimport { AuthenticationService } from '../authentication/authentication.service';\nimport { JwtHelper } from 'angular2-jwt'\n\n@Injectable()\nexport class RoleGuardService implements CanActivate {\n    \n    constructor(public auth: AuthenticationService, public router: Router) {}\n    \n    canActivate(route: ActivatedRouteSnapshot): boolean {\n        // this will be passed from the route config\n        // on the data property\n        let ocekivaneUloge: string = route.data.ocekivaneUloge;\n        \n        const item = localStorage.getItem('korisnik');    \n\n        let jwt: JwtHelper = new JwtHelper();\n\n        if (!item) {\n            this.router.navigate(['/logovanje']);\n            return false;\n        }\n\n        // decode the token to get its payload\n        const info = jwt.decodeToken(item);\n\n        //ako su role pred skup i stanar\n        let uloge: string[] = ocekivaneUloge.split(\"|\", 5);\n        //console.log(uloge);\n\n        if (!this.auth.isLoggedIn() || uloge.indexOf(info.role[0].authority) === -1) {\n            this.router.navigate(['/pocetna']);\n            return false;\n        }\n        return true;\n  }\n}","import { Injectable, Output, EventEmitter} from '@angular/core';\nimport { JwtHelper } from 'angular2-jwt';\nimport { Pager } from '../../model/pager';\nimport { Korisnik } from '../../model/Korisnik';\n\n@Injectable()\nexport class UtilService {\n    @Output() updateUkupnoStrana = new EventEmitter<Number>();\n    \n    @Output() refreshPagination = new EventEmitter<Number>();\n\n    @Output() moguciOdgovorniModal= new EventEmitter<Number>();\n\n    @Output() moguciOdgovorniModalSelection= new EventEmitter<Korisnik>();\n\n    constructor() { }\n\n    zgrada() : number {\n        const item = localStorage.getItem('korisnik');\n        if (!item) {\n            return -1;\n        }\n        let jwt: JwtHelper = new JwtHelper();\n        const info = jwt.decodeToken(item);\n        return info.building;\n    }\n\n    email() : string {\n        const item = localStorage.getItem('korisnik');\n        if (!item) {\n            return null;\n        }\n        let jwt: JwtHelper = new JwtHelper();\n        const info = jwt.decodeToken(item);\n        return info.sub;\n    }\n\n    uloga() : string {\n        const item = localStorage.getItem('korisnik');\n        if (!item) {\n            return null;\n        }\n        let jwt: JwtHelper = new JwtHelper();\n        const info = jwt.decodeToken(item);\n        return info.role[0].authority;\n    }\n\n    getPager(pager: Pager) {\n        if (pager.ukupnoStrana <= 7) {\n            pager.prvaStrana = 1;\n            pager.poslednjaStrana = pager.ukupnoStrana;\n        } else {\n            if (pager.trenutnaStrana <= 4) {\n                pager.prvaStrana = 1;\n                pager.poslednjaStrana = 7;\n            } else if (pager.trenutnaStrana + 3 > pager.ukupnoStrana) {\n                pager.prvaStrana = pager.ukupnoStrana - 6;\n                pager.poslednjaStrana = pager.ukupnoStrana;\n            } else {\n                pager.prvaStrana = pager.trenutnaStrana - 3;\n                pager.poslednjaStrana = pager.trenutnaStrana + 3;\n            }\n        }\n        pager.strane = Array(pager.poslednjaStrana - pager.prvaStrana + 1).fill(0).map((e,i) => pager.prvaStrana + i);\n        return pager;\n    }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient,  HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Korisnik } from '../../model/Korisnik';\nimport { Observable } from 'rxjs/Observable';\nimport { Zgrada } from '../../model/zgrada';\nimport { Stan } from '../../model/Stan';\nimport 'rxjs/add/operator/map';\nimport { Response } from '@angular/http';\n\n@Injectable()\nexport class ZgradaService {\n\tprivate headers = new HttpHeaders({'Content-Type': 'application/json'});\n\n\tprivate params: HttpParams = new HttpParams().set('page', '0').append(\"size\", Number.MAX_VALUE.toString());\n\n\tconstructor(private http: HttpClient) { }\n\n    getZgrada(id: number): Observable<Zgrada> {\n        return this.http.get<Zgrada>(\"/api/zgrada/\" + id);\n    }\n\n\tzgrade(email: string) {\n\t\treturn this.http.get(\"/api/zgrada/izlistajZgradeStanara\", {headers: this.headers, responseType: 'json'});\n\t}\n\n\tgetStan(id: number): Observable<Stan> {\n\t\t//return this.http.get(\"/api/stan/\" + id).map(this.extractData);\n\t\treturn this.http.get<Stan>(\"/api/stan/\" + id);\n\t}\n\n\t/*private extractData(res: Response) {\n\t\tlet body = res.json();\n\t\treturn body;\n\t}*/\n\n\tgetStanareStana(stanId: number): Observable<Korisnik[]> {\n        return this.http.get<Korisnik[]>(\"/api/admin/stan/\" + stanId + \"/stanari\");\n\t}\n\n\tfirmeNekeZgrade(zgradaId: string):Observable<Korisnik[]> {\n\t\treturn this.http.get<Korisnik[]>(\"/api/zgrada/\"+ zgradaId +\"/izlistajFirme\",\n\t\t    {headers: this.headers, responseType: 'json', params: this.params});\n\t}\n\n\tstanariNekeZgrade(zgradaId: string):Observable<Korisnik[]> {\n\t\treturn this.http.get<Korisnik[]>(\"/api/zgrada/\"+ zgradaId +\"/izlistajStanare\",\n\t\t    {headers: this.headers, responseType: 'json', params: this.params});\n\t}\n\n\tgetObavestenja(id, page, size) {\n    \treturn this.http.get('/api/zgrada/' + id + '/obavestenja?page=' + page + '&size=' + size,\n            {headers: this.headers, observe: \"response\"});\n  \t}\n\n  \tnovoObavestenje(tekstObavestenja: string) {\n\t\treturn this.http.post('/api/obavestenje/dodaj', {'tekst': tekstObavestenja},\n\t\t     {headers: this.headers, responseType: 'json'});\n  \t}\n\n\tdeleteObavestenje(id) {\n        return this.http.delete('/api/obavestenje/' + id, {headers: this.headers, responseType: 'text'});\n\t}\n\t\n\tgetSastanci(id, page, size, krit) {\n\t\t\n\t\treturn this.http.get('/api/zgrada/' + id +'/skupstine?page=' + page + '&size=' + size \n\t\t+ '&krit=' + krit,\n\t\t\t{headers: this.headers, observe: \"response\"});\n\t}\n\n\tgetSastanciKojiPredstoje(id) {\n\t\treturn this.http.get('/api/zgrada/' + id + '/predstojeceSkupstine', \n\t\t    {headers: this.headers, responseType: 'json'});\n\t}\n\t\n\tizmenaObavestenja(id,tekstObavestenja){\n\t\treturn this.http.put('/api/obavestenje/' + id, {'noviTekst':tekstObavestenja},\n\t\t     {headers: this.headers, responseType: 'json'});\n\t}\n\n\tnoviSastanak(pocetakSkupstine: string, zavrsetakSkupstine: string) {\n\t\treturn this.http.post('/api/skupstina/dodaj', {'pocetakSkupstine': pocetakSkupstine+ ':00','krajSkupstine': zavrsetakSkupstine+ ':00'},\n\t\t    {headers: this.headers, responseType: 'json'});\n\t}\n\n\tgetSastanak(id) {\n    \treturn this.http.get('/api/skupstina/' + id, {headers: this.headers, responseType: 'json'});\n\t}\n\t  \n\tizmenaSastanka(id, pocetakSkupstine, zavrsetakSkupstine) {\n\t\treturn this.http.put('/api/skupstina/' + id, {'pocetakSkupstine': pocetakSkupstine+ ':00','krajSkupstine': zavrsetakSkupstine+ ':00'},\n\t\t    {headers: this.headers, responseType: 'json'});\n\t}\n\n\tdeleteSastanak(id) {\n        return this.http.delete('/api/skupstina/' + id, {headers: this.headers, responseType: 'text'});\n    }\n\n\tgetPtdri(id, page, size) {\n\t\treturn this.http.get('/api/zgrada/' + id +'/ptdri?page=' + page + '&size=' + size,\n\t\t\t{headers: this.headers, observe: \"response\"});\n\t}\n\n\tnoviPtdr(tekstPtdr: string) {\n\t\treturn this.http.post('/api/ptdr/dodaj', {'tekst': tekstPtdr}, \n\t\t    {headers: this.headers, responseType: 'json'});\n\t}\n\n\tizmenaPtdra(id, tekstPtdra){\n\t\treturn this.http.put('/api/ptdr/' + id, {'noviTekst':tekstPtdra},\n\t\t    {headers: this.headers, responseType: 'json'});\n\t}\n\n\n\tdonosenjeOdluke(id, tekstOdluke){\n\t\treturn this.http.put('/api/ptdr/' + id + '/odluka', {'noviTekst':tekstOdluke},\n\t\t    {headers: this.headers, responseType: 'json'});\n\t}\n\n\n\tdodajPtdrUSkupstinu(ptdrId, skupstinaId) {\n\t\treturn this.http.put('/api/skupstina/'+skupstinaId+'/ptdr/'+ptdrId+'/dodaj', \n\t\t    {headers: this.headers, responseType: 'json'});\n\t}\n\n\tukloniPtdrIzSkupstine(ptdrId, skupstinaId) {\n\t\treturn this.http.put('/api/skupstina/'+skupstinaId+'/ptdr/'+ptdrId+'/ukloni', \n\t\t    {headers: this.headers, responseType: 'json'});\n\t}\n\tdeletePtdr(id) {\n        return this.http.delete('/api/ptdr/' + id, {headers: this.headers, responseType: 'text'});\n\t}\n\n\tdobaviPtdr(ptdrId: number) {\n\t\treturn this.http.get('api/ptdr/'+ptdrId, {headers: this.headers, responseType: 'json'});\n\t}\n\n\tgetDnevniRed(id, page, size) {\n\t\treturn this.http.get('/api/skupstina/' + id +'/ptdri?page=' + page + '&size=' + size,\n\t\t\t{headers: this.headers, observe: \"response\"});\n\t}\n\n}\n","module.exports = \"<div class=\\\"container\\\" style=\\\"width:750px\\\">\\n\\n\\n        <div class=\\\"row input\\\">\\n            <div class=\\\"col-md-12\\\">\\n                <label class=\\\"col-form-label\\\" style=\\\"width: 100%;\\\">\\n                    Tekst pitanja:\\n                    <input type=\\\"text\\\" class=\\\"form-control tekst\\\" placeholder=\\\"Tekst pitanja\\\" [(ngModel)]=\\\"tekst\\\" \\n                    [class.is-invalid]=\\\"tekst.trim() === ''\\\" (input)=\\\"tekst.trim() === ''\\\" (blur)=\\\"tekst.trim() === ''\\\" required>\\n                    <div *ngIf=\\\"tekst.trim() === ''\\\" class=\\\"invalid-feedback\\\">Ovo polje ne sme biti prazno!</div>\\n                </label>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"row input\\\">\\n            <div class=\\\"col-md-3\\\">\\n                <label>\\n                    Tip pitanja:\\n                </label>\\n            </div>\\n            <div class=\\\"col-md-3\\\">\\n                <label class=\\\"radio-inline\\\"><input type=\\\"radio\\\" name=\\\"optradio\\\" id=\\\"radio1\\\" [(ngModel)]=\\\"vrstaPitanja\\\" [value]=\\\"0\\\" (click)=\\\"hiddenObicna = true; hiddenStanar = false; hiddenFirma = false; checked=true\\\">Obicno pitanje</label>\\n            </div>\\n            <div class=\\\"col-md-3\\\">\\n                <label class=\\\"radio-inline\\\"><input type=\\\"radio\\\" name=\\\"optradio\\\" id=\\\"radio2\\\" [(ngModel)]=\\\"vrstaPitanja\\\" [value]=\\\"1\\\" (click)=\\\"hiddenObicna = false; hiddenStanar = true; hiddenFirma = false; checked=true\\\">Stanar pitanje</label>\\n            </div>\\n            <div class=\\\"col-md-3\\\">\\n                <label class=\\\"radio-inline\\\"><input type=\\\"radio\\\" name=\\\"optradio\\\" id=\\\"radio3\\\" [(ngModel)]=\\\"vrstaPitanja\\\" [value]=\\\"2\\\" (click)=\\\"hiddenObicna = false; hiddenStanar = false; hiddenFirma = true; checked=true\\\">Firma pitanje</label>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"row input\\\" [hidden]=\\\"!hiddenObicna\\\">\\n            <div class=\\\"col-md-8\\\">\\n                <label class=\\\"col-form-label\\\" style=\\\"width: 100%;\\\">\\n                    Tekst opcije:\\n                    <input type=\\\"text\\\" class=\\\"form-control tekstOpcije\\\" placeholder=\\\"Tekst opcije\\\" [(ngModel)]=\\\"unesenaObicnaOpcija\\\"\\n                    [class.is-invalid]=\\\"unesenaObicnaOpcija.trim() === ''\\\" (input)=\\\"unesenaObicnaOpcija.trim() === ''\\\" (blur)=\\\"unesenaObicnaOpcija.trim() === ''\\\" required>\\n                    <div *ngIf=\\\"unesenaObicnaOpcija.trim() === ''\\\" class=\\\"invalid-feedback\\\">Ovo polje ne sme biti prazno!</div>\\n                </label>\\n            </div>\\n            <div class=\\\"col-md-4\\\"> \\n                <button type=\\\"button\\\" class=\\\"btn btn-success dodajObicnuOpciju\\\" [disabled]=\\\"unesenaObicnaOpcija.trim() === ''\\\" (click)=\\\"dodajObicnuOpciju()\\\">Dodaj obicnu opciju</button>                  \\n            </div>\\n        </div>\\n\\n        <div class=\\\"row input\\\" [hidden]=\\\"!hiddenStanar\\\">\\n            <div class=\\\"col-md-8\\\">\\n                <label class=\\\"col-form-label\\\" style=\\\"width: 100%;\\\">\\n                    Stanar:\\n                    <select class=\\\"custom-select stanarOpcija\\\" [(ngModel)]=\\\"selektovanaStanarOpcija\\\" [class.is-invalid]=\\\"selektovanaStanarOpcija === undefined\\\"> \\n                        <option [ngValue]=\\\"undefined\\\" disabled>Izaberite stanara</option>\\n                        <option *ngFor=\\\"let stanar of stanari; let i = index\\\" [ngValue]=\\\"stanar\\\">{{stanar.naziv}} - {{stanar.email}}</option>\\n                    </select>\\n                    <div *ngIf=\\\"selektovanaStanarOpcija === undefined\\\" class=\\\"invalid-feedback\\\">Morate izabrati neku od opcija!</div>\\n                </label>  \\n            </div>\\n            <div class=\\\"col-md-4\\\"> \\n                <button type=\\\"button\\\" class=\\\"btn btn-success dodajStanarOpciju\\\" [disabled]=\\\"selektovanaStanarOpcija === undefined\\\" (click)=\\\"dodajStanarOpciju()\\\">Dodaj stanar opciju</button>                  \\n            </div>\\n        </div>\\n\\n        <div class=\\\"row input\\\" [hidden]=\\\"!hiddenFirma\\\">\\n            <div class=\\\"col-md-8\\\">\\n                <label class=\\\"col-form-label\\\" style=\\\"width: 100%;\\\">\\n                    Firma:\\n                    <select class=\\\"custom-select firmaOpcija\\\" [(ngModel)]=\\\"selektovanaFirmaOpcija\\\" [class.is-invalid]=\\\"selektovanaFirmaOpcija === undefined\\\">\\n                        <option [ngValue]=\\\"undefined\\\" disabled>Izaberite firmu</option>\\n                        <option *ngFor=\\\"let firma of firme\\\" [ngValue]=\\\"firma\\\">{{firma.naziv}} - {{firma.email}}</option>\\n                    </select>  \\n                    <div *ngIf=\\\"selektovanaFirmaOpcija === undefined\\\" class=\\\"invalid-feedback\\\">Morate izabrati neku od opcija!</div>\\n                </label>\\n            </div>\\n            <div class=\\\"col-md-4\\\"> \\n                <button type=\\\"button\\\" class=\\\"btn btn-success dodajFirmaOpciju\\\" [disabled]=\\\"selektovanaFirmaOpcija === undefined\\\" (click)=\\\"dodajFirmaOpciju()\\\">Dodaj firma opciju</button>                  \\n            </div>\\n        </div>\\n\\n        <div class=\\\"row input\\\">\\n            <div class=\\\"col-md-12\\\">\\n                <label class=\\\"col-form-label\\\" style=\\\"width: 100%;\\\">\\n                    Opcije:\\n                    <table class=\\\"table table-light\\\">\\n                        <thead>\\n                            <tr>\\n                                <th>Tip</th>\\n                                <th>Tekst</th>\\n                            </tr>\\n                        </thead>\\n                        <tbody>\\n                            <tr *ngFor=\\\"let opcija of opcije; let i = index\\\">\\n                                <td *ngIf=\\\"opcija.type === 'DTOObicnaOpcija'\\\">Obicna opcija</td>\\n                                <td *ngIf=\\\"opcija.type === 'DTOStanarOpcija'\\\">Stanar opcija</td>\\n                                <td *ngIf=\\\"opcija.type === 'DTOFirmaOpcija'\\\">Firma opcija</td>\\n                                <td>{{opcija.tekst}}</td>\\n                                <td><button type=\\\"button\\\" class=\\\"btn btn-danger ukloni\\\" (click)=\\\"ukloniOpciju($event, i)\\\">Ukloni opciju</button></td>\\n                            </tr>\\n                        </tbody>\\n                    </table> \\n                </label>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"row input\\\">\\n            <div class=\\\"col-md-3\\\">\\n            </div>\\n            <div class=\\\"col-md-6\\\" *ngIf=\\\"tekst.trim() === '' || vrstaPitanja === undefined || opcije.length < 2\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-success dodajPitanje\\\"  \\n                 [disabled]=\\\"true\\\">Dodaj pitanje u anketu za predlog tacke dnevnog reda</button>\\n            </div>\\n            <div class=\\\"col-md-6\\\" *ngIf=\\\"tekst.trim() !== '' && vrstaPitanja !== undefined && opcije.length > 1\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-success dodajPitanje\\\" \\n                *ngIf=\\\"(vrstaPitanja === 0 && unesenaObicnaOpcija === '') || (vrstaPitanja === 1 && selektovanaStanarOpcija === undefined) || (vrstaPitanja === 2 && selektovanaFirmaOpcija === undefined)\\\"\\n                 [disabled]=\\\"true\\\">Dodaj pitanje u anketu za predlog tacke dnevnog reda</button>\\n\\n                 <button type=\\\"button\\\" class=\\\"btn btn-success dodajPitanje\\\" \\n                *ngIf=\\\"(vrstaPitanja === 0 && unesenaObicnaOpcija !== '') || (vrstaPitanja === 1 && selektovanaStanarOpcija !== undefined) || (vrstaPitanja === 2 && selektovanaFirmaOpcija !== undefined)\\\"\\n                 [disabled]=\\\"false\\\" (click)=\\\"dodajPitanje()\\\">Dodaj pitanje u anketu za predlog tacke dnevnog reda</button>\\n            </div>\\n            <div class=\\\"col-md-3\\\">\\n            </div>\\n        </div>\\n\\n    \\n</div>\"","module.exports = \"div.container {\\n  margin: 0 auto;\\n  margin-top: 20px;\\n  background-color: bisque;\\n  border-radius: 25px;\\n  height: auto; }\\n\\ndiv.input {\\n  overflow: auto;\\n  height: auto;\\n  margin: 5px 5px 5px 5px; }\\n\\nbutton.dodajStanarOpciju, button.dodajFirmaOpciju, button.dodajObicnuOpciju {\\n  margin-top: 29px;\\n  margin-left: 3px; }\\n\\nbutton.dodaj, button.dodajPitanje {\\n  margin-top: 20px;\\n  margin-bottom: 20px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvemdyYWRhL2Fua2V0ZS9kb2Rhai1waXRhbmplL0M6XFxVc2Vyc1xcTGVub3ZvXFxEZXNrdG9wXFxLdXJzZXZpXFxLVFMtTldULWFuZ3VsYXItbWFzdGVyIC0gQ29weS9zcmNcXGFwcFxcemdyYWRhXFxhbmtldGVcXGRvZGFqLXBpdGFuamVcXGRvZGFqLXBpdGFuamUuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxjQUFjO0VBQ2QsZ0JBQWdCO0VBQ2hCLHdCQUF3QjtFQUN4QixtQkFBbUI7RUFDbkIsWUFBWSxFQUFBOztBQUdoQjtFQUNJLGNBQWM7RUFDZCxZQUFZO0VBQ1osdUJBQXVCLEVBQUE7O0FBRzNCO0VBQ0ksZ0JBQWlCO0VBQ2pCLGdCQUFnQixFQUFBOztBQUdwQjtFQUNJLGdCQUFpQjtFQUNqQixtQkFBbUIsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3pncmFkYS9hbmtldGUvZG9kYWotcGl0YW5qZS9kb2Rhai1waXRhbmplLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiZGl2LmNvbnRhaW5lciB7XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gICAgbWFyZ2luLXRvcDogMjBweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBiaXNxdWU7XG4gICAgYm9yZGVyLXJhZGl1czogMjVweDtcbiAgICBoZWlnaHQ6IGF1dG87XG59XG5cbmRpdi5pbnB1dCB7XG4gICAgb3ZlcmZsb3c6IGF1dG87XG4gICAgaGVpZ2h0OiBhdXRvO1xuICAgIG1hcmdpbjogNXB4IDVweCA1cHggNXB4O1xufVxuXG5idXR0b24uZG9kYWpTdGFuYXJPcGNpanUsIGJ1dHRvbi5kb2RhakZpcm1hT3BjaWp1LCBidXR0b24uZG9kYWpPYmljbnVPcGNpanUge1xuICAgIG1hcmdpbi10b3AgOiAyOXB4O1xuICAgIG1hcmdpbi1sZWZ0OiAzcHg7XG59XG5cbmJ1dHRvbi5kb2RhaiwgYnV0dG9uLmRvZGFqUGl0YW5qZSB7XG4gICAgbWFyZ2luLXRvcCA6IDIwcHg7XG4gICAgbWFyZ2luLWJvdHRvbTogMjBweDtcbn0iXX0= */\"","import { Component, OnInit, EventEmitter } from '@angular/core';\nimport { Input, Output } from '@angular/core';\nimport { Korisnik } from '../../../model/Korisnik';\nimport { VrstaPitanja } from '../../../model/VrstaPitanja';\nimport { ObicnaOpcija } from '../../../model/ObicnaOpcija';\nimport { StanarOpcija } from '../../../model/StanarOpcija';\nimport { FirmaOpcija } from '../../../model/FirmaOpcija';\nimport { AnketaService } from '../../../services/anketa/anketa.service';\nimport { Pitanje } from '../../../model/Pitanje';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\nselector: 'app-dodaj-pitanje',\ntemplateUrl: './dodaj-pitanje.component.html',\nstyleUrls: ['./dodaj-pitanje.component.scss']\n})\nexport class DodajPitanjeComponent implements OnInit {\n\n\ttekst: string = \"\";\n \topcije: ObicnaOpcija[] = new Array<ObicnaOpcija>();;\n\tvrstaPitanja: VrstaPitanja = undefined;\n\n\tunesenaObicnaOpcija: string = \"\";\n\tselektovanaStanarOpcija: Korisnik = undefined;\n\tselektovanaFirmaOpcija: Korisnik = undefined;\n\n\tconstructor(private anketaService:AnketaService, private toastrService: ToastrService) { }\n\n\t@Input()\n\tfirme: Korisnik[];\n\n\t@Input()\n\tstanari: Korisnik[];\n\n\t@Input()\n\tptdrId;\n\n\t@Output()\n\tdodavanjePitanjaEvent = new EventEmitter<Pitanje>();\n\n\tngOnInit() {\n\t}\n\n\tdodajObicnuOpciju() {\n\t\tlet opcija : ObicnaOpcija = {\n\t\t\ttype : \"DTOObicnaOpcija\",\n\t\t\ttekst : this.unesenaObicnaOpcija\n\t\t}\n\t\tthis.opcije.push(opcija);\n\t}\n\n\tdodajStanarOpciju() {\n\t\tlet opcija : StanarOpcija = {\n\t\t\ttype : \"DTOStanarOpcija\",\n\t\t\ttekst : this.selektovanaStanarOpcija.naziv,\n\t\t\temail : this.selektovanaStanarOpcija.email\n\t\t}\n\t\tthis.opcije.push(opcija);\n\t}\n\n\tdodajFirmaOpciju() {\n\t\tlet opcija : FirmaOpcija = {\n\t\t\ttype : \"DTOFirmaOpcija\",\n\t\t\ttekst : this.selektovanaFirmaOpcija.naziv,\n\t\t\tfirmaId : this.selektovanaFirmaOpcija.id\n\t\t}\n\t\tthis.opcije.push(opcija);\n\t}\n\n\tukloniOpciju(evt: MouseEvent, i: number) {\n\t\tevt.preventDefault();\n\t\tthis.opcije.splice(i, 1);\n\t}\n\n\tdodajPitanje() {\n\t\tif (this.opcije.length < 2) {\n\t\t\t//ispisati gresku za nedovoljan broj opcija\n\t\t\tthis.toastrService.error(\"Nedovoljan broj opcija\");\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.vrstaPitanja === VrstaPitanja.OBICNO_PITANJE) {\n\t\t\tfor (let opcija of this.opcije) {\n\t\t\t\tif (opcija.type !== \"DTOObicnaOpcija\") {\n\t\t\t\t\t//ispisati gresku, ne sme biti drugih opcija\n\t\t\t\t\tthis.toastrService.error(\"Ne sme biti drugih opcija\");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (this.vrstaPitanja === VrstaPitanja.STANAR_PITANJE) {\n\t\t\tfor (let opcija of this.opcije) {\n\t\t\t\tif (opcija.type !== \"DTOStanarOpcija\") {\n\t\t\t\t\t//ispisati gresku, ne sme biti drugih opcija\n\t\t\t\t\tthis.toastrService.error(\"Ne sme biti drugih opcija\");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor (let opcija of this.opcije) {\n\t\t\t\tif (opcija.type !== \"DTOFirmaOpcija\") {\n\t\t\t\t\tthis.toastrService.error(\"Ne sme biti drugih opcija\");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tthis.anketaService.dodajPitanje(this.ptdrId, this.opcije, this.tekst, this.vrstaPitanja)\n        .subscribe(\n            result => {\n\t\t\t\tthis.toastrService.success(\"Pitanje uspesno dodato\");\n\t\t\t\tthis.dodavanjePitanjaEvent.emit(result);\n            },\n            error => {\n                this.toastrService.error(error.error);\n            }\n        );\n\t\n\t}\n\n}\n","module.exports = \"<div class=\\\"container\\\" style=\\\"width:800px\\\" *ngIf=\\\"(k_uloga === 'PREDSEDNIK_SKUPSTINE' || k_uloga === 'STANAR') && pocetakSkupstine > datum\\\">\\n\\n\\t<div class=\\\"row poll\\\">\\n\\t\\t<div class=\\\"col-md-9\\\">\\n\\t\\t\\t<p class=\\\"text-info\\\">Da li zelite da dodate novo pitanje?</p>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"col-md-3\\\">\\n\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-info dodaj\\\" (click)=\\\"hidden=!hidden; $event.stopPropagation()\\\">Dodaj pitanje</button>\\n\\t\\t</div>\\n\\t</div>\\n\\t\\n</div>\\n\\n<app-dodaj-pitanje [stanari]=\\\"stanari\\\" [firme]=\\\"firme\\\" [ptdrId]=\\\"ptdrId\\\" (dodavanjePitanjaEvent)=\\\"dodajPitanje($event)\\\" [hidden]=\\\"!hidden\\\"></app-dodaj-pitanje>\\n\\n<div *ngFor=\\\"let pitanje of anketa\\\">\\n\\t<app-pitanje [stanari]=\\\"stanari\\\" [firme]=\\\"firme\\\" [pitanje]=\\\"pitanje\\\" [pocetakSkupstine]=\\\"pocetakSkupstine\\\" [krajSkupstine]=\\\"krajSkupstine\\\"\\n\\t(brisanjePitanjaEvent)=\\\"izbrisiPitanje($event)\\\" (dodavanjeOpcijeEvent)=\\\"dodajOpciju($event)\\\" (brisanjeOpcijeEvent)=\\\"izbrisiOpciju($event)\\\"\\n\\t(izmenaPitanjaEvent)=\\\"izmeniPitanje($event)\\\">\\n\\t</app-pitanje>\\n</div>\"","module.exports = \"div.container {\\n  margin: 0 auto;\\n  margin-top: 20px;\\n  background-color: bisque;\\n  border-radius: 25px;\\n  height: 60px; }\\n\\np.text-info {\\n  margin-top: 10px;\\n  margin-left: 20px;\\n  font-size: 18pt; }\\n\\nbutton.dodaj {\\n  margin-top: 10px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvemdyYWRhL2Fua2V0ZS9pemxpc3Rhai1hbmtldGUvQzpcXFVzZXJzXFxMZW5vdm9cXERlc2t0b3BcXEt1cnNldmlcXEtUUy1OV1QtYW5ndWxhci1tYXN0ZXIgLSBDb3B5L3NyY1xcYXBwXFx6Z3JhZGFcXGFua2V0ZVxcaXpsaXN0YWotYW5rZXRlXFxpemxpc3Rhai1hbmtldGUuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxjQUFjO0VBQ2QsZ0JBQWdCO0VBQ2hCLHdCQUF3QjtFQUN4QixtQkFBbUI7RUFDbkIsWUFBWSxFQUFBOztBQUdoQjtFQUNJLGdCQUFpQjtFQUNqQixpQkFBaUI7RUFDakIsZUFBZSxFQUFBOztBQUduQjtFQUNJLGdCQUFpQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvemdyYWRhL2Fua2V0ZS9pemxpc3Rhai1hbmtldGUvaXpsaXN0YWotYW5rZXRlLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiZGl2LmNvbnRhaW5lciB7XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gICAgbWFyZ2luLXRvcDogMjBweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBiaXNxdWU7XG4gICAgYm9yZGVyLXJhZGl1czogMjVweDtcbiAgICBoZWlnaHQ6IDYwcHg7XG59XG5cbnAudGV4dC1pbmZvIHtcbiAgICBtYXJnaW4tdG9wIDogMTBweDtcbiAgICBtYXJnaW4tbGVmdDogMjBweDtcbiAgICBmb250LXNpemU6IDE4cHQ7XG59XG5cbmJ1dHRvbi5kb2RhaiB7XG4gICAgbWFyZ2luLXRvcCA6IDEwcHg7XG59Il19 */\"","import { Component, OnInit } from '@angular/core';\nimport { Router, Params, Route } from '@angular/router';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { Pitanje } from '../../../model/Pitanje';\nimport { VrstaPitanja } from '../../../model/VrstaPitanja';\nimport { ZgradaService } from '../../../services/zgrada/zgrada.service';\nimport { Korisnik } from '../../../model/Korisnik';\nimport { Observable } from 'rxjs/Observable';\nimport { Opcija } from '../../../model/Opcija';\nimport { ToastrService } from 'ngx-toastr';\nimport { UtilService } from '../../../services/util/util.service';\n\n@Component({\n  selector: 'app-izlistaj-ankete',\n  templateUrl: './izlistaj-ankete.component.html',\n  styleUrls: ['./izlistaj-ankete.component.scss']\n})\nexport class IzlistajAnketeComponent implements OnInit {\n\n    zgrada: string;\n    firme: Korisnik[];\n    stanari: Korisnik[];\n\n    skupstinaId;\n    skupstina;\n    pocetakSkupstine;\n    krajSkupstine;\n    ptdrId;\n\n    k_uloga;\n    datum = new Date();\n\n    anketa: Pitanje[];\n    tacke;\n\n    constructor(private router: Router, private route:ActivatedRoute, \n        private zgradaService: ZgradaService, private toastrService: ToastrService, private utilService: UtilService) { }\n\n    ngOnInit() {\n        this.route.parent.params.subscribe((params: Params) => {\n            this.zgrada = params['id'];\n        });\n        this.ptdrId = Number(this.route.snapshot.paramMap.get(\"idTacke\"));\n        this.skupstinaId = Number(this.route.snapshot.paramMap.get(\"idSastanka\"));\n\n        this.k_uloga = this.utilService.uloga();\n\n        this.zgradaService.getSastanak(this.skupstinaId)\n            .subscribe(\n            (res) => {\n                this.skupstina = res;\n                this.pocetakSkupstine = this.skupstina.pocetakSkupstine;\n                this.krajSkupstine = this.skupstina.krajSkupstine;\n            },\n            error => {\n                this.router.navigate(['sastanci'], { relativeTo: this.route.parent });\n                this.toastrService.error(error.error);\n\n            }\n        );\n\n        this.zgradaService.dobaviPtdr(this.ptdrId)\n        .subscribe(\n            result => {\n                this.tacke = result;\n                this.anketa = this.tacke.anketa;\n            },\n            error => {\n                this.router.navigate(['sastanci'], { relativeTo: this.route.parent });\n                this.toastrService.error(error.error);\n            }\n        );\n        if (this.k_uloga === \"PREDSEDNIK_SKUPSTINE\" || this.k_uloga === \"STANAR\") {\n            this.zgradaService.firmeNekeZgrade(this.zgrada)\n            .subscribe(\n                result => {\n                    this.firme = result;\n                },\n                error => {\n                    this.toastrService.error(error.error);\n                }\n            );\n\n            this.zgradaService.stanariNekeZgrade(this.zgrada)\n            .subscribe(\n                result => {\n                    this.stanari = result;\n                },\n                error => {\n                    this.toastrService.error(error.error);\n                }\n            );\n        }\n    }\n\n    dodajPitanje(pitanje: Pitanje) {\n      this.anketa.push(pitanje);\n\t}\n\t\n\tizbrisiPitanje(pitanjeId: number) {\n\t\tfor (let i = 0; i < this.anketa.length; i++) {\n\t\t\tif (this.anketa[i].id === pitanjeId) {\n\t\t\t\tthis.anketa.splice(i, 1);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n    }\n    \n    izmeniPitanje(pitanje: Pitanje) {\n        for (let i = 0; i < this.anketa.length; i++) {\n            if (this.anketa[i].id === pitanje.id) {\n                this.anketa[i] = pitanje;\n            }\n        }\n    }\n\n\tizbrisiOpciju(opcija) {\n\t\tlet index: number;\n\t\tfor (let i = 0; i < this.anketa.length; i++) {\n\t\t\tif (this.anketa[i].id === opcija.pitanjeId) {\n\t\t\t\tfor (let j = 0; j < this.anketa[i].opcije.length; j++) {\n\t\t\t\t\tif (this.anketa[i].opcije[j].id === opcija.opcijaId) {\n\t\t\t\t\t\tthis.anketa[i].opcije.splice(j, 1);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tdodajOpciju(opcija: Opcija) {\n\t\tfor (let i = 0; i < this.anketa.length; i++) {\n\t\t\tif (this.anketa[i].id === opcija.pitanjeId) {\n\t\t\t\tthis.anketa[i].opcije.push(opcija);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n}\n","module.exports = \"<div class=\\\"container\\\" style=\\\"width:800px\\\">\\n    \\n    <div class=\\\"row poll\\\" *ngIf=\\\"dozvola()\\\">\\n        <div class=\\\"col-md-7\\\">\\n            <p class=\\\"text-info\\\"><span [hidden]=\\\"editable\\\">{{pitanje.tekst}}</span>\\n            <span class=\\\"izmena\\\" [hidden]=\\\"!editable\\\" contenteditable=\\\"true\\\" #ref1>{{pitanje.tekst}}</span></p>\\n        </div>\\n        <div class=\\\"col-md-5\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-info vidiGlasove\\\" (click)=\\\"hidden = !hidden\\\">Vidi glasove</button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-info izmenitiPitanje\\\" [hidden]=\\\"editable\\\" (click)=\\\"izmeniPitanje()\\\">Izmeniti</button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-info sacuvatiPitanje\\\" [hidden]=\\\"!editable\\\" (click)=\\\"sacuvajPitanje(ref1)\\\">Sacuvati</button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-danger izbrisatiPitanje\\\" (click)=\\\"izbrisiPitanje(pitanje.id)\\\">Izbrisati</button>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"row poll\\\" *ngIf=\\\"!dozvola()\\\">\\n        <div class=\\\"col-md-9\\\">\\n            <p class=\\\"text-info\\\">{{pitanje.tekst}}</p>\\n        </div>\\n        <div class=\\\"col-md-3\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-info vidiGlasove\\\" (click)=\\\"hidden = !hidden\\\">Vidi glasove</button>\\n        </div>\\n    </div>\\n\\n    <fieldset>\\n        <div class=\\\"form-group\\\">\\n            <div *ngFor=\\\"let opcija of pitanje.opcije; let i = index\\\">\\n                <div class=\\\"row options\\\">\\n\\n                    <div class=\\\"col-md-8\\\" *ngIf=\\\"dozvola()\\\">\\n                        <div class=\\\"custom-control custom-radio\\\">\\n                            <input id=\\\"{{opcija.id}}\\\" type=\\\"radio\\\" name=\\\"customRadio\\\" class=\\\"custom-control-input\\\" [(ngModel)]=\\\"selektovanaOpcija\\\" [value]=\\\"opcija\\\">\\n                            <label contenteditable=\\\"false\\\" class=\\\"custom-control-label\\\" style=\\\"max-width: 380px; overflow:auto;\\\" for=\\\"{{opcija.id}}\\\">\\n                                <span id=\\\"span_{{opcija.id}}_1\\\" [hidden]=\\\"editableOption[i]\\\">{{opcija.tekst}}</span>\\n                                <span class=\\\"izmenaOpcije\\\" id=\\\"span_{{opcija.id}}_2\\\" [hidden]=\\\"!editableOption[i]\\\" contenteditable=\\\"true\\\">{{opcija.tekst}}</span>\\n                            </label>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-md-12\\\" *ngIf=\\\"!dozvola()\\\">\\n                        <div class=\\\"custom-control custom-radio\\\">\\n                            <input id=\\\"{{opcija.id}}\\\" type=\\\"radio\\\" name=\\\"customRadio\\\" class=\\\"custom-control-input\\\" [(ngModel)]=\\\"selektovanaOpcija\\\" [value]=\\\"opcija\\\">\\n                            <label class=\\\"custom-control-label\\\" style=\\\"max-width: 510px; overflow:auto;\\\" for={{opcija.id}}>{{opcija.tekst}}</label>\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"col-md-4\\\" *ngIf=\\\"dozvola()\\\">\\n                        <button type=\\\"button\\\" class=\\\"btn btn-warning izmenitiOpciju\\\" [hidden]=\\\"editableOption[i]\\\" (click)=\\\"izmeniOpciju(i)\\\">Izmeniti</button>\\n                        <button type=\\\"button\\\" class=\\\"btn btn-warning sacuvatiOpciju\\\" [hidden]=\\\"!editableOption[i]\\\" (click)=\\\"sacuvajOpciju(i, opcija)\\\">Sacuvati</button>\\n                        <button type=\\\"button\\\" class=\\\"btn btn-danger izbrisatiOpciju\\\" [disabled]=\\\"pitanje.opcije.length === 2\\\" (click)=\\\"izbrisiOpciju(pitanje.id, opcija.id)\\\">Izbrisati</button>\\n                    </div>\\n                </div>\\n\\n                <div class= \\\"row results\\\" [hidden]=\\\"!hidden\\\">\\n                    <div class=\\\"col-md-12\\\">\\n                        <span *ngFor=\\\"let stan of opcija.stanovi\\\">Stan {{stan.broj}}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>\\n                    </div>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"row\\\" *ngIf=\\\"(k_uloga === 'STANAR' || k_uloga === 'PREDSEDNIK_SKUPSTINE') && pocetakSkupstine < datum && krajSkupstine > datum\\\">\\n                <div class=\\\"col-md-2\\\">\\n                    <button type=\\\"button\\\" class=\\\"btn btn-success glasati\\\" [disabled]=\\\"stanZaGlasanje === undefined || selektovanaOpcija === udenfined\\\" (click)=\\\"glasaj(pitanje.id)\\\">Glasaj</button>\\n                </div>\\n        \\n                <div class=\\\"col-md-4\\\">    \\n                    <select class=\\\"custom-select glasanjeOpcija\\\" style=\\\"width:200px\\\" [(ngModel)]=\\\"stanZaGlasanje\\\" [class.is-invalid]=\\\"stanZaGlasanje === undefined\\\">\\n                        <option [ngValue]=\\\"undefined\\\" disabled>Izaberite stan</option>\\n                        <option *ngFor=\\\"let stan of stanoviKojiNisuGlasali\\\" [ngValue]=\\\"stan\\\">Stan {{stan.broj}}</option>\\n                    </select>\\n                </div>\\n        \\n                <div class=\\\"col-md-2\\\">\\n                    <button type=\\\"button\\\" class=\\\"btn btn-danger uklonitiGlas\\\" [disabled]=\\\"stanZaUklanjanjeGlasa === undefined\\\" (click)=\\\"ukloniGlas(pitanje.id)\\\">Ukloni glas</button>\\n                </div>\\n        \\n                <div class=\\\"col-md-4\\\">    \\n                    <select class=\\\"custom-select uklanjanjeGlasaOpcija\\\" style=\\\"width:200px\\\" [(ngModel)]=\\\"stanZaUklanjanjeGlasa\\\" [class.is-invalid]=\\\"stanZaUklanjanjeGlasa === undefined\\\">\\n                        <option [ngValue]=\\\"undefined\\\" disabled>Izaberite stan</option>\\n                        <option *ngFor=\\\"let stan of stanoviKojiSuGlasali\\\" [ngValue]=\\\"stan\\\">Stan {{stan.broj}}</option>\\n                    </select>\\n                </div>\\n            </div>\\n        </div>\\n    </fieldset>\\n\\n    <div class=\\\"row unos\\\" *ngIf=\\\"dozvola() && pitanje.vrstaPitanja === 'OBICNO_PITANJE'\\\">\\n        <div class=\\\"col-md-4\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-success dodajObicnuOpciju1\\\" [disabled]=\\\"tekstObicneOpcije === ''\\\" (click)=\\\"dodajObicnuOpciju(pitanje.id)\\\">Dodaj obicnu opciju</button>\\n        </div>\\n        <div class=\\\"col-md-8\\\"> \\n            <label class=\\\"col-form-label\\\" style=\\\"width: 100%;\\\">\\n                Tekst opcije:\\n                <input type=\\\"text\\\" class=\\\"form-control tekst1\\\" placeholder=\\\"Tekst opcije\\\" [(ngModel)]=\\\"tekstObicneOpcije\\\" [class.is-invalid]=\\\"tekstObicneOpcije === ''\\\">  \\n                <div *ngIf=\\\"tekstObicneOpcije === ''\\\" class=\\\"invalid-feedback\\\">Ovo polje ne sme biti prazno!</div>\\n            </label>                  \\n        </div>\\n    </div>\\n\\n    <div class=\\\"row unos\\\" *ngIf=\\\"dozvola() && pitanje.vrstaPitanja === 'STANAR_PITANJE'\\\">\\n        <div class=\\\"col-md-4\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-success dodajStanarOpciju1\\\" [disabled]=\\\"selektovanaStanarOpcija === undefined\\\" (click)=\\\"dodajStanarOpciju(pitanje.id)\\\">Dodaj stanara kao opciju</button>\\n        </div>\\n        <div class=\\\"col-md-8\\\"> \\n            <label class=\\\"col-form-label\\\" style=\\\"width: 100%;\\\">\\n                Stanar:\\n                <select class=\\\"custom-select stanarOpcija1\\\" [(ngModel)]=\\\"selektovanaStanarOpcija\\\" [class.is-invalid]=\\\"selektovanaStanarOpcija === undefined\\\">\\n                    <option [ngValue]=\\\"undefined\\\" disabled>Izaberite stanara</option>\\n                    <option *ngFor=\\\"let stanar of stanari\\\" [ngValue]=\\\"stanar\\\">{{stanar.naziv}} - {{stanar.email}}</option>\\n                </select>\\n            </label>                \\n        </div>\\n    </div>\\n\\n    <div class=\\\"row unos\\\" *ngIf=\\\"dozvola() && pitanje.vrstaPitanja === 'FIRMA_PITANJE'\\\">\\n        <div class=\\\"col-md-4\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-success dodajFirmaOpciju1\\\" [disabled]=\\\"selektovanaFirmaOpcija === undefined\\\" (click)=\\\"dodajFirmaOpciju(pitanje.id)\\\">Dodaj firmu kao opciju</button>\\n        </div>\\n        <div class=\\\"col-md-8\\\">\\n            <label class=\\\"col-form-label\\\" style=\\\"width: 100%;\\\">\\n                Firma:\\n                <select class=\\\"custom-select firmaOpcija1\\\" [(ngModel)]=\\\"selektovanaFirmaOpcija\\\" [class.is-invalid]=\\\"selektovanaFirmaOpcija === undefined\\\">\\n                    <option [ngValue]=\\\"undefined\\\" disabled>Izaberite firmu</option>\\n                    <option *ngFor=\\\"let firma of firme\\\" [ngValue]=\\\"firma\\\">{{firma.naziv}} - {{firma.email}}</option>\\n                </select>\\n            </label>                   \\n        </div>\\n    </div>\\n\\n</div>\"","module.exports = \"div.container {\\n  margin: 0 auto;\\n  margin-top: 20px;\\n  background-color: lightgrey;\\n  border-radius: 25px;\\n  height: auto; }\\n\\ndiv.poll {\\n  word-wrap: break-word;\\n  height: auto; }\\n\\ndiv.options {\\n  background-color: darkgrey;\\n  border-radius: 25px;\\n  margin: 10px 10px 10px 10px;\\n  height: auto;\\n  min-height: 80px; }\\n\\ndiv.results {\\n  background-color: bisque;\\n  border-radius: 25px;\\n  margin: 20px 20px 20px 20px; }\\n\\nspan {\\n  margin-top: 20px;\\n  margin-left: 20px;\\n  font-size: 16pt; }\\n\\ndiv.custom-control {\\n  margin-top: 20px;\\n  margin-left: 20px;\\n  font-size: 16pt; }\\n\\n.row {\\n  height: 80px;\\n  margin-top: 10px; }\\n\\n.unos {\\n  height: 90px;\\n  margin-top: 10px; }\\n\\np.text-info {\\n  margin-top: 20px;\\n  margin-left: 20px;\\n  font-size: 22pt; }\\n\\nbutton.izmenitiOpciju, button.izmenitiPitanje, button.izbrisatiOpciju, button.izbrisatiPitanje,\\nbutton.vidiGlasove, button.sacuvatiOpciju, button.sacuvatiPitanje {\\n  margin-top: 20px;\\n  margin-right: 1px; }\\n\\nbutton.glasati, button.uklonitiGlas {\\n  margin-left: 20px; }\\n\\nbutton.dodajStanarOpciju1,\\nbutton.dodajFirmaOpciju1, button.dodajObicnuOpciju1 {\\n  margin-top: 28px;\\n  margin-left: 20px; }\\n\\ninput.form-control {\\n  width: 200px;\\n  margin-left: 1px; }\\n\\n.custom-select {\\n  width: 95%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvemdyYWRhL2Fua2V0ZS9waXRhbmplL0M6XFxVc2Vyc1xcTGVub3ZvXFxEZXNrdG9wXFxLdXJzZXZpXFxLVFMtTldULWFuZ3VsYXItbWFzdGVyIC0gQ29weS9zcmNcXGFwcFxcemdyYWRhXFxhbmtldGVcXHBpdGFuamVcXHBpdGFuamUuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxjQUFjO0VBQ2QsZ0JBQWdCO0VBQ2hCLDJCQUEyQjtFQUMzQixtQkFBbUI7RUFDbkIsWUFBWSxFQUFBOztBQUdoQjtFQUNJLHFCQUFxQjtFQUNyQixZQUFZLEVBQUE7O0FBR2hCO0VBQ0ksMEJBQTBCO0VBQzFCLG1CQUFtQjtFQUNuQiwyQkFBMkI7RUFDM0IsWUFBWTtFQUNaLGdCQUFnQixFQUFBOztBQUdwQjtFQUNJLHdCQUF3QjtFQUN4QixtQkFBbUI7RUFDbkIsMkJBQTJCLEVBQUE7O0FBRy9CO0VBQ0ksZ0JBQWlCO0VBQ2pCLGlCQUFpQjtFQUNqQixlQUFlLEVBQUE7O0FBR25CO0VBQ0ksZ0JBQWlCO0VBQ2pCLGlCQUFpQjtFQUNqQixlQUFlLEVBQUE7O0FBR25CO0VBQ0ksWUFBWTtFQUNaLGdCQUFnQixFQUFBOztBQUdwQjtFQUNJLFlBQVk7RUFDWixnQkFBZ0IsRUFBQTs7QUFHcEI7RUFDSSxnQkFBaUI7RUFDakIsaUJBQWlCO0VBQ2pCLGVBQWUsRUFBQTs7QUFHbkI7O0VBRUksZ0JBQWlCO0VBQ2pCLGlCQUFpQixFQUFBOztBQUdyQjtFQUNJLGlCQUFpQixFQUFBOztBQUdyQjs7RUFFSSxnQkFBaUI7RUFDakIsaUJBQWlCLEVBQUE7O0FBR3JCO0VBQ0ksWUFBWTtFQUNaLGdCQUFnQixFQUFBOztBQUdwQjtFQUNJLFVBQVUsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3pncmFkYS9hbmtldGUvcGl0YW5qZS9waXRhbmplLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiZGl2LmNvbnRhaW5lciB7XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gICAgbWFyZ2luLXRvcDogMjBweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBsaWdodGdyZXk7XG4gICAgYm9yZGVyLXJhZGl1czogMjVweDtcbiAgICBoZWlnaHQ6IGF1dG87XG59XG5cbmRpdi5wb2xsIHtcbiAgICB3b3JkLXdyYXA6IGJyZWFrLXdvcmQ7XG4gICAgaGVpZ2h0OiBhdXRvO1xufVxuXG5kaXYub3B0aW9ucyB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogZGFya2dyZXk7XG4gICAgYm9yZGVyLXJhZGl1czogMjVweDtcbiAgICBtYXJnaW46IDEwcHggMTBweCAxMHB4IDEwcHg7XG4gICAgaGVpZ2h0OiBhdXRvO1xuICAgIG1pbi1oZWlnaHQ6IDgwcHg7XG59XG5cbmRpdi5yZXN1bHRzIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBiaXNxdWU7XG4gICAgYm9yZGVyLXJhZGl1czogMjVweDtcbiAgICBtYXJnaW46IDIwcHggMjBweCAyMHB4IDIwcHg7XG59XG5cbnNwYW4ge1xuICAgIG1hcmdpbi10b3AgOiAyMHB4O1xuICAgIG1hcmdpbi1sZWZ0OiAyMHB4O1xuICAgIGZvbnQtc2l6ZTogMTZwdDtcbn1cblxuZGl2LmN1c3RvbS1jb250cm9sIHtcbiAgICBtYXJnaW4tdG9wIDogMjBweDtcbiAgICBtYXJnaW4tbGVmdDogMjBweDtcbiAgICBmb250LXNpemU6IDE2cHQ7XG59XG5cbi5yb3cge1xuICAgIGhlaWdodDogODBweDtcbiAgICBtYXJnaW4tdG9wOiAxMHB4O1xufVxuXG4udW5vcyB7XG4gICAgaGVpZ2h0OiA5MHB4O1xuICAgIG1hcmdpbi10b3A6IDEwcHg7XG59XG5cbnAudGV4dC1pbmZvIHtcbiAgICBtYXJnaW4tdG9wIDogMjBweDtcbiAgICBtYXJnaW4tbGVmdDogMjBweDtcbiAgICBmb250LXNpemU6IDIycHQ7XG59XG5cbmJ1dHRvbi5pem1lbml0aU9wY2lqdSwgYnV0dG9uLml6bWVuaXRpUGl0YW5qZSwgYnV0dG9uLml6YnJpc2F0aU9wY2lqdSwgYnV0dG9uLml6YnJpc2F0aVBpdGFuamUsIFxuYnV0dG9uLnZpZGlHbGFzb3ZlLCBidXR0b24uc2FjdXZhdGlPcGNpanUsIGJ1dHRvbi5zYWN1dmF0aVBpdGFuamUge1xuICAgIG1hcmdpbi10b3AgOiAyMHB4O1xuICAgIG1hcmdpbi1yaWdodDogMXB4O1xufVxuXG5idXR0b24uZ2xhc2F0aSwgYnV0dG9uLnVrbG9uaXRpR2xhcyB7XG4gICAgbWFyZ2luLWxlZnQ6IDIwcHg7XG59XG5cbmJ1dHRvbi5kb2RhalN0YW5hck9wY2lqdTEsIFxuYnV0dG9uLmRvZGFqRmlybWFPcGNpanUxLCBidXR0b24uZG9kYWpPYmljbnVPcGNpanUxIHtcbiAgICBtYXJnaW4tdG9wIDogMjhweDtcbiAgICBtYXJnaW4tbGVmdDogMjBweDtcbn1cblxuaW5wdXQuZm9ybS1jb250cm9sIHtcbiAgICB3aWR0aDogMjAwcHg7XG4gICAgbWFyZ2luLWxlZnQ6IDFweDtcbn1cblxuLmN1c3RvbS1zZWxlY3Qge1xuICAgIHdpZHRoOiA5NSU7XG59Il19 */\"","import { Component, OnInit } from '@angular/core';\nimport { Input, Output, EventEmitter } from '@angular/core';\nimport { ActivatedRoute, Params } from '@angular/router';\n\nimport { Pitanje } from '../../../model/Pitanje';\nimport { VrstaPitanja } from '../../../model/VrstaPitanja';\nimport { UtilService } from '../../../services/util/util.service';\nimport { Korisnik } from '../../../model/Korisnik';\nimport { AnketaService } from '../../../services/anketa/anketa.service';\nimport { Opcija } from '../../../model/Opcija';\nimport { Stan } from '../../../model/Stan';\nimport { ZgradaService } from '../../../services/zgrada/zgrada.service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n    selector: 'app-pitanje',\n    templateUrl: './pitanje.component.html',\n    styleUrls: ['./pitanje.component.scss']\n})\nexport class PitanjeComponent implements OnInit {\n\n    tekstObicneOpcije: string = \"\";\n    selektovanaStanarOpcija: Korisnik = undefined;\n    selektovanaFirmaOpcija: Korisnik = undefined;\n    selektovanaOpcija: Opcija = undefined;\n\n    stanoviKojiSuGlasali: Stan[];\n    stanoviKojiNisuGlasali: Stan[];\n\n    stanZaGlasanje: Stan = undefined;\n    stanZaUklanjanjeGlasa: Stan = undefined;\n\n    k_email: string;\n    k_uloga: string;\n    k_zgrada: number;\n    zgrada: string;\n\n    ptdrId: number;\n    datum = new Date();\n\n    editable: boolean = false;\n    editableOption: boolean[] = [];\n\n    @Input()\n    pitanje: Pitanje;\n\n    @Input()\n    stanari: Korisnik[];\n\n    @Input()\n    firme: Korisnik[];\n\n    @Input()\n    pocetakSkupstine;\n\n    @Input()\n    krajSkupstine;\n\n    @Output()\n    brisanjePitanjaEvent = new EventEmitter<number>();\n\n    @Output()\n    izmenaPitanjaEvent = new EventEmitter<Pitanje>();\n    \n    @Output()\n    brisanjeOpcijeEvent = new EventEmitter<any>();\n    \n    @Output()\n\tdodavanjeOpcijeEvent = new EventEmitter<Opcija>();\n\n    constructor(private route:ActivatedRoute, private utilService: UtilService,\n         private anketaService: AnketaService, private zgradaService: ZgradaService,\n            private toastrService: ToastrService) { }\n\n    ngOnInit() {\n        this.route.parent.params.subscribe((params: Params) => {\n            this.zgrada = params['id'];\n        });\n        this.ptdrId = Number(this.route.snapshot.paramMap.get(\"idTacke\"));\n\n        this.k_email = this.utilService.email();\n        this.k_uloga = this.utilService.uloga();\n        this.k_zgrada = this.utilService.zgrada(); \n        \n        if (this.k_uloga === \"STANAR\" || this.k_uloga === \"PREDSEDNIK_SKUPSTINE\") {\n            this.anketaService.stanoviKojiSuGlasali(this.pitanje.id)\n            .subscribe(\n                result => {\n                    this.stanoviKojiSuGlasali = result;\n                },\n                error => {\n                    this.toastrService.error(error.error);\n                }\n            );\n\n            this.anketaService.stanoviKojiNisuGlasali(this.pitanje.id)\n            .subscribe(\n                result => {\n                    this.stanoviKojiNisuGlasali = result;\n                },\n                error => {\n                    this.toastrService.error(error.error);\n                }\n            );\n        }\n    }\n\n    dozvola() {\n        return (this.pitanje.stanar.email === this.k_email || this.k_uloga === \"PREDSEDNIK_SKUPSTINE\") && this.zgrada === this.k_zgrada.toString() && this.pocetakSkupstine > this.datum; \n    }\n\n    izmeniPitanje() {\n        this.editable = !this.editable;\n    }\n\n    sacuvajPitanje(span) {\n\n        //ovde namestiti da bude pravi predlog tacke dnevnog reda\n        this.anketaService.izmeniPitanje(this.ptdrId, this.pitanje.id, span.innerHTML)\n        .subscribe(\n            result => {\n                this.izmenaPitanjaEvent.emit(result);\n                this.toastrService.success(\"Izmena pitanja uspesno\");\n            },\n            error => {\n                this.toastrService.error(error.error);\n            }\n        );\n    }\n\n    izbrisiPitanje(pitanjeId: number) {\n        \n        this.anketaService.izbrisiPitanje(this.ptdrId, pitanjeId)\n        .subscribe(\n            result => {\n                this.brisanjePitanjaEvent.emit(pitanjeId);\n                this.toastrService.success(\"Brisanje pitanja uspesno\");\n            },\n            error => {\n                this.toastrService.error(error.error);\n            }\n        );\n    }\n\n    dodajObicnuOpciju(pitanjeId: number) {\n\n        this.anketaService.dodajOpciju(pitanjeId, {\"type\": \"DTOObicnaOpcija\", \"tekst\": this.tekstObicneOpcije})\n        .subscribe(\n            result => {\n                this.dodavanjeOpcijeEvent.emit(result);\n                this.toastrService.success(\"Dodavanje opcije uspesno\");\n            },\n            error => {\n                this.toastrService.error(error.error);\n            }\n        );\n    }\n\n    dodajStanarOpciju(pitanjeId: number) {\n\n        this.anketaService.dodajOpciju(pitanjeId, {\"type\": \"DTOStanarOpcija\", \"tekst\": this.selektovanaStanarOpcija.naziv, \"email\": this.selektovanaStanarOpcija.email})\n        .subscribe(\n            result => {\n                this.dodavanjeOpcijeEvent.emit(result);\n                this.toastrService.success(\"Dodavanje opcije uspesno\");\n            },\n            error => {\n                this.toastrService.error(error.error);\n            }\n        );\n    }\n\n    dodajFirmaOpciju(pitanjeId: number) {\n\n        this.anketaService.dodajOpciju(pitanjeId, {\"type\": \"DTOFirmaOpcija\", \n            \"tekst\": this.selektovanaFirmaOpcija.naziv, \"firmaId\": this.selektovanaFirmaOpcija.id})\n        .subscribe(\n            result => {\n                this.dodavanjeOpcijeEvent.emit(result);\n                this.toastrService.success(\"Dodavanje opcije uspesno\");\n            },\n            error => {\n                this.toastrService.error(error.error);\n            }\n        );\n    }\n\n    izmeniOpciju(i) {\n        this.editableOption[i] = !this.editableOption[i];\n    }\n\n    sacuvajOpciju(i, opcija) {\n\n        console.log(this.pitanje.opcije);\n        let noviTekst: string = document.getElementById(\"span_\" + opcija.id + \"_2\").innerHTML;\n\n        let dtoOpcija;\n        if (this.pitanje.vrstaPitanja.toString() === \"OBICNO_PITANJE\") {\n            dtoOpcija = {\"type\": \"DTOObicnaOpcija\", \"tekst\": noviTekst};\n        } else if (this.pitanje.vrstaPitanja.toString() === \"STANAR_PITANJE\") {\n            dtoOpcija = {\"type\": \"DTOStanarOpcija\", \"tekst\": noviTekst, \"email\": opcija.email};\n        } else {\n            dtoOpcija = {\"type\": \"DTOFirmaOpcija\", \"tekst\": noviTekst, \"firmaId\": opcija.firmaId};\n        }\n\n        this.anketaService.izmeniOpciju(this.pitanje.id, opcija.id, dtoOpcija)\n        .subscribe(\n            result => {\n\t\t\t\tfor (let i = 0; i < this.pitanje.opcije.length; i++) {\n                    if (this.pitanje.opcije[i].id === opcija.id) {\n                        this.pitanje.opcije[i] = result;\n                        this.editableOption[i] = !this.editableOption[i];\n                    }\n                }\n                this.toastrService.success(\"Izmena opcije uspesna\");\n            },\n            error => {\n                this.toastrService.error(error.error);\n            }\n        );\n    }\n\n\n    izbrisiOpciju(pitanjeId: number, opcijaId: number) {\n\n        //srediti za pravu putanju\n        this.anketaService.izbrisiOpciju(pitanjeId, opcijaId)\n        .subscribe(\n            result => {\n                this.brisanjeOpcijeEvent.emit({\"pitanjeId\" : pitanjeId, \"opcijaId\" : opcijaId});\n                this.toastrService.success(\"Brisanje opcije uspesno\");\n            },\n            error => {\n                this.toastrService.error(error.error);\n            }\n        );\n    }\n\n    glasaj(pitanjeId: number) {\n\n        this.anketaService.glasaj(pitanjeId, {\"stanId\": this.stanZaGlasanje.id, \"opcijaId\": this.selektovanaOpcija.id})\n        .subscribe(\n            result => {\n\t\t\t\tfor (let i = 0; i < this.pitanje.opcije.length; i++) {\n                    if (this.pitanje.opcije[i].id === this.selektovanaOpcija.id) {\n                        this.pitanje.opcije[i].stanovi.push(result);\n                        break;\n                    }\n                }\n\n                for (let i = 0; i < this.stanoviKojiNisuGlasali.length; i++) {\n                    if (this.stanoviKojiNisuGlasali[i].id === this.stanZaGlasanje.id) {\n                        this.stanoviKojiSuGlasali.push(this.stanoviKojiNisuGlasali[i]);\n                        this.stanoviKojiNisuGlasali.splice(i, 1);\n                        this.stanZaGlasanje = undefined;\n                        break;\n                    }\n                }\n                this.toastrService.success(\"Glasanje uspesno\");\n            },\n            error => {\n                this.toastrService.error(error.error);\n            }\n        );\n    }\n\n    ukloniGlas(pitanjeId: number) {\n\n        let opcijaId: number;\n\n        for (let opcija of this.pitanje.opcije) {\n            for (let stan of opcija.stanovi) {\n                if (stan.id === this.stanZaUklanjanjeGlasa.id) {\n                    opcijaId = opcija.id;\n                }\n            }\n        }\n\n        this.anketaService.ukloniGlas(pitanjeId, {\"stanId\": this.stanZaUklanjanjeGlasa.id, \"opcijaId\": opcijaId})\n        .subscribe(\n            result => {\n\t\t\t\tfor (let i = 0; i < this.pitanje.opcije.length; i++) {\n                    for (let j = 0; j<this.pitanje.opcije[i].stanovi.length; j++) {\n                        if (this.pitanje.opcije[i].stanovi[j].id === this.stanZaUklanjanjeGlasa.id) {\n                            this.pitanje.opcije[i].stanovi.splice(j, 1);\n                        }\n                    }\n                }\n\n                for (let i = 0; i < this.stanoviKojiSuGlasali.length; i++) {\n                    if (this.stanoviKojiSuGlasali[i].id === this.stanZaUklanjanjeGlasa.id) {\n                        this.stanoviKojiNisuGlasali.push(this.stanoviKojiSuGlasali[i]);\n                        this.stanoviKojiSuGlasali.splice(i, 1);\n                        this.stanZaUklanjanjeGlasa = undefined;\n                        break;\n                    }\n                }\n                this.toastrService.success(\"Uspesno uklonjen glas\");\n            },\n            error => {\n                this.toastrService.error(error.error);\n            }\n        );\n    }\n\n}\n","module.exports = \"<div class=\\\"sadrzaj row justify-content-md-center\\\">\\n  <form class=\\\"col-md-6 box\\\" (ngSubmit)=\\\"dodajKvar()\\\">\\n    <fieldset>\\n      <div class=\\\"form-group row\\\">\\n        <label for=\\\"mesto\\\" class=\\\"control-label col-md-3\\\"><b>Lokacija kvara</b></label>\\n        <div class=\\\"col-md-9\\\">\\n          <textarea rows=\\\"4\\\" type=\\\"text\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"validnoMesto === false\\\" id=\\\"mesto\\\" name=\\\"mesto\\\" \\n          placeholder=\\\"Mesto\\\" [(ngModel)]=\\\"kvar.lokacija\\\" (input)=\\\"proveriMesto()\\\" (blur)=\\\"proveriMesto()\\\" required></textarea>\\n          <div *ngIf=\\\"validnoMesto === false\\\" class=\\\"invalid-feedback\\\">Ovo polje ne sme biti prazno!</div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group row\\\">\\n        <label for=\\\"opis\\\" class=\\\"control-label col-md-3\\\"><b>Opis</b></label>\\n        <div class=\\\"col-md-9\\\">\\n          <textarea rows=\\\"4\\\" type=\\\"text\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"validnaOpis === false\\\" id=\\\"opis\\\" name=\\\"opis\\\"\\n          placeholder=\\\"Opis\\\" [(ngModel)]=\\\"kvar.opis\\\" (input)=\\\"proveriOpis()\\\" (blur)=\\\"proveriOpis()\\\" required></textarea>\\n          <div *ngIf=\\\"validnaOpis === false\\\" class=\\\"invalid-feedback\\\">Ovo polje ne sme biti prazno!</div>\\n        </div>\\n      </div>\\n    \\n      <div class=\\\"form-group row\\\">\\n        <label class=\\\"control-label col-md-3\\\"><b>Odgovorno Lice</b></label>\\n        <div class=\\\"col-md-9\\\">\\n          <button id=\\\"odgovorno_lice\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\" style=\\\"margin-right: 10px\\\" (click)=\\\"moguciOdgovorni()\\\">Izaberi</button>\\n          <span *ngIf=\\\"odgovornoLice !== undefined\\\" class=\\\"low-impact-text\\\">{{odgovornoLice.naziv}}</span>        \\n        </div>\\n      </div>\\n      \\n      <moguci-odgovorni-modal></moguci-odgovorni-modal>\\n\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-3\\\"></div>\\n        <div class=\\\"col-lg-9\\\">\\n          <button id=\\\"submit\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!validnaForma\\\">Dodaj</button>\\n        </div>\\n      </div>\\n    </fieldset>\\n  </form>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { KvarService } from '../../../services/kvar/kvar.service';\nimport { UtilService } from '../../../services/util/util.service';\nimport { Korisnik } from '../../../model/Korisnik';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport 'rxjs/add/operator/takeUntil';\nimport { Subject } from 'rxjs/Subject';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n    selector: 'app-dodaj-kvar',\n    templateUrl: './dodaj-kvar.component.html',\n    styleUrls: ['../../zgrada.component.scss']\n})\nexport class DodajKvarComponent implements OnInit {\n    kvar: any;\n    validnoMesto: boolean = undefined;\n    validanOpis: boolean = undefined;\n    validnaForma: boolean = false;\n    odgovornoLice: Korisnik;\n\n    private zgradaId : number;\n    private sub: any;\n\n    private ngUnsubscribe: Subject<void> = new Subject<void>();\n\n    \n\n    constructor(private router: Router, private route: ActivatedRoute, private toastrService: ToastrService,\n        private kvarService: KvarService, private utilService: UtilService) { }\n\n    ngOnInit() {\n        this.sub = this.route.parent.params.subscribe((params: Params) => {\n            this.zgradaId = Number(params['id']);\n        });\n\n        this.kvar = {\n            lokacija: \"\",\n            opis: \"\",\n            odgovornoLice: undefined\n        }\n\n        this.utilService.moguciOdgovorniModalSelection\n        .takeUntil(this.ngUnsubscribe)\n        .subscribe((korisnik: Korisnik) =>{\n                this.odgovornoLice = korisnik;    \n            }\n        )\n    }\n\n    proveriMesto() {\n        if (this.kvar.lokacija.trim() === \"\") {\n            this.validnoMesto = false;\n        } else {\n            this.validnoMesto = true;\n        }\n        this.proveriDugme();\n    }\n\n    proveriOpis() {\n        if (this.kvar.opis.trim() === \"\") {\n            this.validanOpis= false;\n        } else {\n            this.validanOpis = true;\n        }\n        this.proveriDugme();\n    }\n\n    proveriDugme() {\n        if (this.validnoMesto && this.validanOpis ) {\n            this.validnaForma = true;\n        } else {\n            this.validnaForma = false;\n        }\n    }\n\n    dodajKvar() {\n        if(this.odgovornoLice !== undefined)\n            this.kvar.odgovornoLiceId = this.odgovornoLice.id;\n        this.kvarService.dodajKvar(this.kvar).subscribe(\n            data => {\n                let kvar = data.body as any;\n                this.toastrService.success(\"Kvar uspesno dodat\");\n                this.router.navigate(['kvar/' + kvar.id], { relativeTo: this.route.parent });\n            },\n            error => {\n                this.toastrService.error(error.error);\n            }\n        )\n    }\n\n    moguciOdgovorni(){\n        this.utilService.moguciOdgovorniModal.emit(this.zgradaId);\n    }\n\n\n    ngOnDestroy() {\n        this.sub.unsubscribe();\n    }\n}\n","module.exports = \"<div class=\\\"sadrzaj row justify-content-md-center\\\">\\n    <form class=\\\"col-md-6 box\\\" (ngSubmit)=\\\"izmeniKvar()\\\">\\n      <fieldset>\\n        <div class=\\\"form-group row\\\">\\n          <label for=\\\"mesto\\\" class=\\\"control-label col-md-3\\\"><b>Lokacija kvara</b></label>\\n          <div class=\\\"col-md-9\\\">\\n            <textarea rows=\\\"4\\\" type=\\\"text\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"validnoMesto === false\\\" id=\\\"mesto\\\" name=\\\"mesto\\\" \\n            placeholder=\\\"Mesto\\\" [(ngModel)]=\\\"lokacijaKvara\\\" (input)=\\\"proveriMesto()\\\" (blur)=\\\"proveriMesto()\\\" required></textarea>\\n            <div *ngIf=\\\"validnoMesto === false\\\" class=\\\"invalid-feedback\\\">Ovo polje ne sme biti prazno!</div>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group row\\\">\\n          <label for=\\\"opis\\\" class=\\\"control-label col-md-3\\\"><b>Opis</b></label>\\n          <div class=\\\"col-md-9\\\">\\n            <textarea rows = \\\"4\\\" type=\\\"text\\\" class=\\\"form-control\\\" [class.is-invalid]=\\\"validnaOpis === false\\\" id=\\\"opis\\\" name=\\\"opis\\\"\\n            placeholder=\\\"Opis\\\" [(ngModel)]=\\\"opisKvara\\\" (input)=\\\"proveriOpis()\\\" (blur)=\\\"proveriOpis()\\\" required></textarea>\\n            <div *ngIf=\\\"validnaOpis === false\\\" class=\\\"invalid-feedback\\\">Ovo polje ne sme biti prazno!</div>\\n          </div>\\n        </div>\\n  \\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-lg-3\\\"></div>\\n          <div class=\\\"col-lg-9\\\">\\n            <button id=\\\"submit\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!validnaForma\\\">Izmeni</button>\\n            <button id=\\\"reset\\\" type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"reset()\\\">Resetuj</button>\\n          </div>\\n        </div>\\n      </fieldset>\\n    </form>\\n  </div>\"","import { Component, OnInit } from '@angular/core';\nimport { KvarService } from '../../../services/kvar/kvar.service';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { Kvar } from '../../../model/Kvar';\n\n@Component({\n  selector: 'app-izmena-kvara',\n  templateUrl: './izmena-kvara.component.html',\n  styleUrls: ['../../zgrada.component.scss']\n})\nexport class IzmenaKvaraComponent implements OnInit {\n  kvar: Kvar;\n  kvarId: number;\n  validnoMesto: boolean = undefined;\n  validanOpis: boolean = undefined;\n  validnaForma: boolean = false;\n  opisKvara: string = \"\";\n  lokacijaKvara: string = \"\";\n\n  constructor( private kvarService: KvarService, private toastrService: ToastrService,\n    private router: Router, private route: ActivatedRoute) { }\n\n\n  ngOnInit() {\n    this.kvarId = Number(this.route.snapshot.paramMap.get(\"kvarId\"));\n    this.kvarService.getKvar(this.kvarId)\n    .subscribe(\n      (res) => {\n        this.kvar = res.body as Kvar;\n        this.opisKvara = this.kvar.opis;\n        this.lokacijaKvara = this.kvar.lokacija;\n        this.proveriMesto();\n        this.proveriOpis();\n      },\n      (error) => {\n        this.toastrService.error(error.error);\n      }\n    )\n  }\n\n  proveriMesto() {\n    if (this.lokacijaKvara.trim() === \"\") {\n        this.validnoMesto = false;\n    } else {\n        this.validnoMesto = true;\n    }\n    this.proveriDugme();\n}\n\n  proveriOpis() {\n      if (this.opisKvara.trim() === \"\") {\n          this.validanOpis= false;\n      } else {\n          this.validanOpis = true;\n      }\n      this.proveriDugme();\n  }\n\n  proveriDugme() {\n      if (this.validnoMesto && this.validanOpis ) {\n          this.validnaForma = true;\n      } else {\n          this.validnaForma = false;\n      }\n  }\n\n\n  reset() {\n    this.lokacijaKvara = this.kvar.lokacija;\n    this.opisKvara = this.kvar.opis;\n    this.proveriMesto();\n    this.proveriOpis();\n}\n\n  izmeniKvar(){\n    this.kvar.lokacija = this.lokacijaKvara;\n    this.kvar.opis = this.opisKvara;\n    this.kvarService.izmenaKvara(this.kvar)\n        .subscribe(\n            result => {\n                this.toastrService.success(\"Kvar uspesno izmenjen\");\n                this.router.navigate(['kvar/' + this.kvar.id ], { relativeTo: this.route.parent });\n            },\n            error => {\n                this.toastrService.error(error.error);\n            }\n        )\n  }\n\n}\n","module.exports = \"<h3>Komentari</h3>\\n<div *ngIf=\\\"kvar.stanar.email === k_email || kvar.odgovornoLice.email === k_email\\\" class=\\\"container\\\">\\n    <form class=\\\"novoObavestenje box\\\" name=\\\"novoObavestenjeForm\\\" (ngSubmit)=\\\"novoObavestenje()\\\" novalidate>\\n        <fieldset>\\n            <div class=\\\"form-group\\\">\\n                <textarea type=\\\"text\\\" class=\\\"form-control\\\" rows=\\\"3\\\" id=\\\"tekstKomentara\\\" \\n                    (input)=\\\"proveriTekst()\\\" (blur)=\\\"proveriTekst()\\\" name=\\\"tekstKomentara\\\" \\n                    placeholder=\\\"Napisite svoj komentar..\\\"  [(ngModel)]=\\\"tekstKomentara\\\" required>\\n                </textarea>\\n            </div>\\n            <div class=\\\"form-group left\\\">\\n              <button id=\\\"button_komentar\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"dodajKomentar()\\\" [disabled]=\\\"!validanKomentar\\\">Potvrdi</button>\\n            </div>\\n        </fieldset>\\n    </form>\\n</div>\\n\\n<app-paginacija  (izmenaEvent)=\\\"izlistaj($event)\\\"></app-paginacija>\\n\\n<div class=\\\"komentar\\\" *ngFor=\\\"let komentar of komentari; let i = index\\\">\\n    <div class=\\\"row blob\\\">\\n        <table>\\n        <tr>\\n            <td>\\n                <b id=\\\"kom_{{komentar.id}}_autor\\\" class=\\\"naziv\\\">{{komentar.autor.naziv}} </b> \\n                <span class=\\\"lower-impact-text\\\"> je postavio/la komentar u <i>{{komentar.datum | date: \\\"HH:mm dd.MM.yyyy\\\"}}</i></span>\\n            </td> \\n        </tr>\\n        <tr>\\n            <td>\\n                <span id=\\\"kom_{{komentar.id}}_tekst\\\" class=\\\"line-breaker low-impact-text\\\" [hidden] = \\\"editable[i]\\\">{{komentar.tekst}}</span>\\n                <span id=\\\"kom_{{komentar.id}}_novi_tekst\\\" class=\\\"line-breaker low-impact-text\\\" style=\\\"color:blue\\\" contenteditable=\\\"true\\\" [hidden] = \\\"!editable[i]\\\" #ref>{{komentar.tekst}}</span>\\n            </td>\\n        </tr>\\n        <tr>\\n            <td>\\n                <span *ngIf=\\\"komentar.autor.email === k_email\\\">\\n                    <a class=\\\"kom_{{komentar.id}}_izmeni\\\" (click)=\\\"izmeni(i)\\\"><span [hidden] = \\\"editable[i]\\\" class=\\\"operacije lower-impact-text\\\">izmeni</span></a>\\n                    <a class=\\\"kom_{{komentar.id}}_brisi\\\" (click)=\\\"brisi(komentar)\\\"><span [hidden] = \\\"editable[i]\\\" class=\\\"operacije lower-impact-text\\\">brisi</span></a>\\n                    <a class=\\\"kom_{{komentar.id}}_potvrdi\\\" (click)=\\\"potvrdi(i,ref)\\\"[hidden] = \\\"!editable[i]\\\">\\n                            <span   style=\\\"color:green\\\" class=\\\"operacije lower-impact-text\\\">potvrdi</span> </a>\\n                        <a class=\\\"kom_{{komentar.id}}_odustani\\\" (click)=\\\"odustani(i,ref)\\\" [hidden] = \\\"!editable[i]\\\" >\\n                            <span  style = \\\"color:red\\\" class=\\\"operacije lower-impact-text\\\"> <font>odustani</font></span> </a>\\n                </span>\\n            </td>\\n        </tr>\\n        </table>\\n    </div>\\n</div>\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { AuthenticationService } from '../../../services/authentication/authentication.service';\nimport { UtilService } from '../../../services/util/util.service';\nimport { KvarService } from '../../../services/kvar/kvar.service';\nimport { Pager } from '../../../model/pager';\nimport { Komentar } from '../../../model/Komentar';\nimport { Kvar } from '../../../model/Kvar';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-komentari',\n  templateUrl: './komentari.component.html',\n  styleUrls: ['../../zgrada.component.scss']\n})\nexport class KomentariComponent  {\n\n  constructor( private utilService: UtilService, private kvarService : KvarService,\n  private toastrService: ToastrService) { }\n\n  zgradaId : number;\n  private sub: any;\n  komentari: Komentar[];\n  tekst: string;\n\n  k_email : string;\n  k_uloga : string;\n  k_zgrada : number;\n  editable = [];\n\n  tekstKomentara: string;\n  validanTekst: boolean = undefined;\n  validanKomentar: boolean = false;\n\n  @Input()\n  kvar: Kvar;\n\n  ngOnInit(){\n    this.k_email = this.utilService.email();\n    this.k_uloga = this.utilService.uloga();\n    this.k_zgrada = this.utilService.zgrada();\n  }\n  \n  dodajKomentar() {\n\t\tthis.kvarService.dodajKomentar(this.kvar.id, this.tekstKomentara)\n        .subscribe(\n            result => {\n              this.utilService.refreshPagination.emit(0);\n              this.tekstKomentara = '';\n              this.validanTekst = undefined;\n              this.validanKomentar = false;\n              this.toastrService.success(\"Komentar uspesno dodat\");\n            },\n            error => {\n              this.toastrService.error(error.error);\n            }\n        )\n  }\n  \n  proveriTekst(){\n    if (this.tekstKomentara.trim() === \"\") {\n      this.validanTekst = false;\n    } else {\n      this.validanTekst = true;\n    }\n      this.proveriDugme();\n    }\n\n  proveriDugme() {\n    if (this.validanTekst) {\n        this.validanKomentar = true;\n    } else {\n        this.validanKomentar = false;\n    }\n  }\n\n  izlistaj(pager: Pager){\n    this.kvarService.getKomentari(this.kvar.id, pager.trenutnaStrana-1, pager.velicinaStrane)\n    .subscribe(\n      (res) => {\n        this.komentari = res.body as Komentar[];\n        this.editable = [];\n\n        //for(let i = 0; i < this.komentari.length; i++){\n         // this.editable.push(false);\n        //}\n\n        this.utilService.updateUkupnoStrana.emit(Number(res.headers.get('X-ukupno-strana')));\n      },\n      error => {\n        this.toastrService.error(error.error);\n      }\n    )\n  }\n\n  dozvola(autor){\n    return (autor === this.k_email || this.k_uloga === \"PREDSEDNIK_SKUPSTINE\") && this.zgradaId === this.k_zgrada;\n  }\n\n  brisi(komentar) {\n    \n    this.kvarService.deleteKomentar(this.kvar.id, komentar.id).subscribe(\n      (result) => {\n        this.utilService.refreshPagination.emit(0);\n        this.toastrService.success('Komentar uspesno izbrisan');\n      },\n      error => {\n        this.toastrService.error(error.error);\n      }\n    )\n  }\n\n  izmeni(i){\n    this.editable[i] = !this.editable[i];\n  }\n\n  potvrdi(i,span){\n    this.tekst = span.innerHTML;\n    if (this.tekst.trim() === \"\"){\n      this.editable[i] = !this.editable[i];\n      span.innerHTML = this.komentari[i].tekst;\n    }\n    else{\n    this.kvarService.izmenaKomentara(this.kvar.id,this.komentari[i].id,span.innerHTML).subscribe(\n      (result) => {\n        this.utilService.refreshPagination.emit(0);\n        this.toastrService.success('Komentar uspesno izmenjen');\n      },\n      error => {\n        this.toastrService.error(error.error);\n      }\n    )\n    }\n  }\n\n\n  odustani(i,span){\n    if (span.innerHTML.trim() === \"\"){\n      this.editable[i] = !this.editable[i];\n      span.innerHTML = this.komentari[i].tekst;\n    }\n    else{\n      this.editable[i] = !this.editable[i];\n    }\n  }\n\n\n}\n","module.exports = \"<div class=\\\"sadrzaj\\\" *ngIf=\\\"kvar !== undefined\\\">\\n<div class=\\\"row\\\">\\n<table>\\n    <tr>\\n        <td>\\n            <b class=\\\"naziv\\\">{{kvar.stanar.naziv}} </b> \\n            <span class=\\\"lower-impact-text\\\"> je postavio/la kvar u <i>{{kvar.datumPostavljanja | date: \\\"HH:mm dd.MM.yyyy\\\"}}</i></span>\\n            \\n        </td> \\n    </tr>\\n    <tr>\\n        <td>\\n            <span class=\\\"super-high-impact-text\\\" *ngIf=\\\"kvar.gotovo\\\">KVAR JE ZAVSREN</span>\\n        </td>\\n    </tr>\\n    <tr>\\n        <td>\\n            <span id=\\\"lokacija\\\" class=\\\" line-breaker low-impact-text\\\">Lokacija - {{kvar.lokacija}}</span>\\n        </td>\\n    </tr>\\n    <tr>\\n        <td>\\n            <span id=\\\"opis\\\" class=\\\"line-breaker low-impact-text\\\">{{kvar.opis}}</span>\\n        </td>\\n    </tr>\\n    <tr>\\n        <td>\\n           <span id=\\\"odgovorno_lice\\\" class=\\\"low-impact-text\\\">Odgovorno Lice - {{kvar.odgovornoLice.naziv}} ({{kvar.odgovornoLice.email}})</span>\\n        </td>\\n    </tr>\\n    <tr>\\n        <td>\\n            <span class=\\\"low-impact-text\\\">Vreme popravke - {{kvar.vremePopravke | date: \\\"HH:mm dd.MM.yyyy\\\"}}\\n                <span *ngIf=\\\"kvar.vremePopravke === null\\\">Nije zakazano</span>\\n            </span>\\n        </td>\\n    </tr>\\n    <tr *ngIf=\\\"kvar.stanar.email === k_email && !kvar.gotovo\\\">\\n        <td>\\n            <span class=\\\"low-impact-text\\\"> Dodaj sliku - </span>\\n            <input type=\\\"file\\\" accept=\\\"image/x-png,image/jpeg\\\"  multiple (change)=\\\"onChange($event)\\\"  #fileInput placeholder=\\\"Dodaj sliku...\\\"/> \\n        </td>\\n    </tr>\\n    <tr>\\n        <span *ngIf=\\\"dozvola(kvar.stanar.email) && !kvar.gotovo\\\">\\n            <a class=\\\"izmeni\\\" [routerLink]=\\\"['../../kvar/' + kvar.id + '/izmena']\\\" ><span class=\\\"operacije lower-impact-text\\\">izmeni</span></a>\\n        </span>\\n        <span *ngIf=\\\"dozvola(kvar.stanar.email) && !kvar.gotovo\\\">\\n            <a class=\\\"brisi\\\" (click)=\\\"brisi()\\\"><span class=\\\"operacije lower-impact-text\\\">brisi</span></a>\\n        </span>\\n        <span *ngIf=\\\"kvar.odgovornoLice.email === k_email && !kvar.gotovo\\\">\\n            <a class=\\\"prosledi\\\" (click)=\\\"moguciOdgovorni()\\\"><span class=\\\"operacije lower-impact-text\\\">prosledi kvar</span></a>\\n        </span>\\n        <span *ngIf=\\\"kvar.odgovornoLice.email === k_email && !kvar.gotovo\\\">\\n            <a class=\\\"zakazi\\\" [routerLink]=\\\"['../../kvar/' + kvar.id + '/zakazivanje']\\\"><span class=\\\"operacije lower-impact-text\\\">zakazi vreme popravke</span></a>\\n        </span>\\n        <span *ngIf=\\\"kvar.stanar.email === k_email && !kvar.gotovo\\\">\\n            <a class=\\\"izmeni_odgovornog\\\" (click)=\\\"moguciOdgovorni()\\\"><span class=\\\"operacije lower-impact-text\\\">izmeni odgovorno lice</span></a>\\n        </span>\\n        <span *ngIf=\\\"kvar.stanar.email === k_email && !kvar.gotovo\\\">\\n            <a class=\\\"zavrsi\\\" (click)=\\\"zavrsiKvar()\\\"><span class=\\\"operacije lower-impact-text\\\">zavrsi kvar</span></a>\\n        </span>\\n        <span *ngIf=\\\"kvar.stanar.email === k_email && kvar.gotovo\\\">\\n            <a class=\\\"od_zavrsi\\\" (click)=\\\"zavrsiKvar()\\\"><span class=\\\"operacije lower-impact-text\\\">od-zavrsi kvar</span></a>\\n        </span>\\n    </tr>\\n    \\n</table>\\n</div>\\n<div class= \\\"row\\\">\\n    <div *ngFor=\\\"let slika of slike\\\" class=\\\"gallery\\\">\\n        \\n        <a *ngIf=\\\"slika !== undefined\\\" target=\\\"_blank\\\" href=\\\"data:image/png;base64,{{slika.sadrzaj}}\\\">\\n            <span class=\\\"crop\\\">\\n                <img id=\\\"slika.id\\\" src=\\\"data:image/png;base64,{{slika.sadrzaj}}\\\" />\\n            </span>\\n        </a>\\n        <div *ngIf=\\\"kvar.stanar.email === k_email && !kvar.gotovo\\\" class=\\\"desc\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"brisiSliku(slika.id)\\\">Obrisi</button>\\n        </div>\\n    </div>\\n</div>\\n<moguci-odgovorni-modal></moguci-odgovorni-modal>\\n<hr/>\\n<div>\\n    <app-komentari [kvar]=\\\"kvar\\\"></app-komentari>\\n</div>\\n</div>\"","module.exports = \"div.gallery {\\n  margin: 5px;\\n  border: 1px solid #ccc;\\n  float: left; }\\n\\ndiv.gallery:hover {\\n  border: 1px solid #777; }\\n\\ndiv.gallery img {\\n  height: 200px; }\\n\\ndiv.desc {\\n  padding: 15px;\\n  text-align: center; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvemdyYWRhL2t2YXJvdmkva3Zhci9DOlxcVXNlcnNcXExlbm92b1xcRGVza3RvcFxcS3Vyc2V2aVxcS1RTLU5XVC1hbmd1bGFyLW1hc3RlciAtIENvcHkvc3JjXFxhcHBcXHpncmFkYVxca3Zhcm92aVxca3Zhclxca3Zhci5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLFdBQVc7RUFDWCxzQkFBc0I7RUFDdEIsV0FBVyxFQUFBOztBQUdmO0VBQ0ksc0JBQXNCLEVBQUE7O0FBRzFCO0VBQ0ksYUFBWSxFQUFBOztBQUdoQjtFQUNJLGFBQWE7RUFDYixrQkFBa0IsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3pncmFkYS9rdmFyb3ZpL2t2YXIva3Zhci5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImRpdi5nYWxsZXJ5IHtcbiAgICBtYXJnaW46IDVweDtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xuICAgIGZsb2F0OiBsZWZ0O1xufVxuXG5kaXYuZ2FsbGVyeTpob3ZlciB7XG4gICAgYm9yZGVyOiAxcHggc29saWQgIzc3Nztcbn1cblxuZGl2LmdhbGxlcnkgaW1nIHtcbiAgICBoZWlnaHQ6MjAwcHg7XG59XG5cbmRpdi5kZXNjIHtcbiAgICBwYWRkaW5nOiAxNXB4O1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbn0iXX0= */\"","import { Component, OnInit, ViewChild} from '@angular/core';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport 'rxjs/add/operator/takeUntil';\nimport { Subject } from 'rxjs/Subject';\nimport { ToastrService } from 'ngx-toastr';\n\nimport { KvarService } from '../../../services/kvar/kvar.service';\nimport { UtilService } from '../../../services/util/util.service';\nimport { Korisnik } from '../../../model/Korisnik';\nimport { Kvar } from '../../../model/Kvar';\n\n@Component({\n    selector: 'app-kvar',\n    templateUrl: './kvar.component.html',\n    styleUrls: ['../../zgrada.component.scss', './kvar.component.scss']\n})\nexport class KvarComponent implements OnInit {\n    private ngUnsubscribe: Subject<void> = new Subject<void>();\n    private sub: any;\n\n    kvar: Kvar;\n    k_email: string;\n    k_uloga: string;\n    k_zgrada: number;\n\n    slike: any[] = [];\n\n    \n    @ViewChild('fileInput') fileInput;\n\n    constructor(private router: Router, private route: ActivatedRoute,\n        private kvarService: KvarService, private utilService: UtilService,\n        private toastrService: ToastrService\n    ) { }\n\n    ngOnInit(){\n        this.k_email = this.utilService.email();\n        this.k_uloga = this.utilService.uloga();\n        this.k_zgrada = this.utilService.zgrada();\n        \n        this.sub = this.route.params.subscribe((params: Params) => {\n          this.kvarService.getKvar(Number(params['kvarId']))\n          .subscribe(\n            (res) => {\n              this.kvar = res.body as Kvar;\n              for(let i = 0; i < this.kvar.slike.length; i++){\n                this.kvarService.getSliku(this.kvar.slike[i])\n                .subscribe(\n                    (res) => {\n                        this.slike[i] = (res.body as any);\n                    }\n                );\n              }\n            },\n            (error) => {\n                this.toastrService.error(error.error);\n                this.router.navigate(['kvarovi'], { relativeTo: this.route.parent });\n            }\n        )});\n\n        this.utilService.moguciOdgovorniModalSelection\n        .takeUntil(this.ngUnsubscribe)\n        .subscribe((korisnik: Korisnik) =>{\n                this.kvarService.proslediKvar(this.kvar.id, korisnik.id)\n                .subscribe(\n                    (res) => {\n                        this.kvar.odgovornoLice = korisnik;\n                        this.toastrService.success(\"Odgovorno lice uspesno izmenjeno\");\n                    },\n                    (error) =>{\n                        this.toastrService.error(error.error);\n                    }\n\n                )\n            }\n        )\n    }\n\n    brisiSliku(slikaId: number){\n        this.kvarService.deleteSliku(this.kvar.id, slikaId).subscribe(\n            res => {\n                for(let i = 0; i < this.slike.length; i++){\n                    if(this.slike[i].id === slikaId){\n                        this.slike.splice(i, 1);\n                        this.toastrService.success(\"Slika uspesno uklonjena\");\n                        break;\n                    }\n                }\n            },\n            (error) =>{\n                this.toastrService.error(error.error);\n            }\n        ); \n    }\n\n    onChange(event: any, input: any) {\n        let fileBrowser = this.fileInput.nativeElement;\n        let slika = fileBrowser.files[0];\n        if (slika) {\n            this.kvarService.dodajSliku(this.kvar.id, slika).subscribe(\n                res => {\n                    this.slike.push(res.body);\n                    this.toastrService.success(\"Slika uspesno dodata\");\n                },\n                (error) =>{\n                    this.toastrService.error(error.error);\n                }\n            );\n        }\n    }\n\n    dozvola(autor){\n        return (autor === this.k_email || this.k_uloga === \"PREDSEDNIK_SKUPSTINE\") && this.kvar.zgradaId === this.k_zgrada;\n    }\n\n    moguciOdgovorni(){\n        this.utilService.moguciOdgovorniModal.emit(this.kvar.zgradaId);\n    }\n    \n    zavrsiKvar(){\n        this.kvarService.zavrsiKvar(this.kvar.id)\n            .subscribe(\n                (res) => {\n                    this.kvar.gotovo = !this.kvar.gotovo;\n                    this.toastrService.success(\"Kvar uspesno zavrsen\");\n                },\n                (error) =>{\n                    this.toastrService.error(error.error);\n                }\n            )\n    }\n\n    brisi() {\n        this.kvarService.deleteKvar(this.kvar.id).subscribe(\n          (result) => {\n            this.toastrService.success(\"Uspesno izbrisan kvar\");\n            this.router.navigate(['kvarovi'], { relativeTo: this.route.parent });\n          },\n          (error) => {\n            this.toastrService.error(error.error);\n          }\n        )\n      }\n\n    ngOnDestroy() {\n        this.sub.unsubscribe();\n        this.ngUnsubscribe.next();\n        this.ngUnsubscribe.complete();\n    }\n}","module.exports = \"<app-paginacija (izmenaEvent)=\\\"izlistaj($event)\\\"></app-paginacija>\\n\\n<div class=\\\"row\\\">\\n    <a id=\\\"dodaj\\\" *ngIf=\\\"zgradaId === k_zgrada\\\" routerLink=\\\"../kvar/dodaj\\\">\\n        <button class=\\\"btn\\\" style=\\\"cursor: pointer;\\\"><b>Dodaj</b></button>\\n    </a>\\n\\n    <div class=\\\"checkbox\\\">\\n        <label style=\\\"padding: 10px; margin-left: 20px;\\\">\\n            <input type=\\\"checkbox\\\" [(ngModel)]=\\\"gotovo\\\" (change)=\\\"checked()\\\"> Prikazi zavrsene kvarove\\n        </label>\\n    </div>\\n</div>\\n<div *ngFor=\\\"let kvar of kvarovi\\\">\\n    <div class=\\\"row blob\\\" id=\\\"kvar_{{kvar.id}}\\\">\\n        <table>\\n        <tr>\\n            <td>\\n                <b class=\\\"naziv\\\">{{kvar.stanar.naziv}} </b> \\n                <span class=\\\"lower-impact-text\\\"> je postavio/la kvar u <i>{{kvar.datumPostavljanja | date: \\\"HH:mm dd.MM.yyyy\\\"}}</i></span>\\n            </td> \\n        </tr>\\n        <tr>\\n            <td>\\n                <span class=\\\"super-high-impact-text\\\" *ngIf=\\\"kvar.gotovo\\\">KVAR JE ZAVSREN</span>\\n            </td>\\n        </tr>\\n        <tr>\\n            <td>\\n                <span id = \\\"opisKvara\\\" class=\\\"line-breaker low-impact-text\\\">{{kvar.opis}}</span>\\n            </td>\\n        </tr>\\n        <tr>\\n            <td>\\n                \\n                <a class=\\\"pogledaj_{{kvar.id}}\\\" [routerLink]=\\\"['../kvar', kvar.id]\\\"><span class=\\\"operacije lower-impact-text\\\">pogledaj</span> </a>\\n                <span  *ngIf=\\\"dozvola(kvar.stanar.email) && !kvar.gotovo\\\">\\n                        <a class=\\\"izmeni_{{kvar.id}}\\\" [routerLink]=\\\"['../kvar/' + kvar.id + '/izmena']\\\" ><span class=\\\"operacije lower-impact-text\\\">izmeni</span></a>\\n                </span>\\n                <span *ngIf=\\\"dozvola(kvar.stanar.email) && !kvar.gotovo\\\">\\n                    <a class=\\\"brisi_{{kvar.id}}\\\" (click)=\\\"brisi(kvar)\\\"><span class=\\\"operacije lower-impact-text\\\">brisi</span></a>\\n                </span>\\n            </td>\\n        </tr>\\n        </table>\\n    </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { UtilService } from '../..//services/util/util.service';\nimport { KvarService } from '../../services/kvar/kvar.service';\nimport { Pager } from '../../model/pager';\nimport { ToastrService } from 'ngx-toastr';\nimport { Kvar } from '../../model/Kvar';\n\n@Component({\n  selector: 'app-kvarovi',\n  templateUrl: './kvarovi.component.html',\n  styleUrls: ['../zgrada.component.scss']\n})\nexport class KvaroviComponent  {\n\n  constructor(private route: ActivatedRoute, private utilService: UtilService, \n    private kvarService : KvarService, private toastrService: ToastrService) { }\n\n  zgradaId : number;\n  private sub: any;\n  kvarovi: Kvar[];\n\n  k_email : string;\n  k_uloga : string;\n  k_zgrada : number;\n\n  gotovo : boolean = false;\n\n  ngOnInit(){\n    this.k_email = this.utilService.email();\n    this.k_uloga = this.utilService.uloga();\n    this.k_zgrada = this.utilService.zgrada();\n    \n    this.sub = this.route.parent.params.subscribe((params: Params) => {\n      this.zgradaId = Number(params['id']);\n    });\n\n  }\n  \n\n  izlistaj(pager: Pager){\n    this.kvarService.getKvarovi(this.zgradaId, pager.trenutnaStrana-1, \n      pager.velicinaStrane, this.gotovo)\n    .subscribe(\n      (res) => {\n        this.kvarovi = res.body as Kvar[];\n        \n        this.utilService.updateUkupnoStrana.emit(Number(res.headers.get('X-ukupno-strana')));\n      },\n      (error) => {\n        this.toastrService.error(error.error);\n      }\n    )\n  }\n\n  dozvola(autor){\n    return (autor === this.k_email || this.k_uloga === \"PREDSEDNIK_SKUPSTINE\") && this.zgradaId === this.k_zgrada;\n  }\n\n  checked(){\n    this.utilService.refreshPagination.emit(0);\n  }\n\n  brisi(kvar) {\n    this.kvarService.deleteKvar(kvar.id).subscribe(\n      (result) => {\n        this.toastrService.success(\"Uspesno izbrisan kvar\");\n        this.utilService.refreshPagination.emit(0);\n      },\n      (error) => {\n        this.toastrService.error(error.error);\n      }\n    )\n  }\n\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n  }\n}\n","module.exports = \"<div class=\\\"backdrop\\\" [ngStyle]=\\\"{'display': display}\\\"></div>\\n<div class=\\\"modal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" [ngStyle]=\\\"{'display': display}\\\">\\n  <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n\\n        <h2 class=\\\"modal-title\\\">Izbor odgovornog lica</h2>\\n\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <label class=\\\"col-form-label\\\" >\\n            Pretraga:\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Pretraga\\\" [(ngModel)]=\\\"search\\\"\\n                (input)=\\\"izmena()\\\" >\\n        </label>\\n        <app-paginacija (izmenaEvent)=\\\"izlistaj($event)\\\"></app-paginacija>\\n\\n        <table class=\\\"table table-hover\\\">\\n            <thead>\\n              <tr class=\\\"table-primary\\\">\\n                <th class=\\\"col-md-2\\\">Naziv</th>\\n                <th class=\\\"col-md-2\\\">Email</th>\\n                <th class=\\\"col-md-2\\\">Uloga</th>\\n                <th class=\\\"col-md-2\\\"></th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n              <tr class=\\\"table-secondary\\\" *ngFor=\\\"let korisnik of korisnici\\\">\\n                <td class=\\\"col-md-2\\\">{{korisnik.naziv}}</td>\\n                <td class=\\\"col-md-2\\\">{{korisnik.email}}</td>\\n                <td class=\\\"col-md-2\\\">{{korisnik.uloga}}</td>\\n                <td class=\\\"col-md-2\\\"><button id=\\\"button_{{korisnik.id}}\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"onPrihvati(korisnik)\\\">Prihvati</button></td>\\n              </tr>\\n            </tbody>\\n          </table>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"onOdustani()\\\">Odustani</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import {Component, OnDestroy, OnInit} from \"@angular/core\";\nimport { KvarService } from '../../../services/kvar/kvar.service';\nimport {UtilService} from \"../../../services/util/util.service\";\nimport { Subject } from 'rxjs/Subject';\nimport { Korisnik } from '../../../model/Korisnik';\nimport { Pager } from '../../../model/pager';\nimport 'rxjs/add/operator/takeUntil';\n\n@Component({\n  selector:'moguci-odgovorni-modal',\n  templateUrl: './moguci-odgovorni.modal.html',\n  styles: [`\n        .backdrop {\n            background-color: rgba(0,0,0,0.6);\n            position: fixed;\n            top: 0;\n            left: 0;\n            width: 120%;\n            height: 100vh;\n        }\n        h2 {\n          margin-left: 2.19%;\n        }\n        .modal-dialog{\n            max-width: 80%;\n            left: 0;\n            top: 0;\n            height: 500px;\n        }\n        .modal-body{\n            max-height: calc(100vh - 210px);\n            overflow-y: auto;\n        }\n    `]\n})\nexport class MoguciOdgovorniModal implements OnDestroy, OnInit {\n\n  display = 'none';\n  private ngUnsubscribe: Subject<void> = new Subject<void>();\n\n  zgradaId: Number;\n  korisnici: Korisnik[];\n  search = '';\n\n\n  constructor(private kvarService: KvarService, private utilService: UtilService){}\n\n  onPrihvati(korisnik: Korisnik) {\n    this.utilService.moguciOdgovorniModalSelection.emit(korisnik);\n    this.display = 'none';\n  }\n\n  onOdustani() {\n    this.display = 'none';\n  }\n\n  ngOnInit(){\n    this.utilService.moguciOdgovorniModal\n      .takeUntil(this.ngUnsubscribe)\n      .subscribe(\n      (zgradaId: Number) => {\n        this.display = 'block';\n        this.zgradaId = zgradaId;\n\n        this.utilService.refreshPagination.emit(0);\n\n      });\n  } \n\n  izlistaj(pager: Pager){\n    if(this.zgradaId !== undefined){\n        this.kvarService.getMoguciOdgovorni(this.zgradaId, pager.trenutnaStrana-1, pager.velicinaStrane, this.search)\n        .subscribe(\n        (res) => {\n            this.korisnici = res.body as Korisnik[];\n            this.utilService.updateUkupnoStrana.emit(Number(res.headers.get('X-ukupno-strana')));\n          },\n          error => {\n              console.log(error.error);\n          }\n        )\n    }\n  }\n\n  izmena() {\n    this.utilService.refreshPagination.emit(0);\n  }\n\n\n  ngOnDestroy() {\n    this.ngUnsubscribe.next();\n    this.ngUnsubscribe.complete();\n  }\n}\n","module.exports = \"<!-- Komponenta za navigation bar -->\\n\\n<div class=\\\"sadrzaj container\\\">\\n  <form class=\\\"zakaziPopravku box\\\" name= \\\"zakaziPopravku\\\" (ngSubmit)=\\\"zakaziPopravku()\\\" novalidate>\\n    <fieldset>\\n      <legend>Zakazivanje popravke kvara</legend>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"tekst\\\" class=\\\"control-label\\\">Odaberite datum i vreme popravke:</label>\\n        <input id=\\\"field_createdDate\\\" type=\\\"datetime-local\\\" class=\\\"form-control\\\" name=\\\"vremePopravka\\\" \\n        (input)=\\\"proveriVreme()\\\" (blur)=\\\"proveriVreme()\\\" [(ngModel)]=\\\"vremePopravka\\\"/>\\n      </div>\\n      <div class=\\\"form-group center\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"zakaziPopravku()\\\" [disabled]=\\\"!validnoVrijeme\\\" >Potvrdi</button>\\n      </div>\\n    </fieldset>\\n  </form>\\n</div>\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router,ActivatedRoute } from '@angular/router';\nimport { KvarService } from '../../../services/kvar/kvar.service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-zakazi-popravku',\n  templateUrl: './zakazi-popravku.component.html',\n  styleUrls: ['../../zgrada.component.scss']\n})\nexport class ZakaziPopravkuComponent implements OnInit {\n  vremePopravka: Date;\n  validnoVrijeme: boolean = false;\n  kvarId: number;\n  datum: Date;\n  vremePopravkaString: string;\n\n  constructor(private router: Router, private toastrService: ToastrService,\n    private kvarService: KvarService, private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.kvarId = Number(this.route.snapshot.paramMap.get(\"kvarId\"));\n  }\n\n  proveriVreme(){\n    if (this.vremePopravka != undefined && new Date(this.vremePopravka).getTime() >= new Date().getTime()) {\n      this.validnoVrijeme = true;\n    } else {\n      this.validnoVrijeme = false;\n    }\n  }\n\n\n  zakaziPopravku(){\n    this.vremePopravka = new Date(this.vremePopravka);\n    this.vremePopravkaString = this.vremePopravka.toJSON();\n    this.kvarService.zakaziPopravku(this.kvarId, this.vremePopravkaString.substring(0,16))\n    .subscribe(\n        result => {\n          this.toastrService.success(\"Uspesno zakazano vreme popravke\");\n          this.router.navigate(['kvar/' + this.kvarId], { relativeTo: this.route.parent });\n        },\n        error => {\n          this.toastrService.error(error.error);\n        }\n    )\n  }\n\n}\n","module.exports = \"<ul class=\\\"nav nav-tabs\\\">\\n  <li class=\\\"nav-item\\\" *ngIf=\\\"uloga === 'ADMIN'\\\">\\n    <a class=\\\"nav-link\\\" [class.active]=\\\"tab === 'stanovi'\\\" [routerLink]=\\\"['stanovi']\\\"\\n    (click)=\\\"promeniTab('stanovi')\\\">Stanovi</a>\\n  </li>\\n  <li class=\\\"nav-item\\\">\\n    <a class=\\\"nav-link\\\" [class.active]=\\\"tab === 'obavestenja'\\\" [routerLink]=\\\"['obavestenja']\\\"\\n    (click)=\\\"promeniTab('obavestenja')\\\">Obavestenja</a>\\n  </li>\\n  <li class=\\\"nav-item\\\">\\n    <a class=\\\"nav-link\\\" [class.active]=\\\"tab === 'tacke'\\\" [routerLink]=\\\"['tacke']\\\"\\n    (click)=\\\"promeniTab('tacke')\\\">Predlozi tacke dnevnog reda</a>\\n  </li>\\n  <li class=\\\"nav-item\\\">\\n    <a class=\\\"nav-link\\\" [class.active]=\\\"tab === 'sastanci'\\\" [routerLink]=\\\"['sastanci']\\\"\\n    (click)=\\\"promeniTab('sastanci')\\\">Sastanci skupstine</a>\\n  </li>\\n  <li class=\\\"nav-item\\\">\\n    <a class=\\\"nav-link\\\" [class.active]=\\\"tab === 'kvarovi'\\\" [routerLink]=\\\"['kvarovi']\\\"\\n    (click)=\\\"promeniTab('kvarovi')\\\">Kvarovi</a>\\n  </li>\\n</ul>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { UtilService } from '../../services/util/util.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Input } from '@angular/core';\n\n@Component({\n    selector: 'app-navbar-zgrada',\n    templateUrl: './navbar-zgrada.component.html'\n})\nexport class NavbarZgradaComponent implements OnInit {\n    @Input()\n    id: number;\n    tab: string;\n    uloga: string;\n\n    constructor(\n        private utilService: UtilService,\n        private route: ActivatedRoute,\n        private router: Router\n    ) { }\n\n    ngOnInit() {    \n        this.uloga = this.utilService.uloga();\n        if (this.uloga === \"ADMIN\"){\n            this.tab = \"stanovi\"\n            this.router.navigate(['zgrada/' + this.id + '/stanovi']);\n        } else {\n            //this.tab = \"obavestenja\"\n            //this.router.navigate(['zgrada/' + this.id + '/obavestenja'])\n        }\n    }\n\n    promeniTab(tab: string) {\n        this.tab = tab;\n    }\n}\n","module.exports = \"<!-- Komponenta za navigation bar -->\\n\\n<div class=\\\"sadrzaj container\\\">\\n  <form class=\\\"novoObavestenje box\\\" name=\\\"novoObavestenjeForm\\\" (ngSubmit)=\\\"novoObavestenje()\\\" novalidate>\\n    <fieldset>\\n      <legend>Novo obavestenje</legend>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"tekst\\\" class=\\\"control-label\\\">Unesite tekst obavestenja:</label>\\n        <textarea type=\\\"text\\\" class=\\\"form-control tekstObavestenja\\\" rows=\\\"10\\\" id=\\\"tekstObavestenja\\\" \\n        (input)=\\\"proveriTekst()\\\" (blur)=\\\"proveriTekst()\\\" name=\\\"tekstObavestenja\\\" placeholder=\\\"Tekst\\\" [(ngModel)]=\\\"tekstObavestenja\\\" required>\\n        </textarea>\\n      </div>\\n      <div class=\\\"form-group center\\\">\\n        <button id='dodajObavestenje' type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"novoObavestenje()\\\" [disabled]=\\\"!validnoObavestenje\\\">Potvrdi</button>\\n      </div>\\n    </fieldset>\\n  </form>\\n</div>\\n\\n\"","import { Component, OnInit, EventEmitter } from '@angular/core';\nimport { Input, Output } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ZgradaService } from '../../../services/zgrada/zgrada.service';\nimport { UtilService } from '../../../services/util/util.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { Korisnik } from '../../../model/Korisnik';\nimport { Zgrada} from '../../../model/zgrada'\n\n@Component({\n  selector: 'app-dodaj-obavestenje',\n  templateUrl: './dodaj-obavestenje.component.html',\n  styleUrls: ['../../zgrada.component.scss']\n})\nexport class DodajObavestenjeComponent implements OnInit {\n  tekstObavestenja: string;\n  validanTekst: boolean = undefined;\n  validnoObavestenje: boolean = false;\n  constructor(private router: Router, private utilService: UtilService,\n    private zgradaService: ZgradaService, private toastrService: ToastrService) { }\n\n  ngOnInit() {\n  }\n\n\n  novoObavestenje() {\n\t\tthis.zgradaService.novoObavestenje(this.tekstObavestenja)\n        .subscribe(\n            result => {\n                this.toastrService.success(\"Obavestenje uspesno dodato!\");\n\t\t\t\tthis.utilService.refreshPagination.emit(0);\n            },\n            error => {\n                this.toastrService.error(error.error);\n            }\n        )\n  }\n  \n  proveriTekst(){\n    if (this.tekstObavestenja.trim() === \"\") {\n      this.validanTekst = false;\n    } else {\n      this.validanTekst = true;\n    }\n    this.proveriDugme();\n  }\n\n\n  proveriDugme() {\n    if (this.validanTekst) {\n        this.validnoObavestenje = true;\n    } else {\n        this.validnoObavestenje = false;\n    }\n  }\n\n\n\n  @Input()\n\tkorisnici : Korisnik[];\n\n  @Input()\n  datum;\n  \n  @Input()\n\tzgrada: Zgrada;\n\t\n\n}\n\n","module.exports = \"<app-paginacija (izmenaEvent)=\\\"izlistaj($event)\\\"></app-paginacija>\\n<a *ngIf=\\\"zgradaId === k_zgrada\\\" routerLink=\\\"../obavestenje/dodaj\\\">\\n    <button class=\\\"btn\\\" id = \\\"dodajObavestenje\\\" style=\\\"cursor: pointer;\\\"><b>Dodaj</b></button>\\n</a>\\n<div *ngFor=\\\"let ob of obavestenja; let i = index\\\">\\n    <div class=\\\"row blob\\\">\\n        <table>\\n        <tr>\\n            <td>\\n                <b class=\\\"naziv\\\">{{ob.stanar.naziv}} </b> \\n                <span class=\\\"lower-impact-text\\\"> je postavio/la obavestenje u <i>{{ob.datum | date: \\\"HH:mm dd.MM.yyyy\\\"}}</i></span>\\n            </td> \\n        </tr>\\n        <tr>\\n            <td>\\n                <span class=\\\"line-breaker\\\" id = \\\"stariTekst\\\" [hidden] = \\\"editable[i]\\\" #ref>{{ob.tekst}}</span>\\n                <span class=\\\"line-breaker\\\" contenteditable=\\\"true\\\" [hidden] = \\\"!editable[i]\\\" \\n                id = \\\"noviTekst\\\" style=\\\"color:blue\\\" name = \\\"noviTekst\\\" #ref1>{{ob.tekst}}</span>\\n            </td>\\n        </tr>\\n        <tr>\\n            <td>\\n                <span *ngIf=\\\"dozvola(ob.stanar.email)\\\">\\n                    <a (click)=\\\"izmeni(i)\\\"  [hidden] = \\\"editable[i]\\\"><span id = \\\"izmeniObavestenje\\\" class=\\\"operacije lower-impact-text\\\">izmeni</span> </a>\\n                    <a (click)=\\\"potvrdi(i,ref1)\\\"[hidden] = \\\"!editable[i]\\\">\\n                        <span   style=\\\"color:green\\\" id = \\\"potvrdiObavestenje\\\" class=\\\"operacije lower-impact-text\\\">potvrdi</span> </a>\\n                    <a (click)=\\\"odustani(i,ref1)\\\" [hidden] = \\\"!editable[i]\\\" >\\n                        <span  style = \\\"color:red\\\" id = \\\"odbaciPromenu\\\" class=\\\"operacije lower-impact-text\\\"> <font>odustani</font></span> </a>\\n                    <a (click)=\\\"brisi(ob.id)\\\"><span id = \\\"brisiObavestenje\\\" class=\\\"operacije lower-impact-text\\\">brisi</span></a>\\n                </span>\\n            </td>\\n        </tr>\\n        </table>\\n    </div>\\n    \\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { AuthenticationService } from '../..//services/authentication/authentication.service';\nimport { UtilService } from '../..//services/util/util.service';\nimport { ZgradaService } from '../..//services/zgrada/zgrada.service';\nimport { Pager } from '../../model/pager';\nimport { Korisnik } from '../../model/Korisnik';\nimport { AngularWaitBarrier } from 'blocking-proxy/built/lib/angular_wait_barrier';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-obavestenja',\n  templateUrl: './obavestenja.component.html',\n  styleUrls: ['../zgrada.component.scss']\n})\nexport class ObavestenjaComponent  {\n\n  constructor(private router: Router, private route: ActivatedRoute, private utilService: UtilService,\n     private authenticateService: AuthenticationService, private zgradaService : ZgradaService,\n      private toastrService: ToastrService) { }\n\n  zgradaId : number;\n  sub: any;\n  obavestenja;\n  tekst: string;\n\n  k_email : string;\n  k_uloga : string;\n  k_zgrada : number;\n\n  editable = [];\n  \n  ngOnInit(){\n    this.k_email = this.utilService.email();\n    this.k_uloga = this.utilService.uloga();\n    this.k_zgrada = this.utilService.zgrada();\n\n    this.sub = this.route.parent.params.subscribe((params: Params) => {\n      this.zgradaId = Number(params['id']);\n    });\n    \n  }\n  \n  izlistaj(pager: Pager){\n    this.zgradaService.getObavestenja(this.zgradaId, pager.trenutnaStrana-1, pager.velicinaStrane)\n    .subscribe(\n      (res) => {\n        this.obavestenja = res.body as any[];\n        this.editable = [];\n        this.utilService.updateUkupnoStrana.emit(Number(res.headers.get(\"X-ukupno-strana\")));\n      },\n      (error) => {\n        this.toastrService.error(error.error);\n      }\n    )\n  }\n\n  dozvola(autor){\n    return (autor === this.k_email || this.k_uloga === \"PREDSEDNIK_SKUPSTINE\") && this.zgradaId === this.k_zgrada;\n  }\n\n  izmeni(i) {\n    this.editable[i] = !this.editable[i];\n  }\n\n  odustani(i,span){\n    if (span.innerHTML.trim() === \"\"){\n      this.editable[i] = !this.editable[i];\n      span.innerHTML = this.obavestenja[i].tekst;\n    }\n    else{\n      this.editable[i] = !this.editable[i];\n    }\n  }\n\n  potvrdi(i,span){\n    this.tekst = span.innerHTML;\n    if (this.tekst.trim() === \"\"){\n      this.editable[i] = !this.editable[i];\n      span.innerHTML = this.obavestenja[i].tekst;\n    }\n    else{\n      this.zgradaService.izmenaObavestenja(this.obavestenja[i].id,this.tekst).subscribe(\n        (result) => {\n          this.toastrService.success(\"Uspesno izmenjeno obavestenje\");\n          this.utilService.refreshPagination.emit(0);\n        },\n        (error) => {\n          this.toastrService.error(error.error);\n        }\n      )\n    } \n  }\n\n  brisi(id) {\n    this.zgradaService.deleteObavestenje(id).subscribe(\n      (result) => {\n        this.toastrService.success(\"Uspesno izbrisano obavestenje\");\n        this.utilService.refreshPagination.emit(0);\n      },\n      (error) => {\n        this.toastrService.error(error.error);\n      }\n    )\n  }\n\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n  }\n}\n","module.exports = \"<!-- Komponenta za navigation bar -->\\n\\n<div class=\\\"sadrzaj container\\\">\\n  <form class=\\\"noviPtdr box\\\" name= \\\"noviPtdr\\\" (ngSubmit)=\\\"noviPtdr()\\\" novalidate>\\n    <fieldset>\\n      <legend>Zakazivanje skupstine</legend>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"tekst\\\" class=\\\"control-label\\\">Odaberite datum pocetka skupstine:</label>\\n        <input id=\\\"field_createdDate\\\" type=\\\"datetime-local\\\" class=\\\"form-control\\\" name=\\\"pocetakSkupstine\\\" \\n        (input)=\\\"proveriPocetak()\\\" (blur)=\\\"proveriPocetak()\\\" [(ngModel)]=\\\"pocetakSkupstine\\\"/>\\n        <label for=\\\"tekst\\\" class=\\\"control-label\\\">Odaberite datum zavrsetka skupstine:</label>\\n        <input id=\\\"field_createdDate\\\" type=\\\"datetime-local\\\" class=\\\"form-control\\\" name=\\\"zavrsetakSkupstine\\\" \\n        (input)=\\\"proveriKraj()\\\" (blur)=\\\"proveriKraj()\\\"[(ngModel)]=\\\"zavrsetakSkupstine\\\"/>\\n      </div>\\n      <div class=\\\"form-group center\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"noviSastanak()\\\" [disabled]=\\\"!validnoVrijeme\\\" >Potvrdi</button>\\n      </div>\\n    </fieldset>\\n  </form>\\n</div>\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ZgradaService } from '../../../services/zgrada/zgrada.service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-dodaj-sastanak',\n  templateUrl: './dodaj-sastanak.component.html',\n  styleUrls: ['../../zgrada.component.scss']\n})\nexport class DodajSastanakComponent {\n  pocetakSkupstine: Date;\n  zavrsetakSkupstine: Date;\n  pocetakSkupstineString: string;\n  zavrsetakSkupstineString: string;\n  validanPocetak: boolean = undefined;\n  validanKraj: boolean = undefined;\n  validnoVrijeme: boolean = false;\n\n  constructor(private router: Router, private toastrService: ToastrService,\n    private zgradaService: ZgradaService) { }\n\n  ngOnInit() {\n    \n  }\n\n  noviSastanak() {\n    this.pocetakSkupstine = new Date(this.pocetakSkupstine);\n    this.pocetakSkupstineString = this.pocetakSkupstine.toJSON();\n    this.zavrsetakSkupstine = new Date(this.zavrsetakSkupstine);\n    this.zavrsetakSkupstineString = this.zavrsetakSkupstine.toJSON();\n\t\tthis.zgradaService.noviSastanak(this.pocetakSkupstineString.substring(0,16), this.zavrsetakSkupstineString.substring(0,16))\n        .subscribe(\n            result => {\n\t\t\t\tthis.toastrService.success(\"Sastanak uspesno zakazan\");\n            },\n            error => {\n                this.toastrService.error(error.error);\n            }\n        )\n  }\n\n  proveriPocetak(){\n    if (this.pocetakSkupstine != undefined && new Date(this.pocetakSkupstine).getTime() >= new Date().getTime()) {\n      this.validanPocetak = true;\n    } else {\n      this.validanPocetak = false;\n    }\n    this.proveriDugme();\n  }\n\n\n  proveriKraj(){\n    if (this.zavrsetakSkupstine != undefined && new Date(this.zavrsetakSkupstine).getTime() >= new Date().getTime()) {\n      this.validanKraj = true;\n    } else {\n      this.validanKraj = false;\n    }\n    this.proveriDugme();\n  }\n\n  proveriDugme() {\n    if (this.validanPocetak && this.validanKraj) {\n        if (new Date(this.zavrsetakSkupstine).getTime() <= new Date(this.pocetakSkupstine).getTime()){\n          this.validnoVrijeme = false\n        }\n        else{\n          this.validnoVrijeme = true;\n        }\n    } else {\n        this.validnoVrijeme = false;\n    }\n}\n\n\n}\n","module.exports = \"<!-- Komponenta za navigation bar -->\\n\\n<div class=\\\"sadrzaj container\\\">\\n  <form class=\\\"noviPtdr box\\\" name= \\\"noviPtdr\\\" (ngSubmit)=\\\"noviPtdr()\\\" novalidate>\\n    <fieldset>\\n      <legend>Izmena termina skupstine</legend>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"tekst\\\" class=\\\"control-label\\\">Izmenite datum pocetka skupstine:</label>\\n        <input id=\\\"field_createdDate\\\" type=\\\"datetime-local\\\" class=\\\"form-control\\\" name=\\\"pocetakSkupstine\\\" \\n        (input)=\\\"proveriPocetak()\\\" (blur)=\\\"proveriPocetak()\\\" [(ngModel)]=\\\"pocetakSkupstineString\\\"/>\\n        <label for=\\\"tekst\\\" class=\\\"control-label\\\">Izmenite datum zavrsetka skupstine:</label>\\n        <input id=\\\"field_createdDate\\\" type=\\\"datetime-local\\\" class=\\\"form-control\\\" name=\\\"zavrsetakSkupstine\\\" \\n        (input)=\\\"proveriKraj()\\\" (blur)=\\\"proveriKraj()\\\"[(ngModel)]=\\\"zavrsetakSkupstineString\\\"/>\\n      </div>\\n      <div class=\\\"form-group center\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"izmenaSastanka()\\\" [disabled]=\\\"!validnoVrijeme\\\" >Potvrdi</button>\\n      </div>\\n    </fieldset>\\n  </form>\\n</div>\\n\\n\\n\"","import { Component, OnInit } from '@angular/core'\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { AuthenticationService } from '../../../services/authentication/authentication.service';\nimport { ZgradaService } from '../../../services/zgrada/zgrada.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { error } from 'selenium-webdriver';\n\n@Component({\n  selector: 'app-izmena-sastanka',\n  templateUrl: './izmena-sastanka.component.html',\n  styleUrls: ['../../zgrada.component.scss']\n})\nexport class IzmenaSastankaComponent implements OnInit {\n  skupstinaId: number;\n  sastanak;\n  pocetakSkupstine: Date;\n  pocetakSkupstineString: string;\n  zavrsetakSkupstine: any;\n  zavrsetakSkupstineString: string;\n  validanPocetak: boolean = undefined;\n  validanKraj: boolean = undefined;\n  validnoVrijeme: boolean = false;\n\n  constructor(private router: Router, private route: ActivatedRoute, private zgradaService : ZgradaService,\n      private toastrService: ToastrService) { }\n\n  ngOnInit() {\n    this.skupstinaId = Number(this.route.snapshot.paramMap.get(\"idSastanka\"));\n    this.zgradaService.getSastanak(this.skupstinaId)\n    .subscribe(\n      (res) => {\n        this.sastanak = res;\n        this.pocetakSkupstine = new Date(this.sastanak.pocetakSkupstine);\n        this.pocetakSkupstine.setMinutes(this.pocetakSkupstine.getMinutes() - this.pocetakSkupstine.getTimezoneOffset());\n        this.pocetakSkupstineString = this.pocetakSkupstine.toJSON().slice(0,-1);\n        this.zavrsetakSkupstine = new Date(this.sastanak.krajSkupstine);\n        this.zavrsetakSkupstine.setMinutes(this.zavrsetakSkupstine.getMinutes() - this.zavrsetakSkupstine.getTimezoneOffset());\n        this.zavrsetakSkupstineString = this.zavrsetakSkupstine.toJSON().slice(0,-1); \n        this.proveriPocetak();\n        this.proveriKraj();\n      },\n      (error) => {\n        this.toastrService.error(error.error);\n      }\n    )\n  }\n\n\n  izmenaSastanka() {\n    this.pocetakSkupstine = new Date(this.pocetakSkupstine);\n    this.pocetakSkupstineString = this.pocetakSkupstine.toJSON();\n    this.zavrsetakSkupstine = new Date(this.zavrsetakSkupstine);\n    this.zavrsetakSkupstineString = this.zavrsetakSkupstine.toJSON();\n\t\tthis.zgradaService.izmenaSastanka(this.skupstinaId,this.pocetakSkupstineString.substring(0,16),this.zavrsetakSkupstineString.substring(0,16))\n        .subscribe(\n            result => {\n              this.toastrService.success(\"Sastanak uspesno izmenjen!\");\n            },\n            error => {\n              this.toastrService.error(error.error);\n            }\n        )\n  }\n\n\n  proveriPocetak(){\n    this.pocetakSkupstine = new Date (this.pocetakSkupstineString);\n    if (this.pocetakSkupstine != undefined && new Date(this.pocetakSkupstine).getTime() >= new Date().getTime()) {\n      this.validanPocetak = true;\n  } else {\n      this.validanPocetak = false;\n  }\n  this.proveriDugme();\n  }\n\n\n  proveriKraj(){\n    this.zavrsetakSkupstine = new Date (this.zavrsetakSkupstineString);\n    if (this.zavrsetakSkupstine != undefined && new Date(this.zavrsetakSkupstine).getTime() >= new Date().getTime()) {\n      this.validanKraj = true;\n    } else {\n      this.validanKraj = false;\n    }\n    this.proveriDugme();\n  }\n\n  proveriDugme() {\n    if (this.validanPocetak && this.validanKraj) {\n        if (new Date(this.zavrsetakSkupstine).getTime() <= new Date(this.pocetakSkupstine).getTime()){\n          this.validnoVrijeme = false\n        }\n        else{\n          this.validnoVrijeme = true;\n        }\n    } else {\n        this.validnoVrijeme = false;\n    }\n  }\n}\n","module.exports = \"<app-paginacija (izmenaEvent)=\\\"izlistaj($event)\\\"></app-paginacija>\\n<a *ngIf=\\\"dozvolaDodavanja()\\\" routerLink=\\\"../sastanak/zakazi\\\">\\n    <button class=\\\"btn\\\" style=\\\"cursor: pointer;\\\"><b>Dodaj</b></button>\\n</a>\\n\\n<select class=\\\"custom-select\\\" (change)=onChange() [(ngModel)]=\\\"kriterijum\\\" style=\\\"margin-left:150px; width:200px;\\\">\\n        <option [ngValue]=\\\"0\\\" >Svi</option>\\n        <option [ngValue]=\\\"3\\\" >Sastanci u toku</option>\\n        <option [ngValue]=\\\"1\\\" >Buduci Sastanci</option>\\n        <option [ngValue]=\\\"2\\\" >Prosli Sastanci</option>\\n</select>\\n\\n<div *ngFor=\\\"let sastanak of sastanci\\\">\\n    <div class=\\\"row blob\\\">\\n        <table>\\n        <tr>\\n            <td>\\n                <b class=\\\"naziv\\\">{{sastanak.predsednikSkupstine.naziv}} </b> \\n                <span class=\\\"lower-impact-text\\\"> je zakazao/la sastanak</span>\\n            </td> \\n        </tr>\\n        <tr>\\n            <td>\\n                <span class=\\\"green-impact-text\\\" \\n                *ngIf=\\\"!zavrsen(sastanak.krajSkupstine) && poceo(sastanak.pocetakSkupstine)\\\">SASTANAK JE U TOKU</span>\\n                <span class=\\\"super-high-impact-text\\\" *ngIf=\\\"zavrsen(sastanak.krajSkupstine)\\\">SASTANAK JE ZAVRSEN</span>\\n            </td>\\n        </tr>\\n        <tr>\\n            <td>\\n                <span id = \\\"pocetakSkupstine\\\" class=\\\"low-impact-text\\\">Pocetak skupstine - {{sastanak.pocetakSkupstine | date: \\\"HH:mm dd.MM.yyyy\\\"}}</span>\\n            </td>\\n        </tr>\\n        <tr>\\n            <td>\\n                <span class=\\\"low-impact-text\\\">Kraj skupstine - {{sastanak.krajSkupstine | date: \\\"HH:mm dd.MM.yyyy\\\"}}</span>\\n            </td>\\n        </tr>\\n        <tr>\\n            <td>\\n                <span *ngIf=\\\"dozvola(sastanak.pocetakSkupstine)\\\">\\n                    <a [routerLink]=\\\"['izmena',sastanak.id]\\\"><span class=\\\"operacije lower-impact-text\\\">izmeni</span> </a>\\n                </span>\\n                <span *ngIf=\\\"dozvola(sastanak.pocetakSkupstine)\\\">\\n                    <a (click)=\\\"brisi(sastanak.id)\\\"><span class=\\\"operacije lower-impact-text\\\">otkazi sastanak</span></a>\\n                </span>\\n                <span class=\\\"tacke\\\">\\n                    <a *ngIf=\\\"!zavrsen(sastanak.krajSkupstine)\\\" [routerLink]=\\\"[sastanak.id, 'tacke']\\\"><span class=\\\"operacije lower-impact-text\\\">Pregledaj tacke</span></a>\\n                </span>\\n                <span class=\\\"zapisnik\\\">\\n                    <a *ngIf=\\\"zavrsen(sastanak.krajSkupstine)\\\" [routerLink]=\\\"[sastanak.id, 'tacke']\\\"><span class=\\\"operacije lower-impact-text\\\">Pregledaj zapisnik</span></a>\\n                </span>\\n            </td>\\n        </tr>\\n        </table>\\n    </div>\\n    \\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { AuthenticationService } from '../..//services/authentication/authentication.service';\nimport { UtilService } from '../..//services/util/util.service';\nimport { ZgradaService } from '../..//services/zgrada/zgrada.service';\nimport { Pager } from '../../model/pager';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-sastanci',\n  templateUrl: './sastanci.component.html',\n  styleUrls: ['../zgrada.component.scss']\n})\nexport class SastanciComponent  {\n\n  constructor(private router: Router, private route: ActivatedRoute, private utilService: UtilService,\n     private zgradaService : ZgradaService, private toastrService: ToastrService) { }\n\n  zgradaId : number;\n  sub: any;\n  sastanci;\n\n  k_email : string;\n  k_uloga : string;\n  k_zgrada : number;\n\n  kriterijum: number = 0;\n\n  ngOnInit(){\n    this.k_email = this.utilService.email();\n    this.k_uloga = this.utilService.uloga();\n    this.k_zgrada = this.utilService.zgrada();\n\n    this.sub = this.route.parent.params.subscribe((params: Params) => {\n      this.zgradaId = Number(params['id']);\n    });\n    \n  }\n\n  izlistaj(pager: Pager){\n    this.zgradaService.getSastanci(this.zgradaId, pager.trenutnaStrana-1, pager.velicinaStrane,\n      this.kriterijum)\n    .subscribe(\n      (res) => {\n        this.sastanci = res.body as any[];\n        this.utilService.updateUkupnoStrana.emit(Number(res.headers.get(\"X-ukupno-strana\")));\n      },\n      (error) => {\n        this.toastrService.error(error.error);\n      }\n    )\n  }\n\n\n  dozvolaDodavanja(){\n    return this.k_uloga === \"PREDSEDNIK_SKUPSTINE\" && this.zgradaId === this.k_zgrada;\n  }\n\n  dozvola(datum){\n    return this.k_uloga === \"PREDSEDNIK_SKUPSTINE\" && this.zgradaId === this.k_zgrada && (new Date().getTime() <= new Date(datum).getTime());\n  }\n\n  poceo(datum){\n    return (new Date().getTime() >= new Date(datum).getTime());\n  }\n  \n  zavrsen(datum){\n    return (new Date().getTime() >= new Date(datum).getTime());\n  }\n\n  onChange(){\n    this.utilService.refreshPagination.emit(0);\n  }\n\n  brisi(id) {\n    this.zgradaService.deleteSastanak(id).subscribe(\n      (result) => {\n        this.utilService.refreshPagination.emit(0);\n        this.toastrService.success(\"sastanak uspesno otkazan\");\n      },\n      (error) => {\n        this.toastrService.error(error.error);\n      }\n    )\n  }\n\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n  }\n}","module.exports = \"<br>\\n<div class=\\\"row justify-content-md-center\\\">\\n  <div class=\\\"col-md-10\\\">\\n    <div class=\\\"row\\\">\\n      <label class=\\\"col-md-2\\\">Prikazi: </label>\\n      <select class=\\\"form-control col-md-2\\\" id=\\\"prikaz\\\" [(ngModel)]=\\\"pager.velicinaStrane\\\" (change)=\\\"promeniVelicinu()\\\">\\n        <option value=\\\"10\\\">10</option>\\n        <option value=\\\"25\\\">25</option>\\n        <option value=\\\"50\\\">50</option>\\n      </select>\\n    </div>\\n    <br>\\n    <table class=\\\"table table-hover\\\">\\n      <thead>\\n        <tr class=\\\"table-primary d-flex\\\">\\n          <th class=\\\"col-md-2\\\">Broj stana</th>\\n          <th class=\\\"col-md-6\\\">Vlasnik</th>\\n          <th class=\\\"col-md-2\\\">Broj stanara</th>\\n          <th class=\\\"col-md-2\\\"></th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr class=\\\"table-secondary d-flex\\\" *ngFor=\\\"let stan of stanovi; let i = index\\\">\\n          <th class=\\\"col-md-2\\\">{{stan.broj}}</th>\\n          <td class=\\\"col-md-6\\\" *ngIf=\\\"stan.vlasnik\\\">\\n            <a routerLink=\\\"/stanar/{{stan.vlasnik.id}}\\\">{{stan.vlasnik.naziv}} </a><b> ({{stan.vlasnik.email}})</b>\\n          </td>\\n          <td class=\\\"col-md-6\\\" *ngIf=\\\"!stan.vlasnik\\\">Nema vlasnika</td>\\n          <th class=\\\"col-md-2\\\">{{stan.brojStanara}}</th>\\n          <td class=\\\"col-md-2\\\"><a class=\\\"btn btn-primary\\\" routerLink=\\\"/stan/{{stan.id}}\\\">Vlasnik i stanari</a></td>\\n        </tr>\\n      </tbody>\\n    </table>\\n  </div>\\n  <div>\\n    <app-pager [pager]=\\\"pager\\\" (izmenaEvent)=\\\"izlistajStanove($event)\\\"></app-pager>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Stan } from '../../model/Stan';\nimport { Pager } from '../../model/pager';\nimport { UtilService } from '../../services/util/util.service';\nimport { AdministratorService } from '../../services/administrator/administrator.service';\nimport { Input } from '@angular/core';\nimport { ActivatedRoute, Params } from '@angular/router';\n\n@Component({\n    selector: 'app-stanovi',\n    templateUrl: './stanovi.component.html'\n})\nexport class StanoviComponent implements OnInit {\n    id: number; // id zgrade\n    stanovi: Stan[];\n    pager: Pager;\n\n    constructor(\n        private route: ActivatedRoute,\n        private administratorService: AdministratorService,\n        private utilService: UtilService\n    ) { }\n\n    ngOnInit() {\n        this.pager = {\n            trenutnaStrana: 1,\n            velicinaStrane: 10,\n            ukupnoStrana: undefined,\n            prvaStrana: undefined,\n            poslednjaStrana: undefined,\n            strane: []\n        }\n        this.route.parent.params.subscribe(\n            (params: Params) => {\n                this.id = Number(params['id']);\n            }\n        )\n        this.izlistajStanove();\n    }\n\n    izlistajStanove() {\n        this.administratorService.izlistajStanove(this.id, this.pager.trenutnaStrana-1, this.pager.velicinaStrane).subscribe(\n            res => {\n                this.stanovi = res.body as Stan[];\n                this.pager.ukupnoStrana = Number(res.headers.get('Ukupno-Strana'));\n                this.pager = this.utilService.getPager(this.pager);\n            }\n        )\n    }\n\n    promeniVelicinu(){\n        this.pager.trenutnaStrana = 1;\n        this.izlistajStanove();\n    }\n\n}\n","module.exports = \"<!-- Komponenta za navigation bar -->\\n\\n<div class=\\\"sadrzaj container\\\">\\n  <form class=\\\"noviPtdr box\\\" name= \\\"noviPtdr\\\" (ngSubmit)=\\\"noviPtdr()\\\" novalidate>\\n    <fieldset>\\n      <legend>Novi predlog tacke dnevnog reda</legend>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"tekst\\\" class=\\\"control-label\\\">Unesite tekst predloga tacke dnevnog reda:</label>\\n        <textarea type=\\\"text\\\" class=\\\"form-control\\\" rows=\\\"10\\\" id=\\\"tekstPtdr\\\" name=\\\"tekstPtdr\\\" \\n        (input)=\\\"proveriTekst()\\\"  placeholder=\\\"Tekst\\\" [(ngModel)]=\\\"tekstPtdr\\\" required>\\n        </textarea>\\n      </div>\\n      <div class=\\\"form-group center\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"noviPtdr()\\\" [disabled]=\\\"!validanPtdr\\\">Potvrdi</button>\\n      </div>\\n    </fieldset>\\n  </form>\\n</div>\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ZgradaService } from '../../../services/zgrada/zgrada.service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-dodaj-ptdr',\n  templateUrl: './dodaj-ptdr.component.html',\n  styleUrls: ['../../zgrada.component.scss']\n})\nexport class DodajPtdrComponent implements OnInit {\n  tekstPtdr: string;\n  validanTekst: boolean = undefined;\n  validanPtdr: boolean = false;\n\n  constructor(private router: Router, private toastrService: ToastrService,\n    private zgradaService: ZgradaService) { }\n\n  ngOnInit() {\n  }\n\n  noviPtdr() {  \n    this.zgradaService.noviPtdr(this.tekstPtdr)\n        .subscribe(\n            result => {\n                this.toastrService.success(\"Predlog tacke dnevnog reda uspesno dodat\");\n            },\n            error => {\n                this.toastrService.error(error.error);\n            }\n        )\n  }\n  \n  proveriTekst(){\n    if (this.tekstPtdr.trim() === \"\") {\n      this.validanTekst = false;\n    } else {\n      this.validanTekst = true;\n    }\n    this.proveriDugme();\n  }\n\n\n  proveriDugme() {\n    if (this.validanTekst) {\n        this.validanPtdr = true;\n    } else {\n        this.validanPtdr = false;\n    }\n  }\n\n}\n","module.exports = \"<table>\\n    <tr>\\n        <td>\\n            <b class=\\\"naziv\\\" *ngIf=\\\"skupstina\\\">{{skupstina.predsednikSkupstine.naziv}} </b> \\n            <span class=\\\"lower-impact-text\\\"> je zakazao/la sastanak</span>\\n        </td> \\n    </tr>\\n    <tr>\\n        <td>\\n            <span class=\\\"low-impact-text\\\" *ngIf=\\\"skupstina\\\">Pocetak skupstine - {{skupstina.pocetakSkupstine | date: \\\"HH:mm dd.MM.yyyy\\\"}}</span>\\n        </td>\\n    </tr>\\n    <tr>\\n        <td>\\n            <span class=\\\"low-impact-text\\\" *ngIf=\\\"skupstina\\\">Kraj skupstine - {{skupstina.krajSkupstine | date: \\\"HH:mm dd.MM.yyyy\\\"}}</span>\\n        </td>\\n    </tr>\\n</table>\\n\\n<app-paginacija (izmenaEvent)=\\\"izlistaj($event)\\\">Naslov</app-paginacija>\\n\\n\\n<div *ngFor=\\\"let ptdr of tacke; let i = index\\\">\\n    <div class=\\\"row blob\\\"> \\n        <table>\\n        <tr>\\n            <td>\\n                <b class=\\\"naziv\\\">{{ptdr.stanar.naziv}} </b> \\n                <span class=\\\"lower-impact-text\\\"> je postavio/la predlog tacke dnevnog reda u <i>{{ptdr.datum | date: \\\"HH:mm dd.MM.yyyy\\\"}}</i></span>\\n            </td>\\n            \\n        </tr>\\n        <tr>\\n            <td>\\n                <span class=\\\"line-breaker\\\" [hidden] = \\\"editable[i]\\\" #ref>{{ptdr.tekst}}</span>\\n                \\n                <span class=\\\"line-breaker izmena\\\" contenteditable=\\\"true\\\" [hidden] = \\\"!editable[i]\\\" \\n                id = \\\"noviTekst\\\" style=\\\"color:blue\\\" name = \\\"noviTekst\\\" #ref1>{{ptdr.tekst}}</span>\\n            </td>\\n        </tr>\\n        <tr>\\n            <span style=\\\"color:red\\\" >Doneta odluka:</span>\\n            <span class=\\\"line-breaker\\\"  [hidden] = \\\"zavrsen || odluke[i]\\\" >{{ptdr.odluka}}</span>\\n            <span class=\\\"line-breaker odluka\\\" contenteditable=\\\"true\\\" [hidden] = \\\"!odluke[i]\\\" \\n                 style=\\\"color:blue\\\" name = \\\"noviTekst\\\" #ref2>{{ptdr.odluka}}</span>\\n            \\n        </tr>\\n        <tr>\\n            <td>\\n                <span *ngIf=\\\"dozvola(ptdr.stanar.email)\\\">\\n                    <a (click)=\\\"izmeni(i)\\\"  [hidden] = \\\"editable[i]\\\"><span class=\\\"operacije lower-impact-text\\\">izmeni</span> </a>\\n                    <a (click)=\\\"potvrdi(i,ref1)\\\"[hidden] = \\\"!editable[i]\\\">\\n                        <span   style=\\\"color:green\\\" class=\\\"operacije lower-impact-text\\\">potvrdi</span> </a>\\n                    <a (click)=\\\"odustani(i,ref1)\\\" [hidden] = \\\"!editable[i]\\\" >\\n                        <span  style = \\\"color:red\\\" class=\\\"operacije lower-impact-text\\\"> <font>odustani</font></span> </a>\\n                    <a (click)=\\\"ukloniIzSkupstine(ptdr.id)\\\"><span class=\\\"operacije lower-impact-text\\\">ukloni</span></a>\\n                </span>\\n                \\n                <span class=\\\"anketa\\\">\\n                    <a [routerLink]=\\\"['/zgrada', zgradaId, 'sastanci', skupstinaId, 'tacka', ptdr.id, 'anketa']\\\"><span class=\\\"operacije lower-impact-text\\\">Pregledaj anketu</span></a>\\n                </span>\\n                <span *ngIf=\\\"dozvolaOdluke()\\\">\\n                    <a (click)=\\\"izmeniOdluku(i)\\\"  [hidden] = \\\"odluke[i]\\\"><span class=\\\"operacije lower-impact-text\\\">donesi odluku</span> </a>\\n                    <a (click)=\\\"potvrdiOdluku(i,ref2)\\\"[hidden] = \\\"!odluke[i]\\\">\\n                        <span   style=\\\"color:green\\\" class=\\\"operacije lower-impact-text\\\">potvrdi</span> </a>\\n                    <a (click)=\\\"izmeniOdluku(i)\\\" [hidden] = \\\"!odluke[i]\\\" >\\n                        <span  style = \\\"color:red\\\" class=\\\"operacije lower-impact-text\\\"> <font>odustani</font></span> </a>\\n                </span>\\n            </td>\\n        </tr>\\n        </table>\\n    </div>  \\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { UtilService } from '../../../services/util/util.service';\nimport { AuthenticationService } from '../../../services/authentication/authentication.service';\nimport { ZgradaService } from '../../../services/zgrada/zgrada.service';\nimport { Pager } from '../../../model/pager';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-tacke-sastanci',\n  templateUrl: './tacke-sastanci.component.html',\n  styleUrls: ['../../zgrada.component.scss']\n})\nexport class TackeSastanciComponent implements OnInit {\n\n  constructor(private router: Router, private route: ActivatedRoute, private utilService: UtilService,\n    private authenticateService: AuthenticationService, private zgradaService : ZgradaService,\n      private toastrService: ToastrService) { }\n\n  zgradaId : number;\n  skupstinaId : number;\n  skupstina;\n  pocetakSkupstine;\n  krajSkupstine;\n  sub: any;\n  tacke;\n  zavrsen: boolean;\n\n  k_email : string;\n  k_uloga : string;\n  k_zgrada : number;\n  \n  editable = [];\n  odluke = [];\n\n  ngOnInit() {\n\n    this.k_email = this.utilService.email();\n    this.k_uloga = this.utilService.uloga();\n    this.k_zgrada = this.utilService.zgrada();\n\n    this.sub = this.route.parent.params.subscribe((params: Params) => {\n      this.zgradaId = Number(params['id']);\n    });\n\n    this.skupstinaId = Number(this.route.snapshot.paramMap.get(\"idSastanka\"));\n    \n    this.zgradaService.getSastanak(this.skupstinaId)\n    .subscribe(\n      (res) => {\n        this.skupstina = res;\n        this.pocetakSkupstine = this.skupstina.pocetakSkupstine;\n        this.krajSkupstine = this.skupstina.krajSkupstine;\n        this.zavrsen = (new Date().getTime() <= new Date(this.pocetakSkupstine).getTime());\n      },\n      (error) => {\n        this.toastrService.error(error.error);\n      }\n    )  \n  \n  }\n\n  izlistaj(pager: Pager){\n\n    this.zgradaService.getDnevniRed(this.skupstinaId, pager.trenutnaStrana-1, pager.velicinaStrane)\n    .subscribe(\n      (res) => {\n        this.tacke = res.body as any[];\n        this.editable = [];\n        this.odluke = []\n        this.utilService.updateUkupnoStrana.emit(Number(res.headers.get(\"X-ukupno-strana\")));\n      },\n      (error) => {\n        this.toastrService.error(error.error);\n      }\n    )\n  }\n\n  dozvola(autor){\n    let datum = new Date();\n    return (autor === this.k_email || this.k_uloga === \"PREDSEDNIK_SKUPSTINE\") && this.zgradaId === this.k_zgrada && this.pocetakSkupstine > datum;\n  }\n\n  dozvolaOdluke(){\n    let datum = new Date();\n    return (this.k_uloga === \"PREDSEDNIK_SKUPSTINE\") && this.zgradaId === this.k_zgrada && this.krajSkupstine < datum;\n  }\n\n  izmeni(i) {\n    this.editable[i] = !this.editable[i];\n  }\n\n  izmeniOdluku(i) {\n    this.odluke[i] = !this.odluke[i];\n  }\n\n  potvrdi(i,span){\n    if (span.innerHTML.trim() === \"\"){\n      this.editable[i] = !this.editable[i];\n      span.innerHTML = this.tacke[i].tekst;\n    }\n    else{\n    this.zgradaService.izmenaPtdra(this.tacke[i].id, span.innerHTML).subscribe(\n      (result) => {\n        this.utilService.refreshPagination.emit(0);\n        this.toastrService.success(\"Tacka uspesno izmenjena\");\n      },\n      (error) => {\n        this.toastrService.error(error.error);\n      }\n    )\n  }\n  } \n\n\n  odustani(i,span){\n    if (span.innerHTML.trim() === \"\"){\n      this.editable[i] = !this.editable[i];\n      span.innerHTML = this.tacke[i].tekst;\n    }\n    else{\n      this.editable[i] = !this.editable[i];\n    }\n  }\n\n  potvrdiOdluku(i,span){\n    this.zgradaService.donosenjeOdluke(this.tacke[i].id, span.innerHTML).subscribe(\n      (result) => {\n        this.utilService.refreshPagination.emit(0);\n        this.toastrService.success(\"Odluka je doneta!\");\n      },\n      (error) => {\n        this.toastrService.error(error.error);\n      }\n    )\n  } \n\n\n\n\n  ukloniIzSkupstine(id) {\n    this.zgradaService.ukloniPtdrIzSkupstine(id, this.skupstina.id).subscribe(\n      (result) => {\n        this.utilService.refreshPagination.emit(0);\n        this.toastrService.success(\"Tacka uspesno uklonjena\");\n      },\n      (error) => {\n        this.toastrService.error(error.error);\n      }\n    )\n  }\n\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n  }\n\n}\n","module.exports = \"<app-paginacija (izmenaEvent)=\\\"izlistaj($event)\\\"></app-paginacija>\\n<a *ngIf=\\\"dozvola2()\\\" routerLink=\\\"../ptdr/dodaj\\\">\\n    <button class=\\\"btn\\\" style=\\\"cursor: pointer;\\\"><b>Dodaj</b></button>\\n</a>\\n\\n<select *ngIf=\\\"dozvola2()\\\" class=\\\"custom-select\\\" style=\\\"margin-left:150px; width:300px;\\\" [(ngModel)]=\\\"skupstina\\\" [class.is-invalid]=\\\"skupstina === undefined\\\">\\n    <option [ngValue]=\\\"undefined\\\" disabled>Izaberite skupstinu u koju zelite dodati tacku</option>\\n    <option *ngFor=\\\"let skupstina of skupstineKojePredstoje\\\" [ngValue]=\\\"skupstina\\\">{{skupstina.pocetakSkupstine | date: \\\"HH:mm dd.MM.yyyy\\\"}} - {{skupstina.krajSkupstine | date: \\\"HH:mm dd.MM.yyyy\\\"}}</option>\\n</select>\\n\\n<div *ngFor=\\\"let ptdr of tacke; let i = index\\\">\\n    <div class=\\\"row blob\\\"> \\n        <table>\\n        <tr>\\n            <td>\\n                <b class=\\\"naziv\\\">{{ptdr.stanar.naziv}} </b> \\n                <span class=\\\"lower-impact-text\\\"> je postavio/la predlog tacke dnevnog reda u <i>{{ptdr.datum | date: \\\"HH:mm dd.MM.yyyy\\\"}}</i></span>\\n            </td> \\n            <td>\\n                <button *ngIf=\\\"dozvola2()\\\" style=\\\"margin-left:150px;\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\" [disabled]=\\\"skupstina === undefined\\\" (click)=\\\"dodajPtdrUSkupstinu(ptdr.id)\\\">Dodaj predlog tacke u izabranu skupstinu</button>\\n            </td> \\n        </tr>\\n        <tr>\\n            <td>\\n                <span id = \\\"stariTekst\\\" class=\\\"line-breaker\\\" [hidden] = \\\"editable[i]\\\" #ref>{{ptdr.tekst}}</span>\\n                <span class=\\\"line-breaker izmena\\\" contenteditable=\\\"true\\\" [hidden] = \\\"!editable[i]\\\" \\n                id = \\\"noviTekst\\\" style=\\\"color:blue\\\" name = \\\"noviTekst\\\" #ref1>{{ptdr.tekst}}</span>\\n            </td>\\n        </tr>\\n        <tr>\\n            <td>\\n                <span *ngIf=\\\"dozvola(ptdr.stanar.email)\\\">\\n                    <a (click)=\\\"izmeni(i)\\\"  [hidden] = \\\"editable[i]\\\"><span class=\\\"operacije lower-impact-text\\\">izmeni</span> </a>\\n                    <a (click)=\\\"potvrdi(i,ref1)\\\"[hidden] = \\\"!editable[i]\\\">\\n                        <span   style=\\\"color:green\\\" class=\\\"operacije lower-impact-text\\\">potvrdi</span> </a>\\n                    <a (click)=\\\"odustani(i,ref1)\\\" [hidden] = \\\"!editable[i]\\\" >\\n                        <span  style = \\\"color:red\\\" class=\\\"operacije lower-impact-text\\\"> <font>odustani</font></span> </a>\\n                    <a (click)=\\\"brisi(ptdr.id)\\\"><span class=\\\"operacije lower-impact-text\\\">brisi</span></a>\\n                </span>\\n            </td>\\n        </tr>\\n        </table>\\n    </div>  \\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { AuthenticationService } from '../..//services/authentication/authentication.service';\nimport { UtilService } from '../..//services/util/util.service';\nimport { ZgradaService } from '../..//services/zgrada/zgrada.service';\nimport { Pager } from '../../model/pager';\nimport { Korisnik } from '../../model/Korisnik';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-tacke',\n  templateUrl: './tacke.component.html',\n  styleUrls: ['../zgrada.component.scss']\n})\nexport class TackeComponent  {\n\n  constructor(private router: Router, private route: ActivatedRoute, private utilService: UtilService,\n     private authenticateService: AuthenticationService, private zgradaService : ZgradaService,\n     private toastrService: ToastrService) { }\n\n  zgradaId : number;\n  sub: any;\n  tacke;\n\n  k_email : string;\n  k_uloga : string;\n  k_zgrada : number;\n\n  skupstina;\n  skupstineKojePredstoje;\n\n  editable = [];\n\n  ngOnInit(){\n\n    this.k_email = this.utilService.email();\n    this.k_uloga = this.utilService.uloga();\n    this.k_zgrada = this.utilService.zgrada();\n\n    this.sub = this.route.parent.params.subscribe((params: Params) => {\n      this.zgradaId = Number(params['id']);\n    });\n    \n  }\n  \n  izlistaj(pager: Pager){\n    this.skupstina = undefined;\n\n    this.zgradaService.getPtdri(this.zgradaId, pager.trenutnaStrana-1, pager.velicinaStrane)\n    .subscribe(\n      (res) => {\n        this.tacke = res.body as any[];\n        this.editable = [];\n        \n        this.utilService.updateUkupnoStrana.emit(Number(res.headers.get(\"X-ukupno-strana\")));\n      },\n      (error) => {\n        this.toastrService.error(error.error);\n      }\n    )\n\n    if (this.k_uloga === \"PREDSEDNIK_SKUPSTINE\") {\n      this.zgradaService.getSastanciKojiPredstoje(this.zgradaId)\n    .subscribe(\n      (res) => {\n        this.skupstineKojePredstoje = res;\n      },\n      (error) => {\n        this.toastrService.error(error.error);\n      }\n    )\n    }\n  }\n\n  dozvola(autor){\n    return (autor === this.k_email || this.k_uloga === \"PREDSEDNIK_SKUPSTINE\") && this.zgradaId === this.k_zgrada;\n  }\n\n  dozvola2() {\n    return this.k_uloga === \"PREDSEDNIK_SKUPSTINE\" && this.zgradaId === this.k_zgrada; \n  }\n\n  izmeni(i) {\n    this.editable[i] = !this.editable[i];\n  }\n\n  potvrdi(i,span){\n    if (span.innerHTML.trim() === \"\"){\n      this.editable[i] = !this.editable[i];\n      span.innerHTML = this.tacke[i].tekst;\n    }\n    else{\n    this.zgradaService.izmenaPtdra(this.tacke[i].id, span.innerHTML).subscribe(\n      (result) => {\n        this.toastrService.success(\"Tacka uspesno izmenjena\");\n        this.utilService.refreshPagination.emit(0);\n      },\n      (error) => {\n        this.toastrService.error(error.error);\n      }\n    )\n  }\n  } \n\n  brisi(id) {\n    this.zgradaService.deletePtdr(id).subscribe(\n      (result) => {\n        this.toastrService.success(\"Tacka uspesno izbrisana\");\n        this.utilService.refreshPagination.emit(0);\n      },\n      (error) => {\n        this.toastrService.error(error.error);\n      }\n    )\n  }\n\n  dodajPtdrUSkupstinu(id: number) {\n    this.zgradaService.dodajPtdrUSkupstinu(id, this.skupstina.id).subscribe(\n      (result) => {\n        this.toastrService.success(\"Tacka uspesno dodata u skupstinu\");\n        this.utilService.refreshPagination.emit(0);\n      },\n      (error) => {\n        this.toastrService.error(error.error);\n      }\n    )\n  }\n  \n\n  odustani(i,span){\n    if (span.innerHTML.trim() === \"\"){\n      this.editable[i] = !this.editable[i];\n      span.innerHTML = this.tacke[i].tekst;\n    }\n    else{\n      this.editable[i] = !this.editable[i];\n    }\n  }\n\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n  }\n  \n}","module.exports = \"<div class=\\\"container\\\">\\n  <h2>Zgrada</h2>\\n  <br>\\n  <div *ngIf=\\\"zgrada\\\">\\n    <h5><b>Adresa: </b>{{zgrada.ulica}} {{zgrada.broj}}, {{zgrada.lokacija}}</h5>\\n    <h5 *ngIf=\\\"zgrada.predsednikSkupstine\\\">\\n      <b>Predsednik: </b><a routerLink=\\\"/stanar/{{zgrada.predsednikSkupstine.id}}\\\">\\n        {{zgrada.predsednikSkupstine.naziv}} </a> ({{zgrada.predsednikSkupstine.email}})\\n    </h5>\\n    <h5 *ngIf=\\\"!zgrada.predsednikSkupstine\\\"><b>Predsednik: </b> Nema predsednika!</h5>\\n  </div>\\n  <br>\\n  <div class=\\\"col-md-12\\\">\\n    <app-navbar-zgrada [id]=\\\"id\\\"></app-navbar-zgrada>\\n    <router-outlet></router-outlet>\\n  </div>\\n</div>\\n\"","module.exports = \"div.blob {\\n  border-radius: 10px;\\n  background-color: #effeff;\\n  padding: 10px;\\n  margin-top: 20px; }\\n\\n.sadrzaj {\\n  margin-top: 20px; }\\n\\n.super-high-impact-text {\\n  color: red; }\\n\\n.low-impact-text {\\n  color: #545454; }\\n\\n.lower-impact-text {\\n  color: #808080; }\\n\\n.green-impact-text {\\n  color: green; }\\n\\n.operacije {\\n  margin-left: 10px;\\n  cursor: pointer; }\\n\\n.operacije:hover {\\n  text-decoration: underline; }\\n\\n.naziv {\\n  font-size: 18px;\\n  color: #212529; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvemdyYWRhL0M6XFxVc2Vyc1xcTGVub3ZvXFxEZXNrdG9wXFxLdXJzZXZpXFxLVFMtTldULWFuZ3VsYXItbWFzdGVyIC0gQ29weS9zcmNcXGFwcFxcemdyYWRhXFx6Z3JhZGEuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxtQkFBbUI7RUFDbkIseUJBQXlCO0VBQ3pCLGFBQWE7RUFDYixnQkFBZ0IsRUFBQTs7QUFHcEI7RUFDSSxnQkFBZ0IsRUFBQTs7QUFHcEI7RUFDSSxVQUFVLEVBQUE7O0FBR2Q7RUFDSSxjQUFjLEVBQUE7O0FBR2xCO0VBQ0ksY0FBYyxFQUFBOztBQUdsQjtFQUNJLFlBQVksRUFBQTs7QUFHaEI7RUFDSSxpQkFBaUI7RUFDakIsZUFBZSxFQUFBOztBQUVuQjtFQUNJLDBCQUEwQixFQUFBOztBQUU5QjtFQUNJLGVBQWU7RUFDZixjQUFjLEVBQUEiLCJmaWxlIjoic3JjL2FwcC96Z3JhZGEvemdyYWRhLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiZGl2LmJsb2Ige1xuICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2VmZmVmZjtcbiAgICBwYWRkaW5nOiAxMHB4O1xuICAgIG1hcmdpbi10b3A6IDIwcHg7XG59XG5cbi5zYWRyemFqIHtcbiAgICBtYXJnaW4tdG9wOiAyMHB4O1xufVxuXG4uc3VwZXItaGlnaC1pbXBhY3QtdGV4dHtcbiAgICBjb2xvcjogcmVkO1xufVxuXG4ubG93LWltcGFjdC10ZXh0IHtcbiAgICBjb2xvcjogIzU0NTQ1NDtcbn1cblxuLmxvd2VyLWltcGFjdC10ZXh0IHtcbiAgICBjb2xvcjogIzgwODA4MDtcbn1cblxuLmdyZWVuLWltcGFjdC10ZXh0e1xuICAgIGNvbG9yOiBncmVlbjtcbn1cblxuLm9wZXJhY2lqZXtcbiAgICBtYXJnaW4tbGVmdDogMTBweDtcbiAgICBjdXJzb3I6IHBvaW50ZXI7IFxufVxuLm9wZXJhY2lqZTpob3ZlciB7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG59XG4ubmF6aXZ7XG4gICAgZm9udC1zaXplOiAxOHB4O1xuICAgIGNvbG9yOiAjMjEyNTI5O1xufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Zgrada } from '../model/zgrada';\nimport { ZgradaService } from '../services/zgrada/zgrada.service';\n\n@Component({\n    selector: 'app-zgrada',\n    templateUrl: './zgrada.component.html',\n    styleUrls: ['./zgrada.component.scss']\n})\nexport class ZgradaComponent  {\n    id: number;\n    zgrada: Zgrada;\n\n    constructor(\n        private route: ActivatedRoute,\n        private zgradaService: ZgradaService\n    ) {}\n\n    ngOnInit() {\n        this.route.params.subscribe(\n            params => {\n                this.id = +params['id']; \n                this.getZgrada();\n                console.log(this.zgrada);\n            }\n        )\n    }\n\n    getZgrada() {\n        this.zgradaService.getZgrada(this.id).subscribe(\n            data => this.zgrada = data\n        )\n    }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ToastrModule } from 'ngx-toastr';\n\n\nimport { PaginacijaModule } from '../paginacija/paginacija.module';\nimport { ZgradaComponent } from './zgrada.component';\nimport { ObavestenjaComponent } from './obavestenja/obavestenja.component';\nimport { SastanciComponent } from './sastanci/sastanci.component';\nimport { KvaroviComponent } from './kvarovi/kvarovi.component';\nimport { TackeComponent } from './tacke/tacke.component';\nimport { PitanjeComponent } from './ankete/pitanje/pitanje.component';\nimport { IzlistajAnketeComponent } from './ankete/izlistaj-ankete/izlistaj-ankete.component';\nimport { DodajPitanjeComponent } from './ankete/dodaj-pitanje/dodaj-pitanje.component';\nimport { DodajObavestenjeComponent } from './obavestenja/dodaj-obavestenje/dodaj-obavestenje.component';\nimport { DodajPtdrComponent } from './tacke/dodaj-ptdr/dodaj-ptdr.component';\nimport { DodajSastanakComponent} from './sastanci/dodaj-sastanak/dodaj-sastanak.component'\nimport { DodajKvarComponent} from './kvarovi/dodaj-kvar/dodaj-kvar.component'\nimport { KvarComponent} from './kvarovi/kvar/kvar.component'\nimport { KomentariComponent} from './kvarovi/komentari/komentari.component'\nimport { MoguciOdgovorniModal} from './kvarovi/moguci-odgovorni/moguci-odgovorni.modal'\nimport { IzmenaSastankaComponent} from './sastanci/izmena-sastanka/izmena-sastanka.component';\nimport { TackeSastanciComponent } from './tacke/tacke-sastanci/tacke-sastanci.component';\nimport { StanoviComponent } from './stanovi/stanovi.component';\nimport { IzmenaKvaraComponent } from './kvarovi/izmena-kvara/izmena-kvara.component';\nimport { ZakaziPopravkuComponent } from './kvarovi/zakazi-popravku/zakazi-popravku.component';\nimport { NavbarZgradaComponent } from './navbar-zgrada/navbar-zgrada.component';\n\n\n@NgModule({\n    declarations: [\n        ZgradaComponent,\n        ObavestenjaComponent,\n        SastanciComponent,\n        KvaroviComponent,\n        TackeComponent,\n        TackeSastanciComponent,\n        PitanjeComponent,\n        IzlistajAnketeComponent,\n        DodajPitanjeComponent,\n        DodajObavestenjeComponent,\n        DodajPtdrComponent,\n        DodajSastanakComponent,\n        DodajKvarComponent,\n        KvarComponent,\n        KomentariComponent,\n        MoguciOdgovorniModal,\n        IzmenaSastankaComponent,\n        StanoviComponent,\n        IzmenaKvaraComponent,\n        ZakaziPopravkuComponent,\n        NavbarZgradaComponent,\n        \n    ],\n    imports: [\n        PaginacijaModule,\n        BrowserModule,\n        FormsModule,\n        ReactiveFormsModule,\n        CommonModule,\n        BrowserAnimationsModule, // required animations module\n        ToastrModule.forRoot({\n            timeOut: 5000,\n            positionClass: 'toast-top-center',\n            preventDuplicates: true,\n        }),\n        HttpClientModule,\n        RouterModule,\n        CommonModule\n    ],\n\n    providers: [],\n\n    bootstrap: [ZgradaComponent]\n})\nexport class ZgradaModule { }","import { Routes } from '@angular/router';\nimport { RoleGuardService } from '../services/role-guard/role-guard.service';\n\nimport { ZgradaComponent } from './zgrada.component';\nimport { ObavestenjaComponent } from './obavestenja/obavestenja.component';\nimport { TackeComponent } from './tacke/tacke.component';\nimport { TackeSastanciComponent } from './tacke/tacke-sastanci/tacke-sastanci.component';\nimport { SastanciComponent } from './sastanci/sastanci.component';\nimport { KvaroviComponent } from './kvarovi/kvarovi.component';\nimport { IzlistajAnketeComponent } from './ankete/izlistaj-ankete/izlistaj-ankete.component';\nimport { DodajObavestenjeComponent } from './obavestenja/dodaj-obavestenje/dodaj-obavestenje.component';\nimport { DodajPtdrComponent } from './tacke/dodaj-ptdr/dodaj-ptdr.component';\nimport { DodajSastanakComponent } from './sastanci/dodaj-sastanak/dodaj-sastanak.component';\nimport { DodajKvarComponent} from './kvarovi/dodaj-kvar/dodaj-kvar.component'\nimport { KvarComponent} from './kvarovi/kvar/kvar.component'\nimport { IzmenaSastankaComponent} from './sastanci/izmena-sastanka/izmena-sastanka.component';\nimport { StanoviComponent } from './stanovi/stanovi.component';\nimport { IzmenaKvaraComponent} from './kvarovi/izmena-kvara/izmena-kvara.component';\nimport { ZakaziPopravkuComponent} from './kvarovi/zakazi-popravku/zakazi-popravku.component';\n\nexport const zgradaRouting: Routes = [\n    { path: '',\n        redirectTo: 'obavestenja',\n        pathMatch: 'full'\n    },\n    { path: 'stanovi',\n        component: StanoviComponent,\n        canActivate: [RoleGuardService],\n        data: {ocekivaneUloge : 'ADMIN'}\n    },\n    { path: 'obavestenja', component: ObavestenjaComponent},\n    { path: 'sastanci', component: SastanciComponent},\n    { path: 'kvarovi', component: KvaroviComponent},\n    { path: 'tacke', component: TackeComponent},\n    { path: 'kvar/dodaj',\n        component: DodajKvarComponent,\n        canActivate: [RoleGuardService],\n        data : {ocekivaneUloge : 'STANAR|PREDSEDNIK_SKUPSTINE'}\n    },\n    { path: 'kvar/:kvarId', \n        component: KvarComponent,\n        canActivate: [RoleGuardService],\n        data : {ocekivaneUloge : 'STANAR|PREDSEDNIK_SKUPSTINE|INSTITUCIJA|FIRMA|ADMIN'}\n    },\n    { path: 'sastanci/:idSastanka/tacka/:idTacke/anketa', \n        component: IzlistajAnketeComponent,\n        canActivate: [RoleGuardService],\n        data : {ocekivaneUloge : 'STANAR|PREDSEDNIK_SKUPSTINE|ADMIN|INSTITUCIJA|FIRMA'}\n    },\n    { path: 'obavestenje/dodaj',\n        component: DodajObavestenjeComponent,\n        canActivate: [RoleGuardService],\n        data : {ocekivaneUloge : 'STANAR|PREDSEDNIK_SKUPSTINE'}\n    },\n    { path: 'ptdr/dodaj',\n        component: DodajPtdrComponent,\n        canActivate: [RoleGuardService],\n        data : {ocekivaneUloge : 'STANAR|PREDSEDNIK_SKUPSTINE'}\n    },\n    { path: 'sastanci/:idSastanka/tacke',\n        component: TackeSastanciComponent,\n        canActivate: [RoleGuardService],\n        data : {ocekivaneUloge : 'STANAR|PREDSEDNIK_SKUPSTINE|ADMIN|INSTITUCIJA|FIRMA'}\n    },\n    { path: 'sastanak/zakazi',\n        component: DodajSastanakComponent,\n        canActivate: [RoleGuardService],\n        data : {ocekivaneUloge : 'PREDSEDNIK_SKUPSTINE'}\n    },\n    { path: 'sastanci/izmena/:idSastanka',\n        component: IzmenaSastankaComponent,\n        canActivate: [RoleGuardService],\n        data : {ocekivaneUloge : 'PREDSEDNIK_SKUPSTINE'}\n    },\n    { path: 'kvar/:kvarId/izmena', \n        component: IzmenaKvaraComponent,\n        canActivate: [RoleGuardService],\n        data : {ocekivaneUloge : 'STANAR|PREDSEDNIK_SKUPSTINE'}\n    },\n    { path: 'kvar/:kvarId/zakazivanje', \n        component: ZakaziPopravkuComponent,\n        canActivate: [RoleGuardService],\n        data : {ocekivaneUloge : 'STANAR|PREDSEDNIK_SKUPSTINE|INSTITUCIJA|FIRMA'}\n    }\n];\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}